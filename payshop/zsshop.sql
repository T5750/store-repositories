/*
Navicat MySQL Data Transfer

Source Server         : mysql
Source Server Version : 50162
Source Host           : localhost:3306
Source Database       : zsshop

Target Server Type    : MYSQL
Target Server Version : 50162
File Encoding         : 65001

Date: 2017-02-04 17:33:10
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for d_article
-- ----------------------------
DROP TABLE IF EXISTS `d_article`;
CREATE TABLE `d_article` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL COMMENT '标题',
  `summary` text COMMENT '摘要',
  `releaseDate` datetime DEFAULT NULL COMMENT '发布时间',
  `clickHit` int(11) DEFAULT NULL,
  `replyHit` int(11) DEFAULT '0',
  `content` longtext,
  `keyWord` varchar(200) DEFAULT NULL,
  `state` int(11) DEFAULT '1' COMMENT '1存在 2 删除',
  `userid` bigint(20) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  `villageid` bigint(20) DEFAULT NULL,
  `username` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of d_article
-- ----------------------------

-- ----------------------------
-- Table structure for d_product
-- ----------------------------
DROP TABLE IF EXISTS `d_product`;
CREATE TABLE `d_product` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `tag` varchar(255) DEFAULT NULL,
  `remark` longtext,
  `summary` longtext,
  `clickHit` int(255) DEFAULT '0' COMMENT '0',
  `typeid` bigint(255) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  `typename` varchar(255) DEFAULT NULL,
  `type` bigint(255) DEFAULT NULL,
  `orderby` varchar(255) DEFAULT NULL,
  `prices` varchar(255) DEFAULT NULL,
  `imgmore` varchar(1000) DEFAULT NULL,
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记(0活null 正常 1,删除)',
  `replyhit` int(11) DEFAULT '0' COMMENT '评价量',
  `sellhit` int(11) DEFAULT '0' COMMENT '销售量',
  `iscom` int(255) DEFAULT NULL COMMENT '1推荐，2不推荐',
  `villageid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of d_product
-- ----------------------------
INSERT INTO `d_product` VALUES ('33', 'zscat分布式框架', 'spring,springmvc ,通用mapper, dubbo,zookeep', '<p style=\"margin-top: 1.12em; margin-bottom: 1.12em; margin-left: 42pt; padding: 0px; text-indent: 21pt;\">开源分布式框架zsCat 559182393</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; margin-left: 42pt; padding: 0px; text-indent: 21pt;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2nOAEpXXXXXXOXFXXXXXXXXXX_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2MmkOpXXXXXcBXpXXXXXXXXXX_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2Qwi2oVXXXXcCXpXXXXXXXXXX_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2FLC5oVXXXXb.XpXXXXXXXXXX_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2WwzyoVXXXXblXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"314\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2R9LyoVXXXXbcXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"553\" height=\"415\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2crHzoVXXXXa0XXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"553\" height=\"290\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2nsu2oVXXXXcFXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"553\" height=\"232\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB283y3oVXXXXcAXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"281\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2hEndoVXXXXaeXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"317\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2hffmoVXXXXc3XXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"396\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2VF11oVXXXXcvXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"93\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2oSHboVXXXXaEXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"102\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2eEPXoVXXXXaYXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"289\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2k7bxoVXXXXa.XXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1362\" height=\"582\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2SorfoVXXXXX0XpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"610\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2tYK6oVXXXXb2XpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"580\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB23U5ZoVXXXXcAXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"580\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2mDrnoVXXXXcFXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1361\" height=\"696\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2RfraoVXXXXarXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"699\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2qwjgoVXXXXX5XpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1360\" height=\"586\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2uvYloVXXXXXXXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1362\" height=\"582\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2wCvsoVXXXXbWXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"610\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2xd2noVXXXXcOXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1363\" height=\"592\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB27AWSoVXXXXX5XFXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"580\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2dKiWoVXXXXXcXFXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1356\" height=\"585\" style=\"border: 0px; vertical-align: top;\"/></p><h5 style=\"margin: 0px 0px 0px 10px; padding: 0px; font-size: 15px; height: 22px;\">邻家好货</h5><p><br/></p>,', '开源分布式框架zsCat 559182393邻家好货', '177', '11', 'zscat.png', '框架', '246', null, '50', 'https://img.alicdn.com/imgextra/i1/2541510480/TB2nOAEpXXXXXXOXFXXXXXXXXXX_!!2541510480.png,https://img.alicdn.com/imgextra/i1/2541510480/TB2MmkOpXXXXXcBXpXXXXXXXXXX_!!2541510480.png,https://img.alicdn.com/imgextra/i1/2541510480/TB2Qwi2oVXXXXcCXpXXXXXXXXXX_!!2541510480.png,', '2', '2016-12-23 12:07:18', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('34', 'zscat商城', 'mybatisplus ,ssm,dubbo', '<p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">qq &nbsp;951449465</p><p>dubbo 权限设计，spring，springmvc ，mybatis，beetl &nbsp;sso &nbsp;solr搜索引擎 &nbsp; &nbsp; &nbsp; &nbsp;演示地址 &nbsp;http://zscat.carp.mopaasapp.com/login http://shop.zscat&nbsp;</p><p>开源分布式框架zsCat 559182393</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; margin-left: 42pt; padding: 0px; text-indent: 21pt;\"><br/></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; margin-left: 42pt; padding: 0px; text-indent: 21pt;\">开源分布式框架zsCat 559182393</p><p>&nbsp;1.技术关键字&nbsp;如&nbsp;redis、dubbo&nbsp;等<br/>2.服务关键字&nbsp;如&nbsp;商品，商城，电商等<br/>3.关联关键字&nbsp;&nbsp;如分布式，购物网，外包，商城私活<br/>等&nbsp;</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-family: 宋体; font-size: 10.5pt;\">zsCat&nbsp;<span style=\"font-family:宋体\">多用户 多商家模式商城</span></span><span style=\"font-family: 宋体; font-size: 10.5pt;\"></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-family: 宋体; font-size: 10.5pt;\">java shiro Spring springmvc &nbsp;mybatis mybatis-plus &nbsp;redis rabbitmq</span><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\"><span style=\"font-family:宋体\">将服务提出来，预留</span></span><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\">dubbo&nbsp;<span style=\"font-family:宋体\">分布式服务结构</span></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\"><span style=\"font-family:宋体\"></span></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\"><span style=\"font-family:宋体\"></span></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\"><span style=\"font-family:宋体\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2CnxvXZwb61Bjy0FfXXXvlpXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB27jdzX_ga61BjSspiXXXUSXXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2GDtvXZwb61Bjy0FfXXXvlpXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB28X4yXZIa61Bjy0FiXXc1XpXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2x3JAXZga61Bjy1XaXXafzVXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2zHxxXZsX61Bjy1XdXXa0aFXa_!!2541510480.png\" class=\"\" width=\"222\" height=\"623\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2uzlyX_ga61BjSspfXXadSpXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2f3FAXZga61Bjy1XaXXafzVXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2QENyX4IX61BjSsplXXazrpXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2btdzX_gX61BjSspmXXaFcFXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2YwuqX4Ab61BjSZFBXXc9pFXa_!!2541510480.png\" class=\"\" width=\"1366\" height=\"768\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2TF8xX4oa61Bjy0FaXXcHwpXa_!!2541510480.png\" class=\"\" width=\"1366\" height=\"768\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2VUesX3Uc61BjSZFmXXbJHFXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2CAOrX4wb61BjSZFlXXbuoVXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2zUasX3Uc61BjSZFmXXbJHFXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2q01qXZkd61BjSZPhXXcb9VXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2mfurX9Zb61BjSZPfXXaU.pXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB27JapX37c61BjSZFKXXb6hFXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/></span></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-family: 宋体; font-size: 10.5pt;\"></span></p><h5 style=\"margin: 0px 0px 0px 10px; padding: 0px; font-size: 15px; white-space: normal; widows: auto; background-color: rgb(255, 255, 255);\">看了该宝贝的人还看了</h5><ul style=\"margin: 0px; padding: 0px; list-style: none;\"><li></li></ul><p><br/></p>,', 'qq  951449465dubbo 权限设计，spring，springmvc ，mybatis，beetl  sso  solr搜索引擎        演示地址  http://zscat.carp.mopaasapp.com/login http://shop.zscat 开源分布式框架zsCat 55', '144', '11', 'shop.png', '框架', '238', null, '200', 'https://img.alicdn.com/imgextra/i1/2541510480/TB2CnxvXZwb61Bjy0FfXXXvlpXa_!!2541510480.png,https://img.alicdn.com/imgextra/i4/2541510480/TB27jdzX_ga61BjSspiXXXUSXXa_!!2541510480.png,https://img.alicdn.com/imgextra/i1/2541510480/TB2GDtvXZwb61Bjy0FfXXXvlpXa_!!2541510480.png,', '2', '2016-12-23 12:54:02', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('35', 'zsShop商城', 'spring,springmvc ,通用mapper, dubbo,zookeep', '<p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"color: rgb(108, 108, 108); font-size: 12px; line-height: 18px;\">spring，springmvc ，mybatis，通用mapping ，redis beetl &nbsp;</span><span style=\"line-height: 1.5;\">AmazeUI-2.4.2 &nbsp;jquery</span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"line-height: 1.5;\"></span>后台权限管理 精确到按钮级别 &nbsp;菜单配置 字典管理 机构管理 用户 &nbsp;角色管理 &nbsp;商品管理 &nbsp;类别管理</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">订单管理 &nbsp; 购物车 &nbsp;广告 &nbsp;文章管理等</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">前台 首页菜单 购物详情 &nbsp;个人中心</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">树形组件 &nbsp;下拉组件 &nbsp;选择树组件 等等</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"color: rgb(108, 108, 108); font-size: 12px; line-height: 18px;\"></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><br/></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">登录后 顶部显示后台管理 ，可以查看</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-size: 12px;\"><a target=\"_blank\" style=\"color: rgb(51, 102, 204); outline: 0px;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2tvhtbNmJ.eBjy0FhXXbBdFXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top; height: 600px; width: 600px; float: none; margin: 0px;\"/></a></span><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2wkprbSuJ.eBjy0FgXXXBBXXa_!!2541510480.jpg\" style=\"border: 0px; vertical-align: top; height: 500px; width: 500px; float: none; margin: 0px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2QGpnbHeI.eBjSspkXXaXqVXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top; height: 500px; width: 500px; float: none; margin: 0px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2eRlebHaI.eBjy1XdXXcoqXXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top; height: 500px; width: 500px; float: none; margin: 0px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2T6FkbM1J.eBjy0FaXXaXeVXa_!!2541510480.png\" class=\"\" style=\"border: 0px; vertical-align: top; height: 500px; width: 500px; float: none; margin: 0px;\"/><img src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2iTtMbR9J.eBjy0FoXXXyvpXa_!!2541510480.png\" class=\"\" align=\"absmiddle\" width=\"1366\" height=\"768\" style=\"border: 0px; vertical-align: top;\"/><img src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2GfVubIeJ.eBjy0FiXXXqapXa_!!2541510480.jpg\" class=\"\" align=\"absmiddle\" width=\"1242\" height=\"2208\" style=\"border: 0px; vertical-align: top;\"/></p><h5 style=\"margin: 0px 0px 0px 10px; padding: 0px; font-size: 15px;\">买了该宝贝的人还买了</h5><p><br/></p>,', 'spring，springmvc ，mybatis，通用mapping ，redis beetl  AmazeUI-2.4.2  jquery后台权限管理 精确到按钮级别  菜单配置 字典管理 机构管理 用户  角色管理  商品管理  类别管理订单管理   购物车  广告  文章管理等前台 首页菜单 购物详情', '95', '10', 'zsshop.jpg', '框架', '238', null, '150', 'https://img.alicdn.com/imgextra/i3/2541510480/TB2tvhtbNmJ.eBjy0FhXXbBdFXa_!!2541510480.png,https://img.alicdn.com/imgextra/i4/2541510480/TB2wkprbSuJ.eBjy0FgXXXBBXXa_!!2541510480.jpg,https://img.alicdn.com/imgextra/i3/2541510480/TB2QGpnbHeI.eBjSspkXXaXqVXa_!!2541510480.png,', '2', '2016-12-23 12:58:40', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('36', 'zscatPlus', 'spring,springmvc ,通用mapper, dubbo,zookeep', '<p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469194786.png\" style=\"float:none;\" title=\"H.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469198359.png\" style=\"float:none;\" title=\"QQ图片20161012163538.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469195105.png\" style=\"float:none;\" title=\"QQ图片20161012163729.png\"/></p><p><br/></p>,', '', '93', '11', 'H.png', '框架', '247', null, '50', '/zsTrade/static/ueditor/jsp/upload1/20161223/1482469194786.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469198359.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469195105.png,', '2', '2016-12-23 12:59:55', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('37', 'zscat社区', 'layui,ssm', '<p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481972.png\" style=\"float:none;\" title=\"blog.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481086.png\" style=\"float:none;\" title=\"QQ截图20161104134602.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469482244.png\" style=\"float:none;\" title=\"QQ截图20161104135156.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469487209.jpg\" style=\"float:none;\" title=\"04.jpg\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481047.png\" style=\"float:none;\" title=\"QQ图片20161028110015.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481495.png\" style=\"float:none;\" title=\"QQ图片20161028110044.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469480820.png\" style=\"float:none;\" title=\"QQ图片20161028111335.png\"/></p><p><br/></p>,', '', '20', '10', 'blog.png', '框架', '245', null, '20', '/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481972.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481086.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469482244.png,', '2', '2016-12-23 13:04:44', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('38', 'zsCms', 'ssm', '<p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469612881.png\" style=\"float:none;\" title=\"cms.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469616227.png\" style=\"float:none;\" title=\"QQ图片20161028130524.png\"/></p><p><br/></p>,', '', '18', '10', 'cms.png', '框架', '246', null, '30', '/zsTrade/static/ueditor/jsp/upload1/20161223/1482469612881.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469616227.png,', '2', '2016-12-23 13:06:55', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('39', 'zscatLte分布式框架', 'spring', '<p style=\"margin-bottom: 15px; orphans: 2; white-space: normal; widows: 2; box-sizing: inherit; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; background-color: rgb(250, 250, 250); margin-top: 0px !important;\">zscatLte是一个轻量级权限管理系统，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。<br style=\"box-sizing: inherit;\"/>使用zscatLte搭建项目，只需编写30%左右代码，其余的代码交给系统自动生成。<br style=\"box-sizing: inherit;\"/>一个月的工作量，一周就能完成，剩余的时间可以陪家人、朋友、撩妹、钓凯子等，从此踏入高富帅、白富美行业。</p><p style=\"margin-top: 0px; margin-bottom: 15px; orphans: 2; white-space: normal; widows: 2; box-sizing: inherit; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; background-color: rgb(250, 250, 250);\"><strong style=\"box-sizing: inherit;\">具有如下特点</strong></p><ul class=\"task-list\" style=\"orphans: 2; white-space: normal; widows: 2; box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; background-color: rgb(250, 250, 250);\"><li>轻量级的权限系统，只涉及Spring、Shiro、Mybatis后端框架，降低学习使用成本</li><li>友好的代码结构及注释，便于阅读及二次开发</li><li>支持HTML、JSP、Velocity、Freemarker等视图，零技术门槛</li><li>灵活的权限控制，可控制到页面或按钮，满足绝大部分的权限需求(如需控制到按钮级别，需使用Shiro标签，控制按钮的显示或隐藏)</li><li>页面交互使用Vue2.x，极大的提高了开发效率</li><li>完善的代码生成机制，可在线生成entity、xml、dao、service、page、js代码，减少70%以上的开发任务</li><li>引入quartz定时任务，可动态完成任务的添加、修改、删除、暂停、恢复及日志查看等功能</li><li>引入路由机制，刷新页面会停留在当前页</li></ul><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833332927.png\" style=\"float:none;\" title=\"blog.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833337146.png\" style=\"float:none;\" title=\"gen.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833336912.png\" style=\"float:none;\" title=\"menu.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833335881.png\" style=\"float:none;\" title=\"zscatlte.png\"/></p><p><br/></p>,', 'zscatLte是一个轻量级权限管理系统，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。使用zscatLte搭建项目，只需编写30%左右代码，其余的代码交给系统自动生成。一个月的工作量，一周就能完成，剩余的时间可以陪家人、朋友、撩妹、钓凯子等，从此踏入高富帅、白富美行业。具有如下特点轻量级的权限系统，只', '47', '11', 'zscatlte.png', '框架', '247', null, '50', '/static/ueditor/jsp/upload1/20161227/1482833332927.png,/static/ueditor/jsp/upload1/20161227/1482833337146.png,/static/ueditor/jsp/upload1/20161227/1482833336912.png,', '34', '2016-12-27 18:08:57', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('40', 'java后台框架', 'hibernate', '<p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833394317.png\" style=\"float:none;\" title=\"blog.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833403014.png\" style=\"float:none;\" title=\"menu.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833395840.png\" style=\"float:none;\" title=\"role.png\"/></p><p><br/></p>,', '', '40', '10', 'blog.png', '框架', '247', null, '1', '/static/ueditor/jsp/upload1/20161227/1482833394317.png,/static/ueditor/jsp/upload1/20161227/1482833403014.png,/static/ueditor/jsp/upload1/20161227/1482833395840.png,', '34', '2016-12-27 18:09:58', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('41', 'ssh后台框架_activiy5', 'ssh', '<h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\">ommon</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>泛型封装dao、service、controller基类，包含分页，查询条件封装，从而达到快速crud操作(参考<a href=\"https://github.com/springside\" target=\"_blank\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; margin-top: 0px; margin-bottom: 0px; background-position: initial initial; background-repeat: initial initial;\">springside4</a>&quot;)</li><li>简易代码生成器,增加字段配置功能、生成页面功能，实现增删查改不需要写一句代码(参考<a href=\"https://github.com/thinkgem/jeesite\" target=\"_blank\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; margin-top: 0px; margin-bottom: 0px; background-position: initial initial; background-repeat: initial initial;\">jeesite</a>)</li><li>ehcache缓存</li><li>springmvc 整合hibernate validater 进行后端数据验证</li></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"系统权限管理_6\" href=\"http://git.oschina.net/rguess/thinker#系统权限管理_6\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>系统权限管理</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>系统管理——包含用户、角色、权限、资源、菜单管理</li><li>权限管理——使用框架apache shiro进行系统认证、授权操作</li><ul class=\"task-list\" style=\"box-sizing: inherit; margin: 0px; padding-left: 30px;\"><li>系统认证、授权操作</li><li>按钮粒度的权限控制</li><li>并发登录人数控制</li><li>后端使用注解进行方法级别的权限控制</li></ul><li>系统登录,操作日志记录,查询,分析</li></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"oa工作流程_7\" href=\"http://git.oschina.net/rguess/thinker#oa工作流程_7\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>OA工作流程</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>集成activiti(工作流引擎)</li><ul class=\"task-list\" style=\"box-sizing: inherit; margin: 0px; padding-left: 30px;\"><li>整合spring</li><li>工作流引擎并完成工作流通用基类、常用工具类</li><li>通用待办,已办,我的流程等常用查询</li><li>定义业务开发需实现的接口</li><li>流程部署</li><li>请假流程例子</li><li>自由工作流设计例子</li></ul></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"内容管理_8\" href=\"http://git.oschina.net/rguess/thinker#内容管理_8\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>内容管理</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>实现栏目，文章，系统静态资源的管理</li><li>实现上传word发表文章</li><li>实现ueditor富文本方式发表文章</li><li>aop+freemarker+线程实现首页静态化</li><li>实现多个站点的管理</li><li>基于该cms的个人博客网站</li></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"utils_9\" href=\"http://git.oschina.net/rguess/thinker#utils_9\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>utils</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>开发中常用工具类整理</li><ul class=\"task-list\" style=\"box-sizing: inherit; margin: 0px; padding-left: 30px;\"><li>基于apache poi的通用导出excel工具类</li><li>各种类型相互转化工具类</li><li>Http与Servlet工具类</li><li>常用日期处理工具类</li><li>各种编码,解码,加密等工作类</li><li>反射操作封装</li><li>文件操作</li><li>WordToHtml</li><li>spring注解方式实现定时任务调度，实现mysql数据备份</li><li>...</li></ul><li>整理了丰富多样的js、jquery插件</li><ul class=\"task-list\" style=\"box-sizing: inherit; margin: 0px; padding-left: 30px;\"><li>bootstrap</li><li>jquery validation、修改验证后显示以适应bootstrap，显得更加美观、添加常用验证</li><li>自定义的js分页插件(配合bootstrap-paginator)</li><li>ztree(jquery 树插件)</li><li>datetimepicker(日历控件)</li><li>gritter(提示框)</li><li>jquery-slimscroll(定义局部元素滚动)</li><li>jquery-treegrid(树插件能更好的与bootstrap table融合以展示数据)</li><li>bootstrap-tree(简易的树插件)</li><li>chosen-bootstrap(下拉框选择控件)</li><li>font-awesome(字体)</li><li>uniform(表单美化)</li><li>jquery blockUI(遮罩层)</li><li>ueditor(富文本编辑器)</li><li>bootstrap-fileupload</li><li>jquery fileupload多文件上传带进度条</li><li>....</li></ul></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"others_10\" href=\"http://git.oschina.net/rguess/thinker#others_10\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>others</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>集成jsper report动态报表工具(未完成)</li><li>jpush消息推送</li></ul><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833523239.png\" style=\"float:none;\" title=\"cms.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833525442.png\" style=\"float:none;\" title=\"liuc2.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833517232.png\" style=\"float:none;\" title=\"menu.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833524270.png\" style=\"float:none;\" title=\"role1.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833524459.png\" style=\"float:none;\" title=\"流程.png\"/></p><p><br/></p>,', 'ommon泛型封装dao、service、controller基类，包含分页，查询条件封装，从而达到快速crud操作(参考springside4\")简易代码生成器,增加字段配置功能、生成页面功能，实现增删查改不需要写一句代码(参考jeesite)ehcache缓存springmvc 整合hibernate v', '23', '10', 'home1.png', '框架', '247', null, '50', '/static/ueditor/jsp/upload1/20161227/1482833523239.png,/static/ueditor/jsp/upload1/20161227/1482833525442.png,/static/ueditor/jsp/upload1/20161227/1482833517232.png,', '34', '2016-12-27 18:12:03', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('42', '因库网校系统', 'ssm', '<p style=\"box-sizing: inherit; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250); margin-top: 0px !important;\"><strong style=\"box-sizing: inherit;\">免费开源网校系统源代码轻松搭建在线教育平台</strong></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">因酷交流群①：468278040 (满)</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\"><br/></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">因酷交流群②：164295773</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">官网:<a href=\"http://http//www.inxedu.com\" class=\"md_relative_url\" target=\"_blank\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; background-position: initial initial; background-repeat: initial initial;\">http://www.inxedu.com</a></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">演示站:<a href=\"http://http//demo1.inxedu.com\" class=\"md_relative_url\" target=\"_blank\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; background-position: initial initial; background-repeat: initial initial;\">http://demo1.inxedu.com</a></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">账号:<a href=\"mailto:demo@inxedu.com\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; background-position: initial initial; background-repeat: initial initial;\">demo@inxedu.com</a></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">密码:111111<br style=\"box-sizing: inherit;\"/><br style=\"box-sizing: inherit;\"/>网站功能模块:</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">课程功能</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">咨询功能</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">问答功能</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">首页banner推荐</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">播放模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">个人中心模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">个人资料模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">修改头像模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">收藏课程模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">问题总结:<br style=\"box-sizing: inherit;\"/>项目导入如果get set报错请添加lombok插件就可以正常使用了</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\"><strong style=\"box-sizing: inherit;\">技术框架</strong></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">核心框架：Spring Framework</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">视图框架：Spring MVC</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">持久层框架：MyBatis 3</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">JS框架：jQuery</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">富文本：kindeditor</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\"><strong style=\"box-sizing: inherit;\">开发环境</strong></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">建议开发者使用以下环境，这样避免版本带来的问题</p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833798198.png\" style=\"float:none;\" title=\"1index.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833794932.png\" style=\"float:none;\" title=\"2index.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833799763.png\" style=\"float:none;\" title=\"3index.png\"/></p><p><br/></p>,', '免费开源网校系统源代码轻松搭建在线教育平台因酷交流群①：468278040 (满)因酷交流群②：164295773官网:http://www.inxedu.com演示站:http://demo1.inxedu.com账号:demo@inxedu.com密码:111111网站功能模块:课程功能咨询功能问答功能首', '5', '10', '1index.png', '框架', '238', null, '1', '/static/ueditor/jsp/upload1/20161227/1482833798198.png,/static/ueditor/jsp/upload1/20161227/1482833794932.png,/static/ueditor/jsp/upload1/20161227/1482833799763.png,', '34', '2016-12-27 18:16:38', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('43', 'jeesite后台框架', '', '<p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">1、后端</p><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>核心框架：Spring Framework 4.1</li><li>安全框架：Apache Shiro 1.2</li><li>视图框架：Spring MVC 4.1</li><li>服务端验证：Hibernate Validator 5.2</li><li>布局框架：SiteMesh 2.4</li><li>工作流引擎：Activiti 5.21</li><li>任务调度：Spring Task 4.1</li><li>持久层框架：MyBatis 3.2</li><li>数据库连接池：Alibaba Druid 1.0</li><li>缓存框架：Ehcache 2.6、Redis</li><li>日志管理：SLF4J 1.7、Log4j</li><li>工具类：Apache Commons、Jackson 2.2、Xstream 1.4、Dozer 5.3、POI 3.9</li></ul><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">2、前端</p><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>JS框架：jQuery 1.9。</li><li>CSS框架：Twitter Bootstrap 2.3.1（稳定是后台，UI方面根据需求自己升级改造吧）。</li><li>客户端验证：JQuery Validation Plugin 1.11。</li><li>富文本在线编辑：CKEditor</li><li>在线文件管理：CKFinder</li><li>动态页签：Jerichotab</li><li>手机端框架：Jingle</li><li>数据表格：jqGrid</li><li>对话框：jQuery jBox</li><li>下拉选择框：jQuery Select2</li><li>树结构控件：jQuery zTree</li><li>日期控件： My97DatePicker</li></ul><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">4、平台</p><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>服务器中间件：在Java EE 5规范（Servlet 2.5、JSP 2.1）下开发，支持应用服务器中间件 有Tomcat 6+、Jboss 7+、WebLogic 10+、WebSphere 8+。</li><li>数据库支持：目前仅提供MySql和Oracle数据库的支持，但不限于数据库，平台留有其它数据库支持接口， 你可以很方便的更改为其它数据库，如：SqlServer 2008、MySql 5.5、H2等</li><li>开发环境：Java、Eclipse Java EE 4.3、Maven 3.1、Git</li></ul><p><br/></p>,', '1、后端核心框架：Spring Framework 4.1安全框架：Apache Shiro 1.2视图框架：Spring MVC 4.1服务端验证：Hibernate Validator 5.2布局框架：SiteMesh 2.4工作流引擎：Activiti 5.21任务调度：Spring Task 4.1持', '16', '10', 'zscat.png', '框架', '247', null, '', '', '34', '2016-12-27 18:21:25', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('44', 'zscat_妹子后台框架', 'ssm', '<p><img src=\"/static/ueditor/jsp/upload1/20161227/1482834426033.png\" style=\"float:none;\" title=\"1meizi.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482834430190.png\" style=\"float:none;\" title=\"2meizi.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482834431132.png\" style=\"float:none;\" title=\"3妹子1.png\"/></p><p><br/></p>,', '', '26', '10', '1meizi.png', '框架', '247', null, '55', '/static/ueditor/jsp/upload1/20161227/1482834426033.png,/static/ueditor/jsp/upload1/20161227/1482834430190.png,/static/ueditor/jsp/upload1/20161227/1482834431132.png,', '34', '2016-12-27 18:27:07', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('49', '华迪空气净化器KJ420P-HD280', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>品牌:&nbsp;华迪</li><li>型号:&nbsp;KJ420P-HD280</li><li>噪音:&nbsp;0-35dB</li><li>控制方式:&nbsp;其他</li><li>智能类型:&nbsp;其他</li><li>颗粒物CADR值:&nbsp;420.1立方米/小时</li><li>颗粒物CCM值:&nbsp;P4(12000≤M)</li><li>风量:&nbsp;600立方米/小时</li><li>适用面积:&nbsp;30m^2-50m^2</li><li>功能:&nbsp;定时 除VOC 除花粉 除颗粒物 除甲醛 除烟除尘 杀菌 加湿 加氧</li><li>空气净化产品类别:&nbsp;空气净化器</li><li>风量:&nbsp;400 立方米/小时以上</li><li>电源方式:&nbsp;交流电</li><li>售后服务:&nbsp;店铺三包</li><li>适用对象:&nbsp;家用 卧室 办公室</li><li>空气净化器风量:&nbsp;400 立方米/小时</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2Qmv4XrRkpuFjSspmXXc.9XXa_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2XOn3XxXlpuFjSsphXXbJOXXa_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2JCv4Xr8kpuFjy0FcXXaUhpXa_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2Nrj2XBNkpuFjy0FaXXbRCVXa_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB22Wv4XwJlpuFjSspjXXcT.pXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"567\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2plL4XC0jpuFjy0FlXXc0bpXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"567\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2T6T3XrVkpuFjSspcXXbSMVXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"531\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2TRL4XC0jpuFjy0FlXXc0bpXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"720\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2nzn2Xw0kpuFjSspdXXX4YXXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"759\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2Wmz4Xr8kpuFjy0FcXXaUhpXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"828\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2GAn3XxXkpuFjy0FiXXbUfFXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"684\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2PAn3XxXkpuFjy0FiXXbUfFXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"477\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2_Y_3XCtkpuFjy0FhXXXQzFXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"720\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2VJP4XrtlpuFjSspoXXbcDpXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"651\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/></p><p><br/></p>,', '品牌: 华迪型号: KJ420P-HD280噪音: 0-35dB控制方式: 其他智能类型: 其他颗粒物CADR值: 420.1立方米/小时颗粒物CCM值: P4(12000≤M)风量: 600立方米/小时适用面积: 30m^2-50m^2功能: 定时 除VOC 除花粉 除颗粒物 除甲醛 除烟除尘 杀菌 加湿 ', '11', '13', '1智能.jpg', '智能家居', '250', null, '3980', 'https://img.alicdn.com/imgextra/i2/2591435385/TB2Qmv4XrRkpuFjSspmXXc.9XXa_!!2591435385.jpg,https://img.alicdn.com/imgextra/i2/2591435385/TB2XOn3XxXlpuFjSsphXXbJOXXa_!!2591435385.jpg,https://img.alicdn.com/imgextra/i1/2591435385/TB2JCv4Xr8kpuFjy0FcXXaUhpXa_!!2591435385.jpg,', '72', '2017-01-06 13:22:42', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('50', '华迪智能空气净化器', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>品牌:&nbsp;华迪</li><li>型号:&nbsp;HD-AP100</li><li>智能类型:&nbsp;其他</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><img src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2Jw99spXXXXcNXpXXXXXXXXXX_!!2591435385.png\" align=\"absmiddle\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2MW2xspXXXXXVXpXXXXXXXXXX_!!2591435385.png\" align=\"absmiddle\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2xO6yspXXXXXVXpXXXXXXXXXX_!!2591435385.png\" align=\"absmiddle\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2Tcm_spXXXXXiXFXXXXXXXXXX_!!2591435385.png\" align=\"absmiddle\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2oxv8spXXXXXCXXXXXXXXXXXX_!!2591435385.png\" class=\"\" align=\"absmiddle\" width=\"800\" height=\"626\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2xOHgspXXXXceXpXXXXXXXXXX_!!2591435385.png\" class=\"\" align=\"absmiddle\" width=\"800\" height=\"610\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2JTHLspXXXXcqXXXXXXXXXXXX_!!2591435385.png\" class=\"\" align=\"absmiddle\" width=\"800\" height=\"539\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/></p><p><br/></p>,', '品牌: 华迪型号: HD-AP100智能类型: 其他', '11', '13', '1智能.jpg', '智能家居', '250', null, '2280', 'https://img.alicdn.com/imgextra/i2/2591435385/TB2Jw99spXXXXcNXpXXXXXXXXXX_!!2591435385.png,https://img.alicdn.com/imgextra/i3/2591435385/TB2MW2xspXXXXXVXpXXXXXXXXXX_!!2591435385.png,https://img.alicdn.com/imgextra/i4/2591435385/TB2xO6yspXXXXXVXpXXXXXXXXXX_!!2591435385.png,', '72', '2017-01-06 13:24:02', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('51', '华迪智能网关HDG6200', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>兼容平台:&nbsp;ANDROID</li><li>品牌:&nbsp;华迪</li><li>连接方式:&nbsp;Wi-Fi连接</li><li>颜色:&nbsp;白色</li><li>颜色分类:&nbsp;白色</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"color: rgb(108, 108, 108); line-height: 14.4px; font-size: 12px;\">支持智能家居功能、云电脑功能、网络机顶盒功能、无线路由器热点功能、支持与指定型号智能路由器家庭联网功能、支持物业管理系统、支持宽频系统、整合支持数百个互联网应用<img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2R5nXspXXXXa_XpXXXXXXXXXX_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2EfYaspXXXXbPXpXXXXXXXXXX_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/></span></p><p><br/></p>,', '兼容平台: ANDROID品牌: 华迪连接方式: Wi-Fi连接颜色: 白色颜色分类: 白色支持智能家居功能、云电脑功能、网络机顶盒功能、无线路由器热点功能、支持与指定型号智能路由器家庭联网功能、支持物业管理系统、支持宽频系统、整合支持数百个互联网应用', '0', '13', '3智能.png', '智能家居', '251', null, '339', 'https://img.alicdn.com/imgextra/i4/2591435385/TB2R5nXspXXXXa_XpXXXXXXXXXX_!!2591435385.jpg,https://img.alicdn.com/imgextra/i1/2591435385/TB2EfYaspXXXXbPXpXXXXXXXXXX_!!2591435385.jpg,', '72', '2017-01-06 13:25:33', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('52', '华迪智能插排', '', '<p><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2fBlRaH1K.eBjSszbXXcTHpXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2jAxMaHaI.eBjSspaXXXIKpXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2WeRSaNmJ.eBjy0FhXXbBdFXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2o1RQaIeJ.eBjy0FiXXXqapXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 750px;\"/></p>,', '', '1', '13', '4智能.jpg', '智能家居', '251', null, '139', 'https://img.alicdn.com/imgextra/i3/2591435385/TB2fBlRaH1K.eBjSszbXXcTHpXa_!!2591435385.png,https://img.alicdn.com/imgextra/i2/2591435385/TB2jAxMaHaI.eBjSspaXXXIKpXa_!!2591435385.png,https://img.alicdn.com/imgextra/i4/2591435385/TB2WeRSaNmJ.eBjy0FhXXbBdFXa_!!2591435385.png,', '72', '2017-01-06 13:26:38', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('53', '华迪智能控制面板', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>品牌:&nbsp;华迪</li><li>型号:&nbsp;HD-CP100</li><li>智能类型:&nbsp;其他</li><li>颜色分类:&nbsp;白色 黑色</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2FvL6aigSXeFjy0FcXXahAXXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB29AVQaHaI.eBjSszdXXaB6XXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2BztNaHeI.eBjSspkXXaXqVXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2EvP6aigSXeFjy0FcXXahAXXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/></p><p><br/></p>,', '品牌: 华迪型号: HD-CP100智能类型: 其他颜色分类: 白色 黑色', '6', '13', '5智能.png', '智能家居', '251', null, '129', 'https://img.alicdn.com/imgextra/i3/2591435385/TB2FvL6aigSXeFjy0FcXXahAXXa_!!2591435385.png,https://img.alicdn.com/imgextra/i2/2591435385/TB29AVQaHaI.eBjSszdXXaB6XXa_!!2591435385.png,https://img.alicdn.com/imgextra/i1/2591435385/TB2BztNaHeI.eBjSspkXXaXqVXa_!!2591435385.png,', '72', '2017-01-06 13:27:41', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('54', '华迪智能灯泡', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>品牌:&nbsp;华迪</li><li>型号:&nbsp;HD-LL100</li><li>智能类型:&nbsp;其他</li><li>颜色分类:&nbsp;白色</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2lxjGoFXXXXa0XXXXXXXXXXXX_!!2591435385.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2Tb_woFXXXXcxXXXXXXXXXXXX_!!2591435385.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB28PHAoFXXXXaGXXXXXXXXXXXX_!!2591435385.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2ZVHuoFXXXXXAXpXXXXXXXXXX_!!2591435385.png\" style=\"border: 0px; vertical-align: top;\"/></p><p><br/></p>,', '品牌: 华迪型号: HD-LL100智能类型: 其他颜色分类: 白色', '2', '13', '6智能.png', '智能家居', '251', null, '99', 'https://img.alicdn.com/imgextra/i3/2591435385/TB2lxjGoFXXXXa0XXXXXXXXXXXX_!!2591435385.png,https://img.alicdn.com/imgextra/i2/2591435385/TB2Tb_woFXXXXcxXXXXXXXXXXXX_!!2591435385.png,https://img.alicdn.com/imgextra/i3/2591435385/TB28PHAoFXXXXaGXXXXXXXXXXXX_!!2591435385.png,', '72', '2017-01-06 13:28:46', '0', '0', '0', null, null);
INSERT INTO `d_product` VALUES ('55', '地信', '111', '<p>2</p><p><img src=\"/zsShop/static/ueditor/jsp/upload1/20170119/1484799275696.jpg\" style=\"float:none;\" title=\"TB2nGmSX3hJc1FjSZFDXXbvnFXa_!!2541510480.png_100x100.jpg\"/></p><p>2222222222223333333333<br/></p>,', '22222222222223333333333', '0', '10', '5bc34898-bee7-4d01-9d9e-b5e444516468.png', '框架', '215', null, '11', '/zsShop/static/ueditor/jsp/upload1/20170119/1484799275696.jpg,', '2', '2017-01-19 12:14:46', '0', '0', '0', null, '2');
INSERT INTO `d_product` VALUES ('56', '白菜', '11', '<p>111</p><p><img src=\"/zsShop/static/ueditor/jsp/upload1/20170119/1484813117263.jpg\" style=\"float:none;\" title=\"4智能.jpg\"/></p><p><img src=\"/zsShop/static/ueditor/jsp/upload1/20170119/1484813124175.png\" style=\"float:none;\" title=\"5智能.png\"/></p><p><img src=\"/zsShop/static/ueditor/jsp/upload1/20170119/1484813123063.png\" style=\"float:none;\" title=\"6智能.png\"/></p><p><br/></p>,', '111', '0', '13', '66.png', '蔬菜', '215', null, '11', '/zsShop/static/ueditor/jsp/upload1/20170119/1484813117263.jpg,/zsShop/static/ueditor/jsp/upload1/20170119/1484813124175.png,/zsShop/static/ueditor/jsp/upload1/20170119/1484813123063.png,', '4', '2017-01-19 16:05:20', '0', '0', '0', null, '3');
INSERT INTO `d_product` VALUES ('57', '狗肉', '1', '<p>22222</p><p><img src=\"/zsShop/static/ueditor/jsp/upload1/20170119/1484813155664.jpg\" style=\"float:none;\" title=\"22.jpg\"/></p><p><img src=\"/zsShop/static/ueditor/jsp/upload1/20170119/1484813155691.jpg\" style=\"float:none;\" title=\"404.jpg\"/></p><p><br/></p>,', '22222', '4', '12', '50350b37cbddb.png', '肉类', '217', null, '2', '/zsShop/static/ueditor/jsp/upload1/20170119/1484813155664.jpg,/zsShop/static/ueditor/jsp/upload1/20170119/1484813155691.jpg,', '4', '2017-01-19 16:05:55', '0', '0', '0', null, '3');

-- ----------------------------
-- Table structure for d_producttype
-- ----------------------------
DROP TABLE IF EXISTS `d_producttype`;
CREATE TABLE `d_producttype` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记(0活null 正常 1,删除)',
  `villageid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of d_producttype
-- ----------------------------
INSERT INTO `d_producttype` VALUES ('10', '农家点心', '2', '2016-12-22 09:59:15', '0', '2');
INSERT INTO `d_producttype` VALUES ('11', '农家肉类', '2', '2016-12-22 10:09:37', '0', '2');
INSERT INTO `d_producttype` VALUES ('12', '农家蔬菜', '4', '2017-01-19 16:02:59', '0', '2');
INSERT INTO `d_producttype` VALUES ('13', '农家大米', '4', '2017-01-19 16:03:09', '0', '2');

-- ----------------------------
-- Table structure for d_village
-- ----------------------------
DROP TABLE IF EXISTS `d_village`;
CREATE TABLE `d_village` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL COMMENT '村名',
  `address` varchar(255) DEFAULT NULL COMMENT '地址',
  `phone` varchar(255) DEFAULT NULL COMMENT '电话',
  `userid` bigint(20) DEFAULT NULL,
  `hit` int(11) DEFAULT '0' COMMENT '点击数',
  `postcpde` varchar(255) DEFAULT NULL COMMENT '邮编',
  `img` varchar(255) DEFAULT NULL,
  `orderby` int(11) DEFAULT NULL,
  `stat` int(11) DEFAULT '1' COMMENT '1存在 2 删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of d_village
-- ----------------------------
INSERT INTO `d_village` VALUES ('2', '地信村', '湖南,湘潭,湖南科技大学', '3711111', '2', '79', '414316', 'all.jpg', null, '1');
INSERT INTO `d_village` VALUES ('3', 'shen庄', '湖南,岳阳', '11', '4', '7', '11', '15.png', null, '1');

-- ----------------------------
-- Table structure for d_viname
-- ----------------------------
DROP TABLE IF EXISTS `d_viname`;
CREATE TABLE `d_viname` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL COMMENT '姓名',
  `age` int(11) DEFAULT NULL COMMENT '年龄',
  `heigth` varchar(255) DEFAULT NULL COMMENT '身高',
  `weight` varchar(255) DEFAULT NULL COMMENT '体重',
  `content` text COMMENT '内容',
  `type` int(11) DEFAULT '1' COMMENT '1美女榜，2帅哥3 名人榜',
  `orderno` int(11) DEFAULT NULL COMMENT '排序',
  `stat` int(11) DEFAULT '1' COMMENT '1单身2有对象3已婚',
  `villageid` bigint(20) DEFAULT NULL COMMENT '村庄',
  `img` varchar(255) DEFAULT NULL,
  `clickhit` int(11) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=49 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of d_viname
-- ----------------------------
INSERT INTO `d_viname` VALUES ('1', '沈专', '25', '175', '73', null, '2', '1', '1', '2', 'psb (24).jpg', '27');
INSERT INTO `d_viname` VALUES ('2', '张国明', '26', '170', '65', null, '2', '2', '1', '2', 'psb (22).jpg', '1');
INSERT INTO `d_viname` VALUES ('3', '韩旭', '26', '181', '75', '<p>1</p>', '2', '1', '2', '2', 'psb (17).jpg', '2');
INSERT INTO `d_viname` VALUES ('4', '关培嘉', '25', '170', '66', '<p>1</p>', '2', '1', '1', '2', 'psu.jpg', '5');
INSERT INTO `d_viname` VALUES ('5', '朱跃军', '25', '170', '55', '<p>2</p>', '2', '2', '3', '2', 'psu (1).jpg', '1');
INSERT INTO `d_viname` VALUES ('6', '雷波', '26', '175', '65', '<p>2</p>', '2', null, '1', '2', 'psu (2).jpg', '0');
INSERT INTO `d_viname` VALUES ('7', '李泽文', '26', '170', '60', '<p>2</p>', '2', null, '1', '2', 'psu (4).jpg', '2');
INSERT INTO `d_viname` VALUES ('8', '杨承景', '26', '175', '77', '<p>2</p>', '2', null, '1', '2', 'psb (18).jpg', '2');
INSERT INTO `d_viname` VALUES ('9', '关旺', '24', '175', '60', '<p>2</p>', '2', null, '1', '2', 'psb (15).jpg', '4');
INSERT INTO `d_viname` VALUES ('10', '宋桶', '25', '170', '60', '<p>2</p>', '2', null, '2', '2', 'psb (14).jpg', '3');
INSERT INTO `d_viname` VALUES ('11', '黎婷', '25', '156', '50', '<p>1</p>', '1', null, '1', '2', 'psb (11).jpg', '4');
INSERT INTO `d_viname` VALUES ('12', '蒋思敏', '25', '162', '50', '<p>1</p>', '1', null, '1', '2', 'psb (10).jpg', '8');
INSERT INTO `d_viname` VALUES ('13', '崔莹华', '25', '160', '50', '<p>1</p>', '1', null, '1', '2', 'psb (4).jpg', '2');
INSERT INTO `d_viname` VALUES ('14', '吴亚军', '25', '160', '50', '<p>1</p>', '1', '1', '1', '2', 'psb (5).jpg', '2');
INSERT INTO `d_viname` VALUES ('15', '李方圆', '25', '160', '50', '', '1', null, '2', '2', 'psb (3).jpg', '3');
INSERT INTO `d_viname` VALUES ('16', '李强', '25', '175', '65', '<p>1</p>', '2', null, '2', '2', '193279501701367950.jpg', '2');
INSERT INTO `d_viname` VALUES ('17', '林子祥', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('18', '李林东', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('19', '周亚', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('20', '龚文泉', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('21', '谢波', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('22', '陈明月', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('23', '刘斌', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('24', '祝之一', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('25', '黄辉', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('26', '唐杰', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('27', '穆梦瑶', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('28', '席琳', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('29', '康平', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('30', '程哲旭', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('31', '张学业', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('32', '程旭盛', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('33', '江田', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('34', '马文荣', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('35', '曾志杰', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('36', '刘瀚文', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('37', '王权', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('38', '刘聪', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('39', '李闯', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('40', '吴剑亮', '25', '175', '65', '<p>1</p>', '2', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('41', '张振阳', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('42', '张燕纯', '25', '175', '65', '<p>1</p>', '1', null, '3', '2', '', '0');
INSERT INTO `d_viname` VALUES ('43', '王晓玥', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('44', '林迪', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('45', '刘亚娟', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('46', '余蓉', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('47', '朱兴芳', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');
INSERT INTO `d_viname` VALUES ('48', '赵荣浩', '25', '175', '65', '<p>1</p>', '1', null, '1', '2', '', '0');

-- ----------------------------
-- Table structure for maintain_task_definition
-- ----------------------------
DROP TABLE IF EXISTS `maintain_task_definition`;
CREATE TABLE `maintain_task_definition` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(500) DEFAULT NULL,
  `cron` varchar(200) DEFAULT NULL,
  `bean_class` varchar(200) DEFAULT NULL,
  `bean_name` varchar(200) DEFAULT NULL,
  `method_name` varchar(200) DEFAULT NULL,
  `is_start` tinyint(1) DEFAULT NULL,
  `description` varchar(2000) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of maintain_task_definition
-- ----------------------------
INSERT INTO `maintain_task_definition` VALUES ('1', '测试1', '0/10 * * * * ? ', 'com.gohuinuo.web.maintain.dynamictask.task.TestTask1', 'testTask1', 'run', '0', null);

-- ----------------------------
-- Table structure for shop_address
-- ----------------------------
DROP TABLE IF EXISTS `shop_address`;
CREATE TABLE `shop_address` (
  `id` bigint(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '地址ID',
  `member_id` bigint(10) unsigned NOT NULL DEFAULT '0' COMMENT '会员ID',
  `true_name` varchar(50) NOT NULL COMMENT '会员姓名',
  `area_id` bigint(10) unsigned NOT NULL DEFAULT '0' COMMENT '地区ID',
  `city_id` bigint(9) DEFAULT NULL COMMENT '市级ID',
  `area_info` varchar(255) NOT NULL DEFAULT '' COMMENT '地区内容',
  `address` varchar(255) NOT NULL COMMENT '地址',
  `tel_phone` varchar(20) DEFAULT NULL COMMENT '座机电话',
  `mob_phone` varchar(15) DEFAULT NULL COMMENT '手机电话',
  `is_default` enum('0','1') NOT NULL DEFAULT '0' COMMENT '1默认收货地址',
  `province_id` mediumint(10) DEFAULT '0' COMMENT '省级id',
  `zip_code` int(50) DEFAULT NULL COMMENT '邮编',
  PRIMARY KEY (`id`),
  KEY `member_id` (`member_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=84 DEFAULT CHARSET=utf8 COMMENT='买家地址信息表';

-- ----------------------------
-- Records of shop_address
-- ----------------------------
INSERT INTO `shop_address` VALUES ('21', '10', 'Daisy', '41', '36', '北京,北京市,朝阳区', 'SOHO 1105', null, '13520085712', '0', '1', null);
INSERT INTO `shop_address` VALUES ('23', '10', 'Daisy', '41', '36', '北京,北京市,朝阳区', 'SOHOnimeide', '01084420880', '13520085712', '0', '1', '0');
INSERT INTO `shop_address` VALUES ('24', '10', 'Daisy', '41', '36', '北京,北京市,朝阳区', 'SOHO5678', '0102345435', '13520083333', '1', '1', '111111');
INSERT INTO `shop_address` VALUES ('25', '10', 'Daisy', '1417', '95', '内蒙古自治区,呼和浩特市,和林格尔县', 'SOHOwangjing1105 909090', null, '13520085712', '0', '5', null);
INSERT INTO `shop_address` VALUES ('26', '10', 'Tony', '1298', '84', '山西省,太原市,万柏林区', '1109', '01083323432', '13589098788', '0', '4', '123321');
INSERT INTO `shop_address` VALUES ('29', '12', '鲍睿', '41', '36', '北京,北京市,朝阳区', '尚都soho南塔803', '18610984906', '18610984906', '0', '1', '111111');
INSERT INTO `shop_address` VALUES ('30', '13', '谢进伟', '41', '36', '北京,北京市,朝阳区', '东大桥soho南塔803', '13520085712', '13520085712', '0', '1', '10020');
INSERT INTO `shop_address` VALUES ('31', '16', 'zrh', '37', '36', '北京,北京市,东城区', 'dfuhfkjsdhfkj', '111111111', '11111111111', '1', '1', '111111');
INSERT INTO `shop_address` VALUES ('32', '14', '王明', '41', '36', '北京,北京市,朝阳区', '北京市朝阳区soho尚都', '101-23211132', '13398420124', '0', '1', '100000');
INSERT INTO `shop_address` VALUES ('35', '19', '问3', '38', '36', '北京,北京市,西城区', '33', '11122131421', '13654547041', '1', '1', '111111');
INSERT INTO `shop_address` VALUES ('36', '22', '123', '37', '36', '北京,北京市,东城区', 'tuu', '的方法', '123', '1', '1', '123');
INSERT INTO `shop_address` VALUES ('38', '105', '阿爸', '2528', '224', '山东省,青岛市,市南区', '海水浴场', '88888888', '13500000000', '0', '15', '500006');
INSERT INTO `shop_address` VALUES ('39', '28', '吴世勋', '41', '36', '北京,北京市,朝阳区', '世贸天阶soho南塔803', '88888888', '11111111111', '1', '1', '111111');
INSERT INTO `shop_address` VALUES ('40', '28', 'zrh', '143', '39', '上海,上海市,黄浦区', '黄埔66号', '9999999999', '18888888888', '0', '9', '666666');
INSERT INTO `shop_address` VALUES ('41', '7', '刘鱼凯', '38', '36', '北京,北京市,西城区', '南锣鼓巷八大胡同113号', '12342342424', '13562345564', '1', '1', '11122');
INSERT INTO `shop_address` VALUES ('43', '22', '康兰', '47', '36', '北京,北京市,通州区', '尚都会', '15363586', '18569325152', '0', '1', '253658');
INSERT INTO `shop_address` VALUES ('44', '28', 'pcl', '2146', '175', '浙江省,杭州市,西湖区', 'qweqwe22', '11111111', '11111111111', '0', '11', '22222');
INSERT INTO `shop_address` VALUES ('45', '36', '康兰', '41', '36', '北京,北京市,朝阳区', '尚都南塔803', '0102346742', '18610810207', '1', '1', '100000');
INSERT INTO `shop_address` VALUES ('46', '10', 'srttrw', '41', '36', '北京,北京市,朝阳区', 'qqqqqqqqqqqqqq', '010-23453324', '18733195969', '0', '1', '4536546');
INSERT INTO `shop_address` VALUES ('47', '45', '吴世勋', '41', '36', '北京,北京市,朝阳区', '世贸天阶SOHO南塔803', '0102222222', '18568652555', '1', '1', '250082');
INSERT INTO `shop_address` VALUES ('48', '45', '周杰伦', '2146', '175', '浙江省,杭州市,西湖区', '美胡路66 号', '0108888888', '15355353896', '0', '11', '250002');
INSERT INTO `shop_address` VALUES ('51', '47', '黄科源', '37', '36', '北京,北京市,东城区', '尚都', '010-11111111', '18601320411', '1', '1', '100000');
INSERT INTO `shop_address` VALUES ('52', '65', 'gfdsgfds', '3038', '289', '广东省,广州市,从化市', 'gfsdgfg', '22381904', '13631390449', '0', '19', '510000');
INSERT INTO `shop_address` VALUES ('53', '14', '王明', '2920', '275', '湖南省,长沙市,芙蓉区', '建湘路517号', '0731-88888888', '13900000000', '0', '18', '410001');
INSERT INTO `shop_address` VALUES ('54', '44', '11', '56', '40', '天津,天津市,河东区', '112323', '13322223333', '13322223333', '0', '2', '432123');
INSERT INTO `shop_address` VALUES ('56', '105', '222', '2609', '235', '山东省,临沂市,沂南县', '22', '1', '13333333333', '0', '15', '1');
INSERT INTO `shop_address` VALUES ('57', '70', '123123', '2916', '275', '湖南省,长沙市,岳麓区', '123123', '07727777777', '15910576548', '0', '18', '100000');
INSERT INTO `shop_address` VALUES ('58', '72', '林建茂', '41', '36', '北京,北京市,朝阳区', 'SOHO尚度', '077271111111', '15910576548', '0', '1', '100000');
INSERT INTO `shop_address` VALUES ('59', '15', '12312', '1127', '73', '河北省,石家庄市,井陉矿区', '123123', '13422222222', '13422222222', '0', '3', '144444');
INSERT INTO `shop_address` VALUES ('60', '15', 'test', '2630', '237', '山东省,聊城市,东阿县', '13423', '', '13333333333', '0', '15', '122222');
INSERT INTO `shop_address` VALUES ('61', '75', 'ddd', '56', '40', '天津,天津市,河东区', 'eedf', '123123', '12312312312', '0', '2', '433123');
INSERT INTO `shop_address` VALUES ('62', '79', 'BFF', '543', '45055', '海外,海外,荷兰', 'FAFASDFASFD', '0031234567890', '13587898765', '0', '35', '5655');
INSERT INTO `shop_address` VALUES ('63', '7', '管庆芳', '41', '36', '北京,北京市,朝阳区', '尚都SOHO南塔803', '', '18311340545', '0', '1', '10000');
INSERT INTO `shop_address` VALUES ('64', '81', 'KWG', '37', '36', '北京,北京市,东城区', 'SHANGDI', null, '18810004259', '0', '1', '100000');
INSERT INTO `shop_address` VALUES ('65', '68', '孙', '56', '40', '天津,天津市,河东区', '放烟花', null, '15010033670', '0', '2', '100043');
INSERT INTO `shop_address` VALUES ('67', '82', '张三', '41', '36', '北京,北京市,朝阳区', '朝阳大街145号', null, '13888888888', '0', '1', '153000');
INSERT INTO `shop_address` VALUES ('68', '82', '李四', '37', '36', '北京,北京市,东城区', '东城大街188号', null, '13800000000', '0', '1', '100000');
INSERT INTO `shop_address` VALUES ('69', '82', '王二', '1310', '85', '山西省,大同市,大同县', '大同街14号', null, '13800000000', '0', '4', '100000');
INSERT INTO `shop_address` VALUES ('70', '82', '张三', '42', '36', '北京,北京市,丰台区', '丰台大街146号', null, '13800000000', '0', '1', '100000');
INSERT INTO `shop_address` VALUES ('71', '82', '李四', '56', '40', '天津,天津市,河东区', '河东大街145号', null, '13800000000', '0', '2', '100000');
INSERT INTO `shop_address` VALUES ('72', '82', '李四', '1129', '73', '河北省,石家庄市,平山县', '平山街11号', null, '13800000000', '1', '3', '100000');
INSERT INTO `shop_address` VALUES ('73', '82', '李四', '37', '36', '北京,北京市,东城区', '东城大街145号', null, '13800000000', '0', '1', '100000');
INSERT INTO `shop_address` VALUES ('74', '83', '刘刚', '2523', '224', '山东省,青岛市,即墨市', 'xx街道', null, '13233445566', '0', '15', '134567');
INSERT INTO `shop_address` VALUES ('75', '88', 'aaa', '1127', '73', '河北省,石家庄市,井陉矿区', 'aaaa', null, '18538263378', '0', '3', '452009');
INSERT INTO `shop_address` VALUES ('76', '93', 'test', '1531', '107', '辽宁省,沈阳市,铁西区', 'test', null, '13898826242', '0', '6', '110167');
INSERT INTO `shop_address` VALUES ('77', '84', 'guan', '41', '36', '北京,北京市,朝阳区', '尚都SOHO南塔803', null, '18322090903', '0', '1', '100000');
INSERT INTO `shop_address` VALUES ('78', '105', '111', '41', '36', '北京,北京市,朝阳区', '1111', null, '13333333333', '0', '1', '100000');
INSERT INTO `shop_address` VALUES ('79', '96', 'lza', '56', '40', '天津,天津市,河东区', '2222', null, '18810028190', '0', '2', '100000');
INSERT INTO `shop_address` VALUES ('80', '97', 'lza', '41', '36', '北京,北京市,朝阳区', '还不发货我无法和', null, '18810028190', '0', '1', '111111');
INSERT INTO `shop_address` VALUES ('81', '101', 'zhuan1', '3146', '307', '广东省,潮州市,湘桥区', 'xxx', null, '15989289511', '0', '19', '121212');
INSERT INTO `shop_address` VALUES ('82', '100', 'shenzhuan', '3028', '288', '湖南省,湘西土家族苗族自治州,保靖县', '21', '12121121212', '12121212121', '0', '18', '212212');
INSERT INTO `shop_address` VALUES ('83', '105', '555', '55', '40', '天津天津市和平区', '555555', '5555', null, '1', '0', null);

-- ----------------------------
-- Table structure for shop_adv
-- ----------------------------
DROP TABLE IF EXISTS `shop_adv`;
CREATE TABLE `shop_adv` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '广告自增标识编号',
  `ap_id` bigint(11) unsigned NOT NULL COMMENT '广告位id',
  `adv_title` varchar(100) NOT NULL COMMENT '标题',
  `adv_url` varchar(255) DEFAULT NULL COMMENT '广告内容',
  `start_date` bigint(13) DEFAULT NULL COMMENT '广告开始时间',
  `end_date` bigint(13) DEFAULT NULL COMMENT '广告结束时间',
  `sort` int(10) unsigned DEFAULT NULL COMMENT '幻灯片排序',
  `click_num` int(11) unsigned DEFAULT NULL COMMENT '广告点击率',
  `is_allow` int(1) unsigned DEFAULT NULL COMMENT '会员购买的广告是否通过审核0未审核1审核已通过2审核未通过',
  `res_url` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 COMMENT='广告表';

-- ----------------------------
-- Records of shop_adv
-- ----------------------------
INSERT INTO `shop_adv` VALUES ('1', '6', '大广告2', 'http://post.rhxtune.com/product/detail?id=110', '1458791081000', '1571952681000', '255', null, null, '/upload/img/adv/1477468419821.jpg');
INSERT INTO `shop_adv` VALUES ('3', '6', '大广告1', 'http://post.rhxtune.com/product/detail?id=115', '1452445404000', '1579815081000', '255', null, null, '/upload/img/adv/1477369418742.jpg');
INSERT INTO `shop_adv` VALUES ('4', '7', '团购一', '#', '1443066281000', '1579296681000', '255', null, null, '/upload/img/adv/1477468165087.jpg');
INSERT INTO `shop_adv` VALUES ('5', '11', '底部横幅', '#', '1443066281000', '1579296681000', '255', null, null, '/upload/img/adv/1438418382499.jpg');
INSERT INTO `shop_adv` VALUES ('7', '7', '团购2', '#', '1443066281000', '1579296681000', '255', null, null, '/upload/img/adv/1477468631524.jpg');
INSERT INTO `shop_adv` VALUES ('8', '6', '大广告3', 'http://post.rhxtune.com/product/detail?id=111', '1455075881000', '1572471081000', '255', null, null, '/upload/img/adv/1477467676488.jpg');
INSERT INTO `shop_adv` VALUES ('9', '9', '楼层一', '#', '1443066281000', '1482960681000', '255', null, null, '/upload/img/adv/1477373407889.jpg');
INSERT INTO `shop_adv` VALUES ('10', '10', '楼层二', '#', '1443066281000', '1482874281000', '255', null, null, '/upload/img/adv/1477373351575.jpg');
INSERT INTO `shop_adv` VALUES ('11', '11', '楼层三', '#', '1443066281000', '1579296681000', '255', null, null, '/upload/img/adv/1438740576779.png');
INSERT INTO `shop_adv` VALUES ('12', '13', '楼层五', 'http://www.jd.com', '1443066281000', '1579296681000', '255', null, null, '/upload/img/adv/1438740636217.png');
INSERT INTO `shop_adv` VALUES ('13', '14', 'app一', '', '1443066281000', '1579296681000', '255', null, null, '/upload/img/adv/1441162195050.png');
INSERT INTO `shop_adv` VALUES ('14', '14', 'app二', '', '1443066281000', '1579815081000', '255', null, null, '/upload/img/adv/1441162177006.png');
INSERT INTO `shop_adv` VALUES ('15', '12', '楼层四', '#', '1443066281000', '1579296681000', '255', null, null, '/upload/img/adv/1441592393492.png');
INSERT INTO `shop_adv` VALUES ('18', '6', '大牌手机', 'http://post.rhxtune.com/product/detail?id=103', '1444292150000', '1570522554000', '255', null, null, '/upload/img/adv/1477452741217.jpg');
INSERT INTO `shop_adv` VALUES ('19', '8', '第一', 'https://click.mz.simba.taobao.com/ecpm?spm=875.7931836/B.2016903.1.xgScMl&e=DWguFxIzwHqcLCijQhiYtmDc', '1470675966000', '1503507971000', '255', null, null, '/upload/img/adv/1477383360024.jpg');
INSERT INTO `shop_adv` VALUES ('20', '9', '楼层一1', '', '1477373463000', '1540446013000', '255', null, null, '/upload/img/adv/1477373460733.jpg');

-- ----------------------------
-- Table structure for shop_adv_position
-- ----------------------------
DROP TABLE IF EXISTS `shop_adv_position`;
CREATE TABLE `shop_adv_position` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '广告位置id',
  `ap_name` varchar(100) NOT NULL COMMENT '广告位置名',
  `ap_intro` varchar(255) NOT NULL COMMENT '广告位简介',
  `ap_class` int(1) unsigned NOT NULL COMMENT '广告类别：0图片1文字2幻灯3Flash',
  `ap_display` int(1) unsigned NOT NULL COMMENT '广告展示方式：0幻灯片1多广告展示2单广告展示',
  `is_use` int(1) unsigned NOT NULL COMMENT '广告位是否启用：0不启用1启用',
  `ap_width` int(10) NOT NULL COMMENT '广告位宽度',
  `ap_height` int(10) NOT NULL COMMENT '广告位高度',
  `ap_key` varchar(50) DEFAULT NULL COMMENT '取值键',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 COMMENT='广告位表';

-- ----------------------------
-- Records of shop_adv_position
-- ----------------------------
INSERT INTO `shop_adv_position` VALUES ('6', '首页大广告', '首页大广告', '0', '0', '1', '770', '280', 'topbanner');
INSERT INTO `shop_adv_position` VALUES ('7', '限时团购', '限时团购', '2', '0', '1', '210', '180', 'groupbanner');
INSERT INTO `shop_adv_position` VALUES ('8', '底部横幅', '底部横幅', '2', '0', '1', '1200', '80', 'bottombanner');
INSERT INTO `shop_adv_position` VALUES ('9', '楼层一', '楼层一广告位', '2', '0', '1', '200', '200', 'floor1');
INSERT INTO `shop_adv_position` VALUES ('10', '楼层二', '楼层二广告位', '2', '0', '1', '200', '200', 'floor2');
INSERT INTO `shop_adv_position` VALUES ('11', '楼层三', '楼层三广告位', '2', '0', '1', '200', '200', 'floor3');
INSERT INTO `shop_adv_position` VALUES ('12', '楼层四', '楼层四广告位', '2', '0', '1', '200', '200', 'floor4');
INSERT INTO `shop_adv_position` VALUES ('13', '楼层五', '楼层五广告位', '2', '0', '1', '200', '200', 'floor5');
INSERT INTO `shop_adv_position` VALUES ('14', 'APP启动广告', 'APP启动广告', '0', '1', '1', '200', '500', 'starAdv');
INSERT INTO `shop_adv_position` VALUES ('15', '楼六层', '6', '2', '0', '1', '200', '200', 'floor6');

-- ----------------------------
-- Table structure for shop_area
-- ----------------------------
DROP TABLE IF EXISTS `shop_area`;
CREATE TABLE `shop_area` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `area_name` varchar(50) NOT NULL COMMENT '地区名称',
  `parent_id` bigint(11) unsigned NOT NULL DEFAULT '0' COMMENT '地区父ID',
  `area_sort` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '排序',
  `area_deep` tinyint(1) unsigned NOT NULL DEFAULT '1' COMMENT '地区深度，从1开始',
  `is_del` tinyint(4) DEFAULT '0' COMMENT '是否删除0:未删除;1:已删除',
  `create_time` bigint(13) DEFAULT NULL COMMENT '创建时间',
  `update_time` bigint(13) DEFAULT NULL COMMENT '修改时间',
  `parent_ids` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `area_parent_id` (`parent_id`)
) ENGINE=InnoDB AUTO_INCREMENT=45059 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='地区表';

-- ----------------------------
-- Records of shop_area
-- ----------------------------
INSERT INTO `shop_area` VALUES ('1', '北京', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2', '天津', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3', '河北省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4', '山西省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5', '内蒙古自治区', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('6', '辽宁省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('7', '吉林省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('8', '黑龙江省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('9', '上海', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('10', '江苏省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('11', '浙江省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('12', '安徽省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('13', '福建省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('14', '江西省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('15', '山东省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('16', '河南省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('17', '湖北省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('18', '湖南省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('19', '广东省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('20', '广西壮族自治区', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('21', '海南省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('22', '重庆', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('23', '四川省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('24', '贵州省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('25', '云南省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('26', '西藏自治区', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('27', '陕西省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('28', '甘肃省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('29', '青海省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('30', '宁夏回族自治区', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('31', '新疆维吾尔自治区', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('32', '台湾省', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('33', '香港特别行政区', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('34', '澳门特别行政区', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('35', '海外', '0', '0', '1', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('36', '北京市', '1', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('37', '东城区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('38', '西城区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('39', '上海市', '9', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('40', '天津市', '2', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('41', '朝阳区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('42', '丰台区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('43', '石景山区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('44', '海淀区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('45', '门头沟区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('46', '房山区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('47', '通州区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('48', '顺义区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('49', '昌平区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('50', '大兴区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('51', '怀柔区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('52', '平谷区', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('53', '密云县', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('54', '延庆县', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('55', '和平区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('56', '河东区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('57', '河西区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('58', '南开区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('59', '河北区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('60', '红桥区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('61', '塘沽区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('62', '重庆市', '22', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('64', '东丽区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('65', '西青区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('66', '津南区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('67', '北辰区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('68', '武清区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('69', '宝坻区', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('70', '宁河县', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('71', '静海县', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('72', '蓟县', '40', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('73', '石家庄市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('74', '唐山市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('75', '秦皇岛市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('76', '邯郸市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('77', '邢台市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('78', '保定市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('79', '张家口市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('80', '承德市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('81', '衡水市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('82', '廊坊市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('83', '沧州市', '3', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('84', '太原市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('85', '大同市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('86', '阳泉市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('87', '长治市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('88', '晋城市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('89', '朔州市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('90', '晋中市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('91', '运城市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('92', '忻州市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('93', '临汾市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('94', '吕梁市', '4', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('95', '呼和浩特市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('96', '包头市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('97', '乌海市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('98', '赤峰市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('99', '通辽市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('100', '鄂尔多斯市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('101', '呼伦贝尔市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('102', '巴彦淖尔市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('103', '乌兰察布市', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('104', '兴安盟', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('105', '锡林郭勒盟', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('106', '阿拉善盟', '5', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('107', '沈阳市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('108', '大连市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('109', '鞍山市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('110', '抚顺市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('111', '本溪市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('112', '丹东市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('113', '锦州市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('114', '营口市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('115', '阜新市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('116', '辽阳市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('117', '盘锦市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('118', '铁岭市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('119', '朝阳市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('120', '葫芦岛市', '6', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('121', '长春市', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('122', '吉林市', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('123', '四平市', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('124', '辽源市', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('125', '通化市', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('126', '白山市', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('127', '松原市', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('128', '白城市', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('129', '延边朝鲜族自治州', '7', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('130', '哈尔滨市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('131', '齐齐哈尔市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('132', '鸡西市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('133', '鹤岗市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('134', '双鸭山市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('135', '大庆市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('136', '伊春市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('137', '佳木斯市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('138', '七台河市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('139', '牡丹江市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('140', '黑河市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('141', '绥化市', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('142', '大兴安岭地区', '8', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('143', '黄浦区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('144', '卢湾区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('145', '徐汇区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('146', '长宁区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('147', '静安区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('148', '普陀区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('149', '闸北区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('150', '虹口区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('151', '杨浦区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('152', '闵行区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('153', '宝山区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('154', '嘉定区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('155', '浦东新区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('156', '金山区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('157', '松江区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('158', '青浦区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('159', '南汇区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('160', '奉贤区', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('161', '崇明县', '39', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('162', '南京市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('163', '无锡市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('164', '徐州市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('165', '常州市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('166', '苏州市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('167', '南通市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('168', '连云港市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('169', '淮安市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('170', '盐城市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('171', '扬州市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('172', '镇江市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('173', '泰州市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('174', '宿迁市', '10', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('175', '杭州市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('176', '宁波市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('177', '温州市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('178', '嘉兴市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('179', '湖州市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('180', '绍兴市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('181', '舟山市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('182', '衢州市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('183', '金华市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('184', '台州市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('185', '丽水市', '11', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('186', '合肥市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('187', '芜湖市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('188', '蚌埠市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('189', '淮南市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('190', '马鞍山市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('191', '淮北市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('192', '铜陵市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('193', '安庆市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('194', '黄山市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('195', '滁州市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('196', '阜阳市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('197', '宿州市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('198', '巢湖市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('199', '六安市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('200', '亳州市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('201', '池州市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('202', '宣城市', '12', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('203', '福州市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('204', '厦门市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('205', '莆田市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('206', '三明市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('207', '泉州市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('208', '漳州市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('209', '南平市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('210', '龙岩市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('211', '宁德市', '13', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('212', '南昌市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('213', '景德镇市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('214', '萍乡市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('215', '九江市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('216', '新余市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('217', '鹰潭市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('218', '赣州市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('219', '吉安市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('220', '宜春市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('221', '抚州市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('222', '上饶市', '14', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('223', '济南市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('224', '青岛市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('225', '淄博市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('226', '枣庄市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('227', '东营市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('228', '烟台市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('229', '潍坊市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('230', '济宁市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('231', '泰安市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('232', '威海市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('233', '日照市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('234', '莱芜市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('235', '临沂市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('236', '德州市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('237', '聊城市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('238', '滨州市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('239', '菏泽市', '15', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('240', '郑州市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('241', '开封市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('242', '洛阳市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('243', '平顶山市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('244', '安阳市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('245', '鹤壁市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('246', '新乡市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('247', '焦作市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('248', '濮阳市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('249', '许昌市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('250', '漯河市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('251', '三门峡市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('252', '南阳市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('253', '商丘市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('254', '信阳市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('255', '周口市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('256', '驻马店市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('257', '济源市', '16', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('258', '武汉市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('259', '黄石市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('260', '十堰市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('261', '宜昌市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('262', '襄樊市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('263', '鄂州市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('264', '荆门市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('265', '孝感市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('266', '荆州市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('267', '黄冈市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('268', '咸宁市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('269', '随州市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('270', '恩施土家族苗族自治州', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('271', '仙桃市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('272', '潜江市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('273', '天门市', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('274', '神农架林区', '17', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('275', '长沙市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('276', '株洲市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('277', '湘潭市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('278', '衡阳市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('279', '邵阳市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('280', '岳阳市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('281', '常德市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('282', '张家界市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('283', '益阳市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('284', '郴州市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('285', '永州市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('286', '怀化市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('287', '娄底市', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('288', '湘西土家族苗族自治州', '18', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('289', '广州市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('290', '韶关市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('291', '深圳市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('292', '珠海市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('293', '汕头市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('294', '佛山市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('295', '江门市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('296', '湛江市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('297', '茂名市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('298', '肇庆市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('299', '惠州市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('300', '梅州市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('301', '汕尾市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('302', '河源市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('303', '阳江市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('304', '清远市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('305', '东莞市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('306', '中山市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('307', '潮州市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('308', '揭阳市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('309', '云浮市', '19', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('310', '南宁市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('311', '柳州市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('312', '桂林市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('313', '梧州市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('314', '北海市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('315', '防城港市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('316', '钦州市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('317', '贵港市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('318', '玉林市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('319', '百色市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('320', '贺州市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('321', '河池市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('322', '来宾市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('323', '崇左市', '20', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('324', '海口市', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('325', '三亚市', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('326', '五指山市', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('327', '琼海市', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('328', '儋州市', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('329', '文昌市', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('330', '万宁市', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('331', '东方市', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('332', '定安县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('333', '屯昌县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('334', '澄迈县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('335', '临高县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('336', '白沙黎族自治县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('337', '昌江黎族自治县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('338', '乐东黎族自治县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('339', '陵水黎族自治县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('340', '保亭黎族苗族自治县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('341', '琼中黎族苗族自治县', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('342', '西沙群岛', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('343', '南沙群岛', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('344', '中沙群岛的岛礁及其海域', '21', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('345', '万州区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('346', '涪陵区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('347', '渝中区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('348', '大渡口区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('349', '江北区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('350', '沙坪坝区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('351', '九龙坡区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('352', '南岸区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('353', '北碚区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('354', '双桥区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('355', '万盛区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('356', '渝北区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('357', '巴南区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('358', '黔江区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('359', '长寿区', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('360', '綦江县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('361', '潼南县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('362', '铜梁县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('363', '大足县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('364', '荣昌县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('365', '璧山县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('366', '梁平县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('367', '城口县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('368', '丰都县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('369', '垫江县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('370', '武隆县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('371', '忠县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('372', '开县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('373', '云阳县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('374', '奉节县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('375', '巫山县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('376', '巫溪县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('377', '石柱土家族自治县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('378', '秀山土家族苗族自治县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('379', '酉阳土家族苗族自治县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('380', '彭水苗族土家族自治县', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('381', '江津市', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('382', '合川市', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('383', '永川市', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('384', '南川市', '62', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('385', '成都市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('386', '自贡市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('387', '攀枝花市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('388', '泸州市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('389', '德阳市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('390', '绵阳市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('391', '广元市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('392', '遂宁市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('393', '内江市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('394', '乐山市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('395', '南充市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('396', '眉山市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('397', '宜宾市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('398', '广安市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('399', '达州市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('400', '雅安市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('401', '巴中市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('402', '资阳市', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('403', '阿坝藏族羌族自治州', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('404', '甘孜藏族自治州', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('405', '凉山彝族自治州', '23', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('406', '贵阳市', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('407', '六盘水市', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('408', '遵义市', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('409', '安顺市', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('410', '铜仁地区', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('411', '黔西南布依族苗族自治州', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('412', '毕节地区', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('413', '黔东南苗族侗族自治州', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('414', '黔南布依族苗族自治州', '24', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('415', '昆明市', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('416', '曲靖市', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('417', '玉溪市', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('418', '保山市', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('419', '昭通市', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('420', '丽江市', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('421', '思茅市', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('422', '临沧市', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('423', '楚雄彝族自治州', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('424', '红河哈尼族彝族自治州', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('425', '文山壮族苗族自治州', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('426', '西双版纳傣族自治州', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('427', '大理白族自治州', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('428', '德宏傣族景颇族自治州', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('429', '怒江傈僳族自治州', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('430', '迪庆藏族自治州', '25', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('431', '拉萨市', '26', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('432', '昌都地区', '26', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('433', '山南地区', '26', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('434', '日喀则地区', '26', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('435', '那曲地区', '26', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('436', '阿里地区', '26', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('437', '林芝地区', '26', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('438', '西安市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('439', '铜川市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('440', '宝鸡市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('441', '咸阳市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('442', '渭南市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('443', '延安市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('444', '汉中市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('445', '榆林市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('446', '安康市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('447', '商洛市', '27', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('448', '兰州市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('449', '嘉峪关市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('450', '金昌市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('451', '白银市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('452', '天水市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('453', '武威市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('454', '张掖市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('455', '平凉市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('456', '酒泉市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('457', '庆阳市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('458', '定西市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('459', '陇南市', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('460', '临夏回族自治州', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('461', '甘南藏族自治州', '28', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('462', '西宁市', '29', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('463', '海东地区', '29', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('464', '海北藏族自治州', '29', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('465', '黄南藏族自治州', '29', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('466', '海南藏族自治州', '29', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('467', '果洛藏族自治州', '29', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('468', '玉树藏族自治州', '29', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('469', '海西蒙古族藏族自治州', '29', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('470', '银川市', '30', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('471', '石嘴山市', '30', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('472', '吴忠市', '30', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('473', '固原市', '30', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('474', '中卫市', '30', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('475', '乌鲁木齐市', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('476', '克拉玛依市', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('477', '吐鲁番地区', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('478', '哈密地区', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('479', '昌吉回族自治州', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('480', '博尔塔拉蒙古自治州', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('481', '巴音郭楞蒙古自治州', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('482', '阿克苏地区', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('483', '克孜勒苏柯尔克孜自治州', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('484', '喀什地区', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('485', '和田地区', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('486', '伊犁哈萨克自治州', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('487', '塔城地区', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('488', '阿勒泰地区', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('489', '石河子市', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('490', '阿拉尔市', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('491', '图木舒克市', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('492', '五家渠市', '31', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('493', '台北市', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('494', '高雄市', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('495', '基隆市', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('496', '台中市', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('497', '台南市', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('498', '新竹市', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('499', '嘉义市', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('500', '台北县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('501', '宜兰县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('502', '桃园县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('503', '新竹县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('504', '苗栗县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('505', '台中县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('506', '彰化县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('507', '南投县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('508', '云林县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('509', '嘉义县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('510', '台南县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('511', '高雄县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('512', '屏东县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('513', '澎湖县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('514', '台东县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('515', '花莲县', '45058', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('516', '中西区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('517', '东区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('518', '九龙城区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('519', '观塘区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('520', '南区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('521', '深水埗区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('522', '黄大仙区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('523', '湾仔区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('524', '油尖旺区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('525', '离岛区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('526', '葵青区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('527', '北区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('528', '西贡区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('529', '沙田区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('530', '屯门区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('531', '大埔区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('532', '荃湾区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('533', '元朗区', '45056', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('534', '澳门特别行政区', '45057', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('535', '美国', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('536', '加拿大', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('537', '澳大利亚', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('538', '新西兰', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('539', '英国', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('540', '法国', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('541', '德国', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('542', '捷克', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('543', '荷兰', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('544', '瑞士', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('545', '希腊', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('546', '挪威', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('547', '瑞典', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('548', '丹麦', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('549', '芬兰', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('550', '爱尔兰', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('551', '奥地利', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('552', '意大利', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('553', '乌克兰', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('554', '俄罗斯', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('555', '西班牙', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('556', '韩国', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('557', '新加坡', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('558', '马来西亚', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('559', '印度', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('560', '泰国', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('561', '日本', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('562', '巴西', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('563', '阿根廷', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('564', '南非', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('565', '埃及', '45055', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('566', '其他', '36', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1126', '井陉县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1127', '井陉矿区', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1128', '元氏县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1129', '平山县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1130', '新乐市', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1131', '新华区', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1132', '无极县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1133', '晋州市', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1134', '栾城县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1135', '桥东区', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1136', '桥西区', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1137', '正定县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1138', '深泽县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1139', '灵寿县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1140', '藁城市', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1141', '行唐县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1142', '裕华区', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1143', '赞皇县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1144', '赵县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1145', '辛集市', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1146', '长安区', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1147', '高邑县', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1148', '鹿泉市', '73', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1149', '丰南区', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1150', '丰润区', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1151', '乐亭县', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1152', '古冶区', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1153', '唐海县', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1154', '开平区', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1155', '滦南县', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1156', '滦县', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1157', '玉田县', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1158', '路北区', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1159', '路南区', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1160', '迁安市', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1161', '迁西县', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1162', '遵化市', '74', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1163', '北戴河区', '75', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1164', '卢龙县', '75', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1165', '山海关区', '75', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1166', '抚宁县', '75', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1167', '昌黎县', '75', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1168', '海港区', '75', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1169', '青龙满族自治县', '75', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1170', '丛台区', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1171', '临漳县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1172', '复兴区', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1173', '大名县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1174', '峰峰矿区', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1175', '广平县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1176', '成安县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1177', '曲周县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1178', '武安市', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1179', '永年县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1180', '涉县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1181', '磁县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1182', '肥乡县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1183', '邯山区', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1184', '邯郸县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1185', '邱县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1186', '馆陶县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1187', '魏县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1188', '鸡泽县', '76', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1189', '临城县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1190', '临西县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1191', '任县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1192', '内丘县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1193', '南和县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1194', '南宫市', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1195', '威县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1196', '宁晋县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1197', '巨鹿县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1198', '平乡县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1199', '广宗县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1200', '新河县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1201', '柏乡县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1202', '桥东区', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1203', '桥西区', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1204', '沙河市', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1205', '清河县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1206', '邢台县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1207', '隆尧县', '77', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1208', '北市区', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1209', '南市区', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1210', '博野县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1211', '唐县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1212', '安国市', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1213', '安新县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1214', '定兴县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1215', '定州市', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1216', '容城县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1217', '徐水县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1218', '新市区', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1219', '易县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1220', '曲阳县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1221', '望都县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1222', '涞水县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1223', '涞源县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1224', '涿州市', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1225', '清苑县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1226', '满城县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1227', '蠡县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1228', '阜平县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1229', '雄县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1230', '顺平县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1231', '高碑店市', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1232', '高阳县', '78', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1233', '万全县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1234', '下花园区', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1235', '宣化区', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1236', '宣化县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1237', '尚义县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1238', '崇礼县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1239', '康保县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1240', '张北县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1241', '怀安县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1242', '怀来县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1243', '桥东区', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1244', '桥西区', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1245', '沽源县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1246', '涿鹿县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1247', '蔚县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1248', '赤城县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1249', '阳原县', '79', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1250', '丰宁满族自治县', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1251', '兴隆县', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1252', '双桥区', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1253', '双滦区', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1254', '围场满族蒙古族自治县', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1255', '宽城满族自治县', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1256', '平泉县', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1257', '承德县', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1258', '滦平县', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1259', '隆化县', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1260', '鹰手营子矿区', '80', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1261', '冀州市', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1262', '安平县', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1263', '故城县', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1264', '景县', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1265', '枣强县', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1266', '桃城区', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1267', '武强县', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1268', '武邑县', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1269', '深州市', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1270', '阜城县', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1271', '饶阳县', '81', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1272', '三河市', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1273', '固安县', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1274', '大厂回族自治县', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1275', '大城县', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1276', '安次区', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1277', '广阳区', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1278', '文安县', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1279', '永清县', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1280', '霸州市', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1281', '香河县', '82', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1282', '东光县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1283', '任丘市', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1284', '南皮县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1285', '吴桥县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1286', '孟村回族自治县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1287', '新华区', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1288', '沧县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1289', '河间市', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1290', '泊头市', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1291', '海兴县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1292', '献县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1293', '盐山县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1294', '肃宁县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1295', '运河区', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1296', '青县', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1297', '黄骅市', '83', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1298', '万柏林区', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1299', '古交市', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1300', '娄烦县', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1301', '小店区', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1302', '尖草坪区', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1303', '晋源区', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1304', '杏花岭区', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1305', '清徐县', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1306', '迎泽区', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1307', '阳曲县', '84', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1308', '南郊区', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1309', '城区', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1310', '大同县', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1311', '天镇县', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1312', '左云县', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1313', '广灵县', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1314', '新荣区', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1315', '浑源县', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1316', '灵丘县', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1317', '矿区', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1318', '阳高县', '85', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1319', '城区', '86', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1320', '平定县', '86', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1321', '盂县', '86', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1322', '矿区', '86', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1323', '郊区', '86', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1324', '城区', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1325', '壶关县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1326', '屯留县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1327', '平顺县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1328', '武乡县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1329', '沁县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1330', '沁源县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1331', '潞城市', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1332', '襄垣县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1333', '郊区', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1334', '长子县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1335', '长治县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1336', '黎城县', '87', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1337', '城区', '88', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1338', '沁水县', '88', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1339', '泽州县', '88', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1340', '阳城县', '88', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1341', '陵川县', '88', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1342', '高平市', '88', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1343', '右玉县', '89', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1344', '山阴县', '89', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1345', '平鲁区', '89', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1346', '应县', '89', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1347', '怀仁县', '89', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1348', '朔城区', '89', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1349', '介休市', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1350', '和顺县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1351', '太谷县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1352', '寿阳县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1353', '左权县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1354', '平遥县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1355', '昔阳县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1356', '榆次区', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1357', '榆社县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1358', '灵石县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1359', '祁县', '90', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1360', '万荣县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1361', '临猗县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1362', '垣曲县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1363', '夏县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1364', '平陆县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1365', '新绛县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1366', '永济市', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1367', '河津市', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1368', '盐湖区', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1369', '稷山县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1370', '绛县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1371', '芮城县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1372', '闻喜县', '91', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1373', '五台县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1374', '五寨县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1375', '代县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1376', '保德县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1377', '偏关县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1378', '原平市', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1379', '宁武县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1380', '定襄县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1381', '岢岚县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1382', '忻府区', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1383', '河曲县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1384', '神池县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1385', '繁峙县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1386', '静乐县', '92', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1387', '乡宁县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1388', '侯马市', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1389', '古县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1390', '吉县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1391', '大宁县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1392', '安泽县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1393', '尧都区', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1394', '曲沃县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1395', '永和县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1396', '汾西县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1397', '洪洞县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1398', '浮山县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1399', '翼城县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1400', '蒲县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1401', '襄汾县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1402', '隰县', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1403', '霍州市', '93', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1404', '中阳县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1405', '临县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1406', '交口县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1407', '交城县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1408', '兴县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1409', '孝义市', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1410', '岚县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1411', '文水县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1412', '方山县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1413', '柳林县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1414', '汾阳市', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1415', '石楼县', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1416', '离石区', '94', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1417', '和林格尔县', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1418', '回民区', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1419', '土默特左旗', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1420', '托克托县', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1421', '新城区', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1422', '武川县', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1423', '清水河县', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1424', '玉泉区', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1425', '赛罕区', '95', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1426', '东河区', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1427', '九原区', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1428', '固阳县', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1429', '土默特右旗', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1430', '昆都仑区', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1431', '白云矿区', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1432', '石拐区', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1433', '达尔罕茂明安联合旗', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1434', '青山区', '96', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1435', '乌达区', '97', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1436', '海勃湾区', '97', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1437', '海南区', '97', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1438', '元宝山区', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1439', '克什克腾旗', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1440', '喀喇沁旗', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1441', '宁城县', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1442', '巴林右旗', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1443', '巴林左旗', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1444', '敖汉旗', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1445', '松山区', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1446', '林西县', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1447', '红山区', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1448', '翁牛特旗', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1449', '阿鲁科尔沁旗', '98', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1450', '奈曼旗', '99', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1451', '库伦旗', '99', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1452', '开鲁县', '99', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1453', '扎鲁特旗', '99', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1454', '科尔沁区', '99', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1455', '科尔沁左翼中旗', '99', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1456', '科尔沁左翼后旗', '99', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1457', '霍林郭勒市', '99', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1458', '东胜区', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1459', '乌审旗', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1460', '伊金霍洛旗', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1461', '准格尔旗', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1462', '杭锦旗', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1463', '达拉特旗', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1464', '鄂东胜区', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1465', '鄂托克前旗', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1466', '鄂托克旗', '100', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1467', '扎兰屯市', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1468', '新巴尔虎右旗', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1469', '新巴尔虎左旗', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1470', '根河市', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1471', '海拉尔区', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1472', '满洲里市', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1473', '牙克石市', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1474', '莫力达瓦达斡尔族自治旗', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1475', '鄂伦春自治旗', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1476', '鄂温克族自治旗', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1477', '阿荣旗', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1478', '陈巴尔虎旗', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1479', '额尔古纳市', '101', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1480', '临河区', '102', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1481', '乌拉特中旗', '102', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1482', '乌拉特前旗', '102', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1483', '乌拉特后旗', '102', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1484', '五原县', '102', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1485', '杭锦后旗', '102', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1486', '磴口县', '102', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1487', '丰镇市', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1488', '兴和县', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1489', '凉城县', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1490', '化德县', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1491', '卓资县', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1492', '商都县', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1493', '四子王旗', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1494', '察哈尔右翼中旗', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1495', '察哈尔右翼前旗', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1496', '察哈尔右翼后旗', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1497', '集宁区', '103', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1498', '乌兰浩特市', '104', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1499', '扎赉特旗', '104', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1500', '科尔沁右翼中旗', '104', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1501', '科尔沁右翼前旗', '104', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1502', '突泉县', '104', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1503', '阿尔山市', '104', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1504', '东乌珠穆沁旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1505', '二连浩特市', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1506', '多伦县', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1507', '太仆寺旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1508', '正蓝旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1509', '正镶白旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1510', '苏尼特右旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1511', '苏尼特左旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1512', '西乌珠穆沁旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1513', '锡林浩特市', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1514', '镶黄旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1515', '阿巴嘎旗', '105', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1516', '阿拉善右旗', '106', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1517', '阿拉善左旗', '106', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1518', '额济纳旗', '106', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1519', '东陵区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1520', '于洪区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1521', '和平区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1522', '大东区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1523', '康平县', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1524', '新民市', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1525', '沈北新区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1526', '沈河区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1527', '法库县', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1528', '皇姑区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1529', '苏家屯区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1530', '辽中县', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1531', '铁西区', '107', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1532', '中山区', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1533', '庄河市', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1534', '旅顺口区', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1535', '普兰店市', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1536', '沙河口区', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1537', '瓦房店市', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1538', '甘井子区', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1539', '西岗区', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1540', '金州区', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1541', '长海县', '108', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1542', '千山区', '109', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1543', '台安县', '109', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1544', '岫岩满族自治县', '109', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1545', '海城市', '109', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1546', '立山区', '109', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1547', '铁东区', '109', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1548', '铁西区', '109', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1549', '东洲区', '110', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1550', '抚顺县', '110', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1551', '新宾满族自治县', '110', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1552', '新抚区', '110', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1553', '望花区', '110', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1554', '清原满族自治县', '110', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1555', '顺城区', '110', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1556', '南芬区', '111', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1557', '平山区', '111', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1558', '明山区', '111', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1559', '本溪满族自治县', '111', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1560', '桓仁满族自治县', '111', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1561', '溪湖区', '111', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1562', '东港市', '112', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1563', '元宝区', '112', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1564', '凤城市', '112', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1565', '宽甸满族自治县', '112', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1566', '振兴区', '112', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1567', '振安区', '112', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1568', '义县', '113', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1569', '凌河区', '113', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1570', '凌海市', '113', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1571', '北镇市', '113', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1572', '古塔区', '113', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1573', '太和区', '113', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1574', '黑山县', '113', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1575', '大石桥市', '114', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1576', '盖州市', '114', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1577', '站前区', '114', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1578', '老边区', '114', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1579', '西市区', '114', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1580', '鲅鱼圈区', '114', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1581', '太平区', '115', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1582', '彰武县', '115', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1583', '新邱区', '115', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1584', '海州区', '115', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1585', '清河门区', '115', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1586', '细河区', '115', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1587', '蒙古族自治县', '115', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1588', '太子河区', '116', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1589', '宏伟区', '116', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1590', '弓长岭区', '116', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1591', '文圣区', '116', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1592', '灯塔市', '116', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1593', '白塔区', '116', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1594', '辽阳县', '116', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1595', '兴隆台区', '117', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1596', '双台子区', '117', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1597', '大洼县', '117', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1598', '盘山县', '117', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1599', '开原市', '118', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1600', '昌图县', '118', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1601', '清河区', '118', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1602', '西丰县', '118', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1603', '调兵山市', '118', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1604', '铁岭县', '118', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1605', '银州区', '118', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1606', '凌源市', '119', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1607', '北票市', '119', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1608', '双塔区', '119', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1609', '喀喇沁左翼蒙古族自治县', '119', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1610', '建平县', '119', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1611', '朝阳县', '119', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1612', '龙城区', '119', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1613', '兴城市', '120', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1614', '南票区', '120', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1615', '建昌县', '120', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1616', '绥中县', '120', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1617', '连山区', '120', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1618', '龙港区', '120', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1619', '九台市', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1620', '二道区', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1621', '农安县', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1622', '南关区', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1623', '双阳区', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1624', '宽城区', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1625', '德惠市', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1626', '朝阳区', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1627', '榆树市', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1628', '绿园区', '121', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1629', '丰满区', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1630', '昌邑区', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1631', '桦甸市', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1632', '永吉县', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1633', '磐石市', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1634', '舒兰市', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1635', '船营区', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1636', '蛟河市', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1637', '龙潭区', '122', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1638', '伊通满族自治县', '123', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1639', '公主岭市', '123', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1640', '双辽市', '123', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1641', '梨树县', '123', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1642', '铁东区', '123', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1643', '铁西区', '123', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1644', '东丰县', '124', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1645', '东辽县', '124', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1646', '西安区', '124', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1647', '龙山区', '124', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1648', '东昌区', '125', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1649', '二道江区', '125', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1650', '柳河县', '125', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1651', '梅河口市', '125', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1652', '辉南县', '125', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1653', '通化县', '125', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1654', '集安市', '125', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1655', '临江市', '126', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1656', '八道江区', '126', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1657', '抚松县', '126', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1658', '江源区', '126', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1659', '长白朝鲜族自治县', '126', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1660', '靖宇县', '126', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1661', '干安县', '127', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1662', '前郭尔罗斯蒙古族自治县', '127', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1663', '宁江区', '127', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1664', '扶余县', '127', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1665', '长岭县', '127', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1666', '大安市', '128', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1667', '洮北区', '128', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1668', '洮南市', '128', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1669', '通榆县', '128', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1670', '镇赉县', '128', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1671', '和龙市', '129', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1672', '图们市', '129', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1673', '安图县', '129', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1674', '延吉市', '129', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1675', '敦化市', '129', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1676', '汪清县', '129', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1677', '珲春市', '129', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1678', '龙井市', '129', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1679', '五常市', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1680', '依兰县', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1681', '南岗区', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1682', '双城市', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1683', '呼兰区', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1684', '哈尔滨市道里区', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1685', '宾县', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1686', '尚志市', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1687', '巴彦县', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1688', '平房区', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1689', '延寿县', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1690', '方正县', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1691', '木兰县', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1692', '松北区', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1693', '通河县', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1694', '道外区', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1695', '阿城区', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1696', '香坊区', '130', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1697', '依安县', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1698', '克东县', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1699', '克山县', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1700', '富拉尔基区', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1701', '富裕县', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1702', '建华区', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1703', '拜泉县', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1704', '昂昂溪区', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1705', '梅里斯达斡尔族区', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1706', '泰来县', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1707', '甘南县', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1708', '碾子山区', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1709', '讷河市', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1710', '铁锋区', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1711', '龙江县', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1712', '龙沙区', '131', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1713', '城子河区', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1714', '密山市', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1715', '恒山区', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1716', '梨树区', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1717', '滴道区', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1718', '虎林市', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1719', '鸡东县', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1720', '鸡冠区', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1721', '麻山区', '132', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1722', '东山区', '133', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1723', '兴安区', '133', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1724', '兴山区', '133', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1725', '南山区', '133', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1726', '向阳区', '133', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1727', '工农区', '133', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1728', '绥滨县', '133', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1729', '萝北县', '133', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1730', '友谊县', '134', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1731', '四方台区', '134', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1732', '宝山区', '134', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1733', '宝清县', '134', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1734', '尖山区', '134', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1735', '岭东区', '134', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1736', '集贤县', '134', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1737', '饶河县', '134', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1738', '大同区', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1739', '杜尔伯特蒙古族自治县', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1740', '林甸县', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1741', '红岗区', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1742', '肇州县', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1743', '肇源县', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1744', '胡路区', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1745', '萨尔图区', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1746', '龙凤区', '135', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1747', '上甘岭区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1748', '乌伊岭区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1749', '乌马河区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1750', '五营区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1751', '伊春区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1752', '南岔区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1753', '友好区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1754', '嘉荫县', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1755', '带岭区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1756', '新青区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1757', '汤旺河区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1758', '红星区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1759', '美溪区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1760', '翠峦区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1761', '西林区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1762', '金山屯区', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1763', '铁力市', '136', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1764', '东风区', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1765', '前进区', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1766', '同江市', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1767', '向阳区', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1768', '富锦市', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1769', '抚远县', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1770', '桦南县', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1771', '桦川县', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1772', '汤原县', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1773', '郊区', '137', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1774', '勃利县', '138', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1775', '新兴区', '138', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1776', '桃山区', '138', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1777', '茄子河区', '138', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1778', '东宁县', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1779', '东安区', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1780', '宁安市', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1781', '林口县', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1782', '海林市', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1783', '爱民区', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1784', '穆棱市', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1785', '绥芬河市', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1786', '西安区', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1787', '阳明区', '139', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1788', '五大连池市', '140', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1789', '北安市', '140', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1790', '嫩江县', '140', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1791', '孙吴县', '140', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1792', '爱辉区', '140', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1793', '车逊克县', '140', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1794', '逊克县', '140', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1795', '兰西县', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1796', '安达市', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1797', '庆安县', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1798', '明水县', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1799', '望奎县', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1800', '海伦市', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1801', '绥化市北林区', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1802', '绥棱县', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1803', '肇东市', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1804', '青冈县', '141', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1805', '呼玛县', '142', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1806', '塔河县', '142', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1807', '大兴安岭地区加格达奇区', '142', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1808', '大兴安岭地区呼中区', '142', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1809', '大兴安岭地区新林区', '142', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1810', '大兴安岭地区松岭区', '142', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('1811', '漠河县', '142', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2027', '下关区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2028', '六合区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2029', '建邺区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2030', '栖霞区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2031', '江宁区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2032', '浦口区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2033', '溧水县', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2034', '玄武区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2035', '白下区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2036', '秦淮区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2037', '雨花台区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2038', '高淳县', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2039', '鼓楼区', '162', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2040', '北塘区', '163', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2041', '南长区', '163', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2042', '宜兴市', '163', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2043', '崇安区', '163', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2044', '惠山区', '163', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2045', '江阴市', '163', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2046', '滨湖区', '163', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2047', '锡山区', '163', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2048', '丰县', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2049', '九里区', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2050', '云龙区', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2051', '新沂市', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2052', '沛县', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2053', '泉山区', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2054', '睢宁县', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2055', '贾汪区', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2056', '邳州市', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2057', '铜山县', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2058', '鼓楼区', '164', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2059', '天宁区', '165', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2060', '戚墅堰区', '165', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2061', '新北区', '165', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2062', '武进区', '165', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2063', '溧阳市', '165', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2064', '金坛市', '165', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2065', '钟楼区', '165', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2066', '吴中区', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2067', '吴江市', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2068', '太仓市', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2069', '常熟市', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2070', '平江区', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2071', '张家港市', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2072', '昆山市', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2073', '沧浪区', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2074', '相城区', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2075', '苏州工业园区', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2076', '虎丘区', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2077', '金阊区', '166', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2078', '启东市', '167', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2079', '如东县', '167', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2080', '如皋市', '167', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2081', '崇川区', '167', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2082', '海安县', '167', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2083', '海门市', '167', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2084', '港闸区', '167', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2085', '通州市', '167', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2086', '东海县', '168', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2087', '新浦区', '168', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2088', '海州区', '168', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2089', '灌云县', '168', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2090', '灌南县', '168', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2091', '赣榆县', '168', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2092', '连云区', '168', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2093', '楚州区', '169', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2094', '洪泽县', '169', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2095', '涟水县', '169', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2096', '淮阴区', '169', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2097', '清河区', '169', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2098', '清浦区', '169', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2099', '盱眙县', '169', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2100', '金湖县', '169', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2101', '东台市', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2102', '亭湖区', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2103', '响水县', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2104', '大丰市', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2105', '射阳县', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2106', '建湖县', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2107', '滨海县', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2108', '盐都区', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2109', '阜宁县', '170', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2110', '仪征市', '171', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2111', '宝应县', '171', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2112', '广陵区', '171', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2113', '江都市', '171', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2114', '维扬区', '171', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2115', '邗江区', '171', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2116', '高邮市', '171', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2117', '丹徒区', '172', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2118', '丹阳市', '172', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2119', '京口区', '172', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2120', '句容市', '172', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2121', '扬中市', '172', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2122', '润州区', '172', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2123', '兴化市', '173', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2124', '姜堰市', '173', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2125', '泰兴市', '173', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2126', '海陵区', '173', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2127', '靖江市', '173', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2128', '高港区', '173', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2129', '宿城区', '174', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2130', '宿豫区', '174', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2131', '沭阳县', '174', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2132', '泗洪县', '174', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2133', '泗阳县', '174', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2134', '上城区', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2135', '下城区', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2136', '临安市', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2137', '余杭区', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2138', '富阳市', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2139', '建德市', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2140', '拱墅区', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2141', '桐庐县', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2142', '江干区', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2143', '淳安县', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2144', '滨江区', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2145', '萧山区', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2146', '西湖区', '175', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2147', '余姚市', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2148', '北仑区', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2149', '奉化市', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2150', '宁海县', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2151', '慈溪市', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2152', '江东区', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2153', '江北区', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2154', '海曙区', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2155', '象山县', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2156', '鄞州区', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2157', '镇海区', '176', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2158', '乐清市', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2159', '平阳县', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2160', '文成县', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2161', '永嘉县', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2162', '泰顺县', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2163', '洞头县', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2164', '瑞安市', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2165', '瓯海区', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2166', '苍南县', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2167', '鹿城区', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2168', '龙湾区', '177', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2169', '南湖区', '178', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2170', '嘉善县', '178', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2171', '平湖市', '178', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2172', '桐乡市', '178', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2173', '海宁市', '178', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2174', '海盐县', '178', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2175', '秀洲区', '178', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2176', '南浔区', '179', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2177', '吴兴区', '179', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2178', '安吉县', '179', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2179', '德清县', '179', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2180', '长兴县', '179', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2181', '上虞市', '180', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2182', '嵊州市', '180', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2183', '新昌县', '180', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2184', '绍兴县', '180', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2185', '诸暨市', '180', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2186', '越城区', '180', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2187', '定海区', '181', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2188', '岱山县', '181', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2189', '嵊泗县', '181', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2190', '普陀区', '181', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2191', '常山县', '182', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2192', '开化县', '182', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2193', '柯城区', '182', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2194', '江山市', '182', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2195', '衢江区', '182', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2196', '龙游县', '182', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2197', '东阳市', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2198', '义乌市', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2199', '兰溪市', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2200', '婺城区', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2201', '武义县', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2202', '永康市', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2203', '浦江县', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2204', '磐安县', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2205', '金东区', '183', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2206', '三门县', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2207', '临海市', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2208', '仙居县', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2209', '天台县', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2210', '椒江区', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2211', '温岭市', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2212', '玉环县', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2213', '路桥区', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2214', '黄岩区', '184', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2215', '云和县', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2216', '庆元县', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2217', '景宁畲族自治县', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2218', '松阳县', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2219', '缙云县', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2220', '莲都区', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2221', '遂昌县', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2222', '青田县', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2223', '龙泉市', '185', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2224', '包河区', '186', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2225', '庐阳区', '186', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2226', '瑶海区', '186', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2227', '肥东县', '186', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2228', '肥西县', '186', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2229', '蜀山区', '186', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2230', '长丰县', '186', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2231', '三山区', '187', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2232', '南陵县', '187', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2233', '弋江区', '187', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2234', '繁昌县', '187', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2235', '芜湖县', '187', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2236', '镜湖区', '187', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2237', '鸠江区', '187', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2238', '五河县', '188', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2239', '固镇县', '188', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2240', '怀远县', '188', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2241', '淮上区', '188', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2242', '禹会区', '188', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2243', '蚌山区', '188', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2244', '龙子湖区', '188', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2245', '八公山区', '189', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2246', '凤台县', '189', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2247', '大通区', '189', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2248', '潘集区', '189', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2249', '田家庵区', '189', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2250', '谢家集区', '189', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2251', '当涂县', '190', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2252', '花山区', '190', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2253', '金家庄区', '190', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2254', '雨山区', '190', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2255', '杜集区', '191', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2256', '濉溪县', '191', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2257', '烈山区', '191', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2258', '相山区', '191', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2259', '狮子山区', '192', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2260', '郊区', '192', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2261', '铜官山区', '192', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2262', '铜陵县', '192', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2263', '大观区', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2264', '太湖县', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2265', '宜秀区', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2266', '宿松县', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2267', '岳西县', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2268', '怀宁县', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2269', '望江县', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2270', '枞阳县', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2271', '桐城市', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2272', '潜山县', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2273', '迎江区', '193', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2274', '休宁县', '194', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2275', '屯溪区', '194', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2276', '徽州区', '194', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2277', '歙县', '194', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2278', '祁门县', '194', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2279', '黄山区', '194', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2280', '黟县', '194', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2281', '全椒县', '195', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2282', '凤阳县', '195', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2283', '南谯区', '195', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2284', '天长市', '195', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2285', '定远县', '195', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2286', '明光市', '195', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2287', '来安县', '195', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2288', '琅玡区', '195', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2289', '临泉县', '196', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2290', '太和县', '196', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2291', '界首市', '196', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2292', '阜南县', '196', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2293', '颍东区', '196', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2294', '颍州区', '196', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2295', '颍泉区', '196', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2296', '颖上县', '196', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2297', '埇桥区', '197', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2298', '泗县辖', '197', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2299', '灵璧县', '197', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2300', '砀山县', '197', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2301', '萧县', '197', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2302', '含山县', '198', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2303', '和县', '198', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2304', '居巢区', '198', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2305', '庐江县', '198', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2306', '无为县', '198', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2307', '寿县', '199', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2308', '舒城县', '199', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2309', '裕安区', '199', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2310', '金安区', '199', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2311', '金寨县', '199', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2312', '霍山县', '199', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2313', '霍邱县', '199', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2314', '利辛县', '200', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2315', '涡阳县', '200', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2316', '蒙城县', '200', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2317', '谯城区', '200', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2318', '东至县', '201', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2319', '石台县', '201', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2320', '贵池区', '201', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2321', '青阳县', '201', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2322', '宁国市', '202', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2323', '宣州区', '202', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2324', '广德县', '202', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2325', '旌德县', '202', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2326', '泾县', '202', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2327', '绩溪县', '202', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2328', '郎溪县', '202', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2329', '仓山区', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2330', '台江区', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2331', '平潭县', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2332', '晋安区', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2333', '永泰县', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2334', '福清市', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2335', '罗源县', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2336', '连江县', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2337', '长乐市', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2338', '闽侯县', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2339', '闽清县', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2340', '马尾区', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2341', '鼓楼区', '203', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2342', '同安区', '204', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2343', '思明区', '204', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2344', '海沧区', '204', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2345', '湖里区', '204', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2346', '翔安区', '204', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2347', '集美区', '204', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2348', '仙游县', '205', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2349', '城厢区', '205', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2350', '涵江区', '205', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2351', '秀屿区', '205', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2352', '荔城区', '205', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2353', '三元区', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2354', '大田县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2355', '宁化县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2356', '将乐县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2357', '尤溪县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2358', '建宁县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2359', '明溪县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2360', '梅列区', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2361', '永安市', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2362', '沙县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2363', '泰宁县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2364', '清流县', '206', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2365', '丰泽区', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2366', '南安市', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2367', '安溪县', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2368', '德化县', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2369', '惠安县', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2370', '晋江市', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2371', '永春县', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2372', '泉港区', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2373', '洛江区', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2374', '石狮市', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2375', '金门县', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2376', '鲤城区', '207', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2377', '东山县', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2378', '云霄县', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2379', '华安县', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2380', '南靖县', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2381', '平和县', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2382', '漳浦县', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2383', '芗城区', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2384', '诏安县', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2385', '长泰县', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2386', '龙文区', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2387', '龙海市', '208', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2388', '光泽县', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2389', '延平区', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2390', '建瓯市', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2391', '建阳市', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2392', '政和县', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2393', '松溪县', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2394', '武夷山市', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2395', '浦城县', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2396', '邵武市', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2397', '顺昌县', '209', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2398', '上杭县', '210', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2399', '新罗区', '210', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2400', '武平县', '210', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2401', '永定县', '210', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2402', '漳平市', '210', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2403', '连城县', '210', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2404', '长汀县', '210', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2405', '古田县', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2406', '周宁县', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2407', '寿宁县', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2408', '屏南县', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2409', '柘荣县', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2410', '福安市', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2411', '福鼎市', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2412', '蕉城区', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2413', '霞浦县', '211', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2414', '东湖区', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2415', '南昌县', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2416', '安义县', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2417', '新建县', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2418', '湾里区', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2419', '西湖区', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2420', '进贤县', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2421', '青云谱区', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2422', '青山湖区', '212', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2423', '乐平市', '213', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2424', '昌江区', '213', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2425', '浮梁县', '213', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2426', '珠山区', '213', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2427', '上栗县', '214', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2428', '安源区', '214', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2429', '湘东区', '214', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2430', '芦溪县', '214', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2431', '莲花县', '214', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2432', '九江县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2433', '修水县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2434', '庐山区', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2435', '彭泽县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2436', '德安县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2437', '星子县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2438', '武宁县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2439', '永修县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2440', '浔阳区', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2441', '湖口县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2442', '瑞昌市', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2443', '都昌县', '215', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2444', '分宜县', '216', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2445', '渝水区', '216', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2446', '余江县', '217', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2447', '月湖区', '217', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2448', '贵溪市', '217', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2449', '上犹县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2450', '于都县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2451', '会昌县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2452', '信丰县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2453', '全南县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2454', '兴国县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2455', '南康市', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2456', '大余县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2457', '宁都县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2458', '安远县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2459', '定南县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2460', '寻乌县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2461', '崇义县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2462', '瑞金市', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2463', '石城县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2464', '章贡区', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2465', '赣县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2466', '龙南县', '218', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2467', '万安县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2468', '井冈山市', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2469', '吉安县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2470', '吉州区', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2471', '吉水县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2472', '安福县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2473', '峡江县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2474', '新干县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2475', '永丰县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2476', '永新县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2477', '泰和县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2478', '遂川县', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2479', '青原区', '219', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2480', '万载县', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2481', '上高县', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2482', '丰城市', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2483', '奉新县', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2484', '宜丰县', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2485', '樟树市', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2486', '袁州区', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2487', '铜鼓县', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2488', '靖安县', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2489', '高安市', '220', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2490', '东乡县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2491', '临川区', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2492', '乐安县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2493', '南丰县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2494', '南城县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2495', '宜黄县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2496', '崇仁县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2497', '广昌县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2498', '资溪县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2499', '金溪县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2500', '黎川县', '221', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2501', '万年县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2502', '上饶县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2503', '余干县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2504', '信州区', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2505', '婺源县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2506', '广丰县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2507', '弋阳县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2508', '德兴市', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2509', '横峰县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2510', '玉山县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2511', '鄱阳县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2512', '铅山县', '222', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2513', '历下区', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2514', '历城区', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2515', '商河县', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2516', '天桥区', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2517', '市中区', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2518', '平阴县', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2519', '槐荫区', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2520', '济阳县', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2521', '章丘市', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2522', '长清区', '223', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2523', '即墨市', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2524', '四方区', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2525', '城阳区', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2526', '崂山区', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2527', '市北区', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2528', '市南区', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2529', '平度市', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2530', '李沧区', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2531', '胶南市', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2532', '胶州市', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2533', '莱西市', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2534', '黄岛区', '224', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2535', '临淄区', '225', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2536', '博山区', '225', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2537', '周村区', '225', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2538', '张店区', '225', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2539', '桓台县', '225', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2540', '沂源县', '225', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2541', '淄川区', '225', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2542', '高青县', '225', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2543', '台儿庄区', '226', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2544', '山亭区', '226', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2545', '峄城区', '226', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2546', '市中区', '226', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2547', '滕州市', '226', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2548', '薛城区', '226', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2549', '东营区', '227', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2550', '利津县', '227', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2551', '垦利县', '227', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2552', '广饶县', '227', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2553', '河口区', '227', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2554', '招远市', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2555', '栖霞市', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2556', '海阳市', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2557', '牟平区', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2558', '福山区', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2559', '芝罘区', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2560', '莱山区', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2561', '莱州市', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2562', '莱阳市', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2563', '蓬莱市', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2564', '长岛县', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2565', '龙口市', '228', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2566', '临朐县', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2567', '坊子区', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2568', '奎文区', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2569', '安丘市', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2570', '寒亭区', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2571', '寿光市', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2572', '昌乐县', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2573', '昌邑市', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2574', '潍城区', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2575', '诸城市', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2576', '青州市', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2577', '高密市', '229', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2578', '任城区', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2579', '兖州市', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2580', '嘉祥县', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2581', '市中区', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2582', '微山县', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2583', '曲阜市', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2584', '梁山县', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2585', '汶上县', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2586', '泗水县', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2587', '邹城市', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2588', '金乡县', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2589', '鱼台县', '230', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2590', '东平县', '231', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2591', '宁阳县', '231', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2592', '岱岳区', '231', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2593', '新泰市', '231', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2594', '泰山区', '231', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2595', '肥城市', '231', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2596', '乳山市', '232', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2597', '文登市', '232', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2598', '环翠区', '232', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2599', '荣成市', '232', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2600', '东港区', '233', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2601', '五莲县', '233', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2602', '岚山区', '233', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2603', '莒县', '233', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2604', '莱城区', '234', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2605', '钢城区', '234', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2606', '临沭县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2607', '兰山区', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2608', '平邑县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2609', '沂南县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2610', '沂水县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2611', '河东区', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2612', '罗庄区', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2613', '苍山县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2614', '莒南县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2615', '蒙阴县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2616', '费县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2617', '郯城县', '235', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2618', '临邑县', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2619', '乐陵市', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2620', '夏津县', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2621', '宁津县', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2622', '平原县', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2623', '庆云县', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2624', '德城区', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2625', '武城县', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2626', '禹城市', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2627', '陵县', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2628', '齐河县', '236', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2629', '东昌府区', '237', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2630', '东阿县', '237', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2631', '临清市', '237', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2632', '冠县', '237', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2633', '茌平县', '237', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2634', '莘县', '237', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2635', '阳谷县', '237', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2636', '高唐县', '237', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2637', '博兴县', '238', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2638', '惠民县', '238', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2639', '无棣县', '238', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2640', '沾化县', '238', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2641', '滨城区', '238', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2642', '邹平县', '238', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2643', '阳信县', '238', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2644', '东明县', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2645', '单县', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2646', '定陶县', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2647', '巨野县', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2648', '成武县', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2649', '曹县', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2650', '牡丹区', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2651', '郓城县', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2652', '鄄城县', '239', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2653', '上街区', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2654', '中原区', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2655', '中牟县', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2656', '二七区', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2657', '巩义市', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2658', '惠济区', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2659', '新密市', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2660', '新郑市', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2661', '登封市', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2662', '管城回族区', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2663', '荥阳市', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2664', '金水区', '240', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2665', '兰考县', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2666', '尉氏县', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2667', '开封县', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2668', '杞县', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2669', '禹王台区', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2670', '通许县', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2671', '金明区', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2672', '顺河回族区', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2673', '鼓楼区', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2674', '龙亭区', '241', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2675', '伊川县', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2676', '偃师市', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2677', '吉利区', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2678', '孟津县', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2679', '宜阳县', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2680', '嵩县', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2681', '新安县', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2682', '栾川县', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2683', '汝阳县', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2684', '洛宁县', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2685', '洛龙区', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2686', '涧西区', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2687', '瀍河回族区', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2688', '老城区', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2689', '西工区', '242', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2690', '卫东区', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2691', '叶县', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2692', '宝丰县', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2693', '新华区', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2694', '汝州市', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2695', '湛河区', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2696', '石龙区', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2697', '舞钢市', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2698', '郏县', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2699', '鲁山县', '243', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2700', '内黄县', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2701', '北关区', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2702', '安阳县', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2703', '文峰区', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2704', '林州市', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2705', '殷都区', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2706', '汤阴县', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2707', '滑县', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2708', '龙安区', '244', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2709', '山城区', '245', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2710', '浚县', '245', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2711', '淇县', '245', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2712', '淇滨区', '245', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2713', '鹤山区', '245', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2714', '凤泉区', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2715', '卫滨区', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2716', '卫辉市', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2717', '原阳县', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2718', '封丘县', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2719', '延津县', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2720', '新乡县', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2721', '牧野区', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2722', '红旗区', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2723', '获嘉县', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2724', '辉县市', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2725', '长垣县', '246', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2726', '中站区', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2727', '修武县', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2728', '博爱县', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2729', '孟州市', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2730', '山阳区', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2731', '武陟县', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2732', '沁阳市', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2733', '温县', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2734', '解放区', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2735', '马村区', '247', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2736', '华龙区', '248', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2737', '南乐县', '248', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2738', '台前县', '248', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2739', '清丰县', '248', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2740', '濮阳县', '248', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2741', '范县', '248', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2742', '禹州市', '249', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2743', '襄城县', '249', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2744', '许昌县', '249', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2745', '鄢陵县', '249', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2746', '长葛市', '249', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2747', '魏都区', '249', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2748', '临颍县', '250', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2749', '召陵区', '250', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2750', '源汇区', '250', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2751', '舞阳县', '250', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2752', '郾城区', '250', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2753', '义马市', '251', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2754', '卢氏县', '251', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2755', '渑池县', '251', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2756', '湖滨区', '251', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2757', '灵宝市', '251', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2758', '陕县', '251', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2759', '内乡县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2760', '南召县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2761', '卧龙区', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2762', '唐河县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2763', '宛城区', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2764', '新野县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2765', '方城县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2766', '桐柏县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2767', '淅川县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2768', '社旗县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2769', '西峡县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2770', '邓州市', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2771', '镇平县', '252', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2772', '夏邑县', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2773', '宁陵县', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2774', '柘城县', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2775', '民权县', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2776', '永城市', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2777', '睢县', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2778', '睢阳区', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2779', '粱园区', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2780', '虞城县', '253', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2781', '光山县', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2782', '商城县', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2783', '固始县', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2784', '平桥区', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2785', '息县', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2786', '新县', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2787', '浉河区', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2788', '淮滨县', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2789', '潢川县', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2790', '罗山县', '254', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2791', '商水县', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2792', '太康县', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2793', '川汇区', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2794', '扶沟县', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2795', '沈丘县', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2796', '淮阳县', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2797', '西华县', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2798', '郸城县', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2799', '项城市', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2800', '鹿邑县', '255', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2801', '上蔡县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2802', '平舆县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2803', '新蔡县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2804', '正阳县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2805', '汝南县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2806', '泌阳县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2807', '确山县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2808', '西平县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2809', '遂平县', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2810', '驿城区', '256', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2811', '济源市', '257', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2812', '东西湖区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2813', '新洲区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2814', '武昌区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2815', '汉南区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2816', '汉阳区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2817', '江夏区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2818', '江岸区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2819', '江汉区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2820', '洪山区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2821', '硚口区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2822', '蔡甸区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2823', '青山区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2824', '黄陂区', '258', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2825', '下陆区', '259', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2826', '大冶市', '259', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2827', '西塞山区', '259', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2828', '铁山区', '259', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2829', '阳新县', '259', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2830', '黄石港区', '259', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2831', '丹江口市', '260', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2832', '张湾区', '260', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2833', '房县', '260', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2834', '竹山县', '260', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2835', '竹溪县', '260', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2836', '茅箭区', '260', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2837', '郧县', '260', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2838', '郧西县', '260', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2839', '五峰土家族自治县', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2840', '伍家岗区', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2841', '兴山县', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2842', '夷陵区', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2843', '宜都市', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2844', '当阳市', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2845', '枝江市', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2846', '点军区', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2847', '秭归县', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2848', '虢亭区', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2849', '西陵区', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2850', '远安县', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2851', '长阳土家族自治县', '261', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2852', '保康县', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2853', '南漳县', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2854', '宜城市', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2855', '枣阳市', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2856', '樊城区', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2857', '老河口市', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2858', '襄城区', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2859', '襄阳区', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2860', '谷城县', '262', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2861', '华容区', '263', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2862', '粱子湖', '263', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2863', '鄂城区', '263', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2864', '东宝区', '264', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2865', '京山县', '264', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2866', '掇刀区', '264', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2867', '沙洋县', '264', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2868', '钟祥市', '264', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2869', '云梦县', '265', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2870', '大悟县', '265', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2871', '孝南区', '265', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2872', '孝昌县', '265', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2873', '安陆市', '265', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2874', '应城市', '265', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2875', '汉川市', '265', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2876', '公安县', '266', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2877', '松滋市', '266', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2878', '江陵县', '266', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2879', '沙市区', '266', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2880', '洪湖市', '266', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2881', '监利县', '266', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2882', '石首市', '266', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2883', '荆州区', '266', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2884', '团风县', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2885', '武穴市', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2886', '浠水县', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2887', '红安县', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2888', '罗田县', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2889', '英山县', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2890', '蕲春县', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2891', '麻城市', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2892', '黄州区', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2893', '黄梅县', '267', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2894', '咸安区', '268', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2895', '嘉鱼县', '268', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2896', '崇阳县', '268', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2897', '赤壁市', '268', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2898', '通城县', '268', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2899', '通山县', '268', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2900', '广水市', '269', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2901', '曾都区', '269', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2902', '利川市', '270', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2903', '咸丰县', '270', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2904', '宣恩县', '270', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2905', '巴东县', '270', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2906', '建始县', '270', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2907', '恩施市', '270', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2908', '来凤县', '270', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2909', '鹤峰县', '270', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2910', '仙桃市', '271', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2911', '潜江市', '272', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2912', '天门市', '273', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2913', '神农架林区', '274', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2914', '天心区', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2915', '宁乡县', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2916', '岳麓区', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2917', '开福区', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2918', '望城县', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2919', '浏阳市', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2920', '芙蓉区', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2921', '长沙县', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2922', '雨花区', '275', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2923', '天元区', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2924', '攸县', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2925', '株洲县', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2926', '炎陵县', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2927', '石峰区', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2928', '芦淞区', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2929', '茶陵县', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2930', '荷塘区', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2931', '醴陵市', '276', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2932', '岳塘区', '277', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2933', '湘乡市', '277', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2934', '湘潭县', '277', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2935', '雨湖区', '277', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2936', '韶山市', '277', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2937', '南岳区', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2938', '常宁市', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2939', '珠晖区', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2940', '石鼓区', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2941', '祁东县', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2942', '耒阳市', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2943', '蒸湘区', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2944', '衡东县', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2945', '衡南县', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2946', '衡山县', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2947', '衡阳县', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2948', '雁峰区', '278', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2949', '北塔区', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2950', '双清区', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2951', '城步苗族自治县', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2952', '大祥区', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2953', '新宁县', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2954', '新邵县', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2955', '武冈市', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2956', '洞口县', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2957', '绥宁县', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2958', '邵东县', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2959', '邵阳县', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2960', '隆回县', '279', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2961', '临湘市', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2962', '云溪区', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2963', '华容县', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2964', '君山区', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2965', '岳阳县', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2966', '岳阳楼区', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2967', '平江县', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2968', '汨罗市', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2969', '湘阴县', '280', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2970', '临澧县', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2971', '安乡县', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2972', '桃源县', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2973', '武陵区', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2974', '汉寿县', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2975', '津市市', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2976', '澧县', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2977', '石门县', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2978', '鼎城区', '281', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2979', '慈利县', '282', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2980', '桑植县', '282', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2981', '武陵源区', '282', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2982', '永定区', '282', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2983', '南县', '283', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2984', '安化县', '283', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2985', '桃江县', '283', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2986', '沅江市', '283', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2987', '资阳区', '283', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2988', '赫山区', '283', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2989', '临武县', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2990', '北湖区', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2991', '嘉禾县', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2992', '安仁县', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2993', '宜章县', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2994', '桂东县', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2995', '桂阳县', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2996', '永兴县', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2997', '汝城县', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2998', '苏仙区', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('2999', '资兴市', '284', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3000', '东安县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3001', '冷水滩区', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3002', '双牌县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3003', '宁远县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3004', '新田县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3005', '江华瑶族自治县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3006', '江永县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3007', '祁阳县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3008', '蓝山县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3009', '道县', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3010', '零陵区', '285', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3011', '中方县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3012', '会同县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3013', '新晃侗族自治县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3014', '沅陵县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3015', '洪江市/洪江区', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3016', '溆浦县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3017', '芷江侗族自治县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3018', '辰溪县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3019', '通道侗族自治县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3020', '靖州苗族侗族自治县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3021', '鹤城区', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3022', '麻阳苗族自治县', '286', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3023', '冷水江市', '287', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3024', '双峰县', '287', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3025', '娄星区', '287', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3026', '新化县', '287', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3027', '涟源市', '287', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3028', '保靖县', '288', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3029', '凤凰县', '288', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3030', '古丈县', '288', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3031', '吉首市', '288', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3032', '永顺县', '288', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3033', '泸溪县', '288', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3034', '花垣县', '288', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3035', '龙山县', '288', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3036', '萝岗区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3037', '南沙区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3038', '从化市', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3039', '增城市', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3040', '天河区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3041', '海珠区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3042', '番禺区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3043', '白云区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3044', '花都区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3045', '荔湾区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3046', '越秀区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3047', '黄埔区', '289', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3048', '乐昌市', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3049', '乳源瑶族自治县', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3050', '仁化县', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3051', '南雄市', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3052', '始兴县', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3053', '新丰县', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3054', '曲江区', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3055', '武江区', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3056', '浈江区', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3057', '翁源县', '290', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3058', '南山区', '291', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3059', '宝安区', '291', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3060', '盐田区', '291', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3061', '福田区', '291', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3062', '罗湖区', '291', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3063', '龙岗区', '291', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3064', '斗门区', '292', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3065', '金湾区', '292', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3066', '香洲区', '292', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3067', '南澳县', '293', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3068', '潮南区', '293', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3069', '潮阳区', '293', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3070', '澄海区', '293', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3071', '濠江区', '293', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3072', '金平区', '293', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3073', '龙湖区', '293', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3074', '三水区', '294', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3075', '南海区', '294', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3076', '禅城区', '294', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3077', '顺德区', '294', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3078', '高明区', '294', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3079', '台山市', '295', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3080', '开平市', '295', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3081', '恩平市', '295', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3082', '新会区', '295', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3083', '江海区', '295', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3084', '蓬江区', '295', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3085', '鹤山市', '295', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3086', '吴川市', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3087', '坡头区', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3088', '廉江市', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3089', '徐闻县', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3090', '赤坎区', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3091', '遂溪县', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3092', '雷州市', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3093', '霞山区', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3094', '麻章区', '296', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3095', '信宜市', '297', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3096', '化州市', '297', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3097', '电白县', '297', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3098', '茂南区', '297', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3099', '茂港区', '297', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3100', '高州市', '297', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3101', '四会市', '298', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3102', '封开县', '298', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3103', '广宁县', '298', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3104', '德庆县', '298', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3105', '怀集县', '298', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3106', '端州区', '298', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3107', '高要市', '298', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3108', '鼎湖区', '298', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3109', '博罗县', '299', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3110', '惠东县', '299', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3111', '惠城区', '299', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3112', '惠阳区', '299', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3113', '龙门县', '299', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3114', '丰顺县', '300', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3115', '五华县', '300', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3116', '兴宁市', '300', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3117', '大埔县', '300', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3118', '平远县', '300', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3119', '梅县', '300', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3120', '梅江区', '300', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3121', '蕉岭县', '300', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3122', '城区', '301', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3123', '海丰县', '301', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3124', '陆丰市', '301', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3125', '陆河县', '301', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3126', '东源县', '302', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3127', '和平县', '302', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3128', '源城区', '302', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3129', '紫金县', '302', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3130', '连平县', '302', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3131', '龙川县', '302', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3132', '江城区', '303', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3133', '阳东县', '303', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3134', '阳春市', '303', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3135', '阳西县', '303', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3136', '佛冈县', '304', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3137', '清城区', '304', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3138', '清新县', '304', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3139', '英德市', '304', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3140', '连南瑶族自治县', '304', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3141', '连山壮族瑶族自治县', '304', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3142', '连州市', '304', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3143', '阳山县', '304', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3144', '东莞市', '305', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3145', '中山市', '306', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3146', '湘桥区', '307', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3147', '潮安县', '307', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3148', '饶平县', '307', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3149', '惠来县', '308', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3150', '揭东县', '308', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3151', '揭西县', '308', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3152', '普宁市', '308', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3153', '榕城区', '308', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3154', '云城区', '309', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3155', '云安县', '309', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3156', '新兴县', '309', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3157', '罗定市', '309', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3158', '郁南县', '309', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3159', '上林县', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3160', '兴宁区', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3161', '宾阳县', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3162', '横县', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3163', '武鸣县', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3164', '江南区', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3165', '良庆区', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3166', '西乡塘区', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3167', '邕宁区', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3168', '隆安县', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3169', '青秀区', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3170', '马山县', '310', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3171', '三江侗族自治县', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3172', '城中区', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3173', '柳北区', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3174', '柳南区', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3175', '柳城县', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3176', '柳江县', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3177', '融安县', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3178', '融水苗族自治县', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3179', '鱼峰区', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3180', '鹿寨县', '311', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3181', '七星区', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3182', '临桂县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3183', '全州县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3184', '兴安县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3185', '叠彩区', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3186', '平乐县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3187', '恭城瑶族自治县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3188', '永福县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3189', '灌阳县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3190', '灵川县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3191', '秀峰区', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3192', '荔浦县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3193', '象山区', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3194', '资源县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3195', '阳朔县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3196', '雁山区', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3197', '龙胜各族自治县', '312', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3198', '万秀区', '313', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3199', '岑溪市', '313', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3200', '苍梧县', '313', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3201', '蒙山县', '313', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3202', '藤县', '313', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3203', '蝶山区', '313', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3204', '长洲区', '313', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3205', '合浦县', '314', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3206', '海城区', '314', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3207', '铁山港区', '314', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3208', '银海区', '314', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3209', '上思县', '315', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3210', '东兴市', '315', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3211', '港口区', '315', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3212', '防城区', '315', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3213', '浦北县', '316', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3214', '灵山县', '316', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3215', '钦北区', '316', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3216', '钦南区', '316', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3217', '平南县', '317', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3218', '桂平市', '317', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3219', '港北区', '317', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3220', '港南区', '317', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3221', '覃塘区', '317', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3222', '兴业县', '318', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3223', '北流市', '318', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3224', '博白县', '318', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3225', '容县', '318', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3226', '玉州区', '318', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3227', '陆川县', '318', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3228', '乐业县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3229', '凌云县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3230', '右江区', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3231', '平果县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3232', '德保县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3233', '田东县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3234', '田林县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3235', '田阳县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3236', '西林县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3237', '那坡县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3238', '隆林各族自治县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3239', '靖西县', '319', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3240', '八步区', '320', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3241', '富川瑶族自治县', '320', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3242', '昭平县', '320', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3243', '钟山县', '320', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3244', '东兰县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3245', '凤山县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3246', '南丹县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3247', '大化瑶族自治县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3248', '天峨县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3249', '宜州市', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3250', '巴马瑶族自治县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3251', '环江毛南族自治县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3252', '罗城仫佬族自治县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3253', '都安瑶族自治县', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3254', '金城江区', '321', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3255', '兴宾区', '322', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3256', '合山市', '322', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3257', '忻城县', '322', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3258', '武宣县', '322', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3259', '象州县', '322', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3260', '金秀瑶族自治县', '322', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3261', '凭祥市', '323', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3262', '大新县', '323', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3263', '天等县', '323', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3264', '宁明县', '323', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3265', '扶绥县', '323', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3266', '江州区', '323', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3267', '龙州县', '323', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3268', '琼山区', '324', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3269', '秀英区', '324', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3270', '美兰区', '324', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3271', '龙华区', '324', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3272', '三亚市', '325', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3273', '五指山市', '326', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3274', '琼海市', '327', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3275', '儋州市', '328', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3276', '文昌市', '329', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3277', '万宁市', '330', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3278', '东方市', '331', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3279', '定安县', '332', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3280', '屯昌县', '333', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3281', '澄迈县', '334', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3282', '临高县', '335', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3283', '白沙黎族自治县', '336', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3284', '昌江黎族自治县', '337', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3285', '乐东黎族自治县', '338', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3286', '陵水黎族自治县', '339', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3287', '保亭黎族苗族自治县', '340', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('3288', '琼中黎族苗族自治县', '341', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4209', '双流县', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4210', '大邑县', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4211', '崇州市', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4212', '彭州市', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4213', '成华区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4214', '新津县', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4215', '新都区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4216', '武侯区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4217', '温江区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4218', '蒲江县', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4219', '邛崃市', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4220', '郫县', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4221', '都江堰市', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4222', '金堂县', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4223', '金牛区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4224', '锦江区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4225', '青白江区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4226', '青羊区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4227', '龙泉驿区', '385', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4228', '大安区', '386', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4229', '富顺县', '386', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4230', '沿滩区', '386', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4231', '自流井区', '386', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4232', '荣县', '386', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4233', '贡井区', '386', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4234', '东区', '387', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4235', '仁和区', '387', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4236', '盐边县', '387', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4237', '米易县', '387', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4238', '西区', '387', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4239', '叙永县', '388', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4240', '古蔺县', '388', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4241', '合江县', '388', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4242', '江阳区', '388', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4243', '泸县', '388', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4244', '纳溪区', '388', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4245', '龙马潭区', '388', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4246', '中江县', '389', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4247', '什邡市', '389', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4248', '广汉市', '389', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4249', '旌阳区', '389', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4250', '绵竹市', '389', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4251', '罗江县', '389', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4252', '三台县', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4253', '北川羌族自治县', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4254', '安县', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4255', '平武县', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4256', '梓潼县', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4257', '江油市', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4258', '涪城区', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4259', '游仙区', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4260', '盐亭县', '390', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4261', '元坝区', '391', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4262', '利州区', '391', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4263', '剑阁县', '391', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4264', '旺苍县', '391', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4265', '朝天区', '391', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4266', '苍溪县', '391', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4267', '青川县', '391', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4268', '大英县', '392', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4269', '安居区', '392', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4270', '射洪县', '392', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4271', '船山区', '392', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4272', '蓬溪县', '392', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4273', '东兴区', '393', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4274', '威远县', '393', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4275', '市中区', '393', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4276', '资中县', '393', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4277', '隆昌县', '393', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4278', '五通桥区', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4279', '井研县', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4280', '夹江县', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4281', '峨眉山市', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4282', '峨边彝族自治县', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4283', '市中区', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4284', '沐川县', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4285', '沙湾区', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4286', '犍为县', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4287', '金口河区', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4288', '马边彝族自治县', '394', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4289', '仪陇县', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4290', '南充市嘉陵区', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4291', '南部县', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4292', '嘉陵区', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4293', '营山县', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4294', '蓬安县', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4295', '西充县', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4296', '阆中市', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4297', '顺庆区', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4298', '高坪区', '395', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4299', '东坡区', '396', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4300', '丹棱县', '396', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4301', '仁寿县', '396', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4302', '彭山县', '396', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4303', '洪雅县', '396', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4304', '青神县', '396', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4305', '兴文县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4306', '南溪县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4307', '宜宾县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4308', '屏山县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4309', '江安县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4310', '珙县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4311', '筠连县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4312', '翠屏区', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4313', '长宁县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4314', '高县', '397', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4315', '华蓥市', '398', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4316', '岳池县', '398', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4317', '广安区', '398', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4318', '武胜县', '398', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4319', '邻水县', '398', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4320', '万源市', '399', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4321', '大竹县', '399', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4322', '宣汉县', '399', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4323', '开江县', '399', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4324', '渠县', '399', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4325', '达县', '399', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4326', '通川区', '399', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4327', '名山县', '400', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4328', '天全县', '400', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4329', '宝兴县', '400', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4330', '汉源县', '400', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4331', '石棉县', '400', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4332', '芦山县', '400', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4333', '荥经县', '400', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4334', '雨城区', '400', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4335', '南江县', '401', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4336', '巴州区', '401', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4337', '平昌县', '401', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4338', '通江县', '401', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4339', '乐至县', '402', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4340', '安岳县', '402', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4341', '简阳市', '402', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4342', '雁江区', '402', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4343', '九寨沟县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4344', '壤塘县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4345', '小金县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4346', '松潘县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4347', '汶川县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4348', '理县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4349', '红原县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4350', '若尔盖县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4351', '茂县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4352', '金川县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4353', '阿坝县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4354', '马尔康县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4355', '黑水县', '403', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4356', '丹巴县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4357', '乡城县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4358', '巴塘县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4359', '康定县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4360', '得荣县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4361', '德格县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4362', '新龙县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4363', '泸定县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4364', '炉霍县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4365', '理塘县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4366', '甘孜县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4367', '白玉县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4368', '石渠县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4369', '稻城县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4370', '色达县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4371', '道孚县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4372', '雅江县', '404', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4373', '会东县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4374', '会理县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4375', '冕宁县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4376', '喜德县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4377', '宁南县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4378', '布拖县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4379', '德昌县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4380', '昭觉县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4381', '普格县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4382', '木里藏族自治县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4383', '甘洛县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4384', '盐源县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4385', '美姑县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4386', '西昌', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4387', '越西县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4388', '金阳县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4389', '雷波县', '405', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4390', '乌当区', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4391', '云岩区', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4392', '修文县', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4393', '南明区', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4394', '小河区', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4395', '开阳县', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4396', '息烽县', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4397', '清镇市', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4398', '白云区', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4399', '花溪区', '406', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4400', '六枝特区', '407', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4401', '水城县', '407', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4402', '盘县', '407', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4403', '钟山区', '407', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4404', '习水县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4405', '仁怀市', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4406', '余庆县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4407', '凤冈县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4408', '务川仡佬族苗族自治县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4409', '桐梓县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4410', '正安县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4411', '汇川区', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4412', '湄潭县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4413', '红花岗区', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4414', '绥阳县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4415', '赤水市', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4416', '道真仡佬族苗族自治县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4417', '遵义县', '408', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4418', '关岭布依族苗族自治县', '409', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4419', '平坝县', '409', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4420', '普定县', '409', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4421', '紫云苗族布依族自治县', '409', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4422', '西秀区', '409', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4423', '镇宁布依族苗族自治县', '409', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4424', '万山特区', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4425', '印江土家族苗族自治县', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4426', '德江县', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4427', '思南县', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4428', '松桃苗族自治县', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4429', '江口县', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4430', '沿河土家族自治县', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4431', '玉屏侗族自治县', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4432', '石阡县', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4433', '铜仁市', '410', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4434', '兴义市', '411', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4435', '兴仁县', '411', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4436', '册亨县', '411', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4437', '安龙县', '411', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4438', '普安县', '411', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4439', '晴隆县', '411', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4440', '望谟县', '411', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4441', '贞丰县', '411', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4442', '大方县', '412', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4443', '威宁彝族回族苗族自治县', '412', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4444', '毕节市', '412', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4445', '纳雍县', '412', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4446', '织金县', '412', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4447', '赫章县', '412', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4448', '金沙县', '412', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4449', '黔西县', '412', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4450', '三穗县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4451', '丹寨县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4452', '从江县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4453', '凯里市', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4454', '剑河县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4455', '台江县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4456', '天柱县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4457', '岑巩县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4458', '施秉县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4459', '榕江县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4460', '锦屏县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4461', '镇远县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4462', '雷山县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4463', '麻江县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4464', '黄平县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4465', '黎平县', '413', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4466', '三都水族自治县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4467', '平塘县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4468', '惠水县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4469', '独山县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4470', '瓮安县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4471', '福泉市', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4472', '罗甸县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4473', '荔波县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4474', '贵定县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4475', '都匀市', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4476', '长顺县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4477', '龙里县', '414', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4478', '东川区', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4479', '五华区', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4480', '呈贡县', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4481', '安宁市', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4482', '官渡区', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4483', '宜良县', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4484', '富民县', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4485', '寻甸回族彝族自治县', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4486', '嵩明县', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4487', '晋宁县', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4488', '盘龙区', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4489', '石林彝族自治县', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4490', '禄劝彝族苗族自治县', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4491', '西山区', '415', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4492', '会泽县', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4493', '宣威市', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4494', '富源县', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4495', '师宗县', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4496', '沾益县', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4497', '罗平县', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4498', '陆良县', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4499', '马龙县', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4500', '麒麟区', '416', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4501', '元江哈尼族彝族傣族自治县', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4502', '华宁县', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4503', '峨山彝族自治县', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4504', '新平彝族傣族自治县', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4505', '易门县', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4506', '江川县', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4507', '澄江县', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4508', '红塔区', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4509', '通海县', '417', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4510', '施甸县', '418', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4511', '昌宁县', '418', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4512', '腾冲县', '418', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4513', '隆阳区', '418', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4514', '龙陵县', '418', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4515', '大关县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4516', '威信县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4517', '巧家县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4518', '彝良县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4519', '昭阳区', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4520', '水富县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4521', '永善县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4522', '盐津县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4523', '绥江县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4524', '镇雄县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4525', '鲁甸县', '419', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4526', '华坪县', '420', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4527', '古城区', '420', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4528', '宁蒗彝族自治县', '420', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4529', '永胜县', '420', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4530', '玉龙纳西族自治县', '420', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4531', '临翔区', '422', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4532', '云县', '422', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4533', '凤庆县', '422', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4534', '双江拉祜族佤族布朗族傣族自治县', '422', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4535', '永德县', '422', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4536', '沧源佤族自治县', '422', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4537', '耿马傣族佤族自治县', '422', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4538', '镇康县', '422', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4539', '元谋县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4540', '南华县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4541', '双柏县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4542', '大姚县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4543', '姚安县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4544', '楚雄市', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4545', '武定县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4546', '永仁县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4547', '牟定县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4548', '禄丰县', '423', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4549', '个旧市', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4550', '元阳县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4551', '屏边苗族自治县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4552', '建水县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4553', '开远市', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4554', '弥勒县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4555', '河口瑶族自治县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4556', '泸西县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4557', '石屏县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4558', '红河县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4559', '绿春县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4560', '蒙自县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4561', '金平苗族瑶族傣族自治县', '424', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4562', '丘北县', '425', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4563', '富宁县', '425', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4564', '广南县', '425', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4565', '文山县', '425', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4566', '砚山县', '425', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4567', '西畴县', '425', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4568', '马关县', '425', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4569', '麻栗坡县', '425', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4570', '勐海县', '426', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4571', '勐腊县', '426', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4572', '景洪市', '426', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4573', '云龙县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4574', '剑川县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4575', '南涧彝族自治县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4576', '大理市', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4577', '宾川县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4578', '巍山彝族回族自治县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4579', '弥渡县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4580', '永平县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4581', '洱源县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4582', '漾濞彝族自治县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4583', '祥云县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4584', '鹤庆县', '427', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4585', '梁河县', '428', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4586', '潞西市', '428', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4587', '瑞丽市', '428', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4588', '盈江县', '428', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4589', '陇川县', '428', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4590', '德钦县', '430', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4591', '维西傈僳族自治县', '430', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4592', '香格里拉县', '430', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4593', '城关区', '431', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4594', '堆龙德庆县', '431', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4595', '墨竹工卡县', '431', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4596', '尼木县', '431', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4597', '当雄县', '431', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4598', '曲水县', '431', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4599', '林周县', '431', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4600', '达孜县', '431', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4601', '丁青县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4602', '八宿县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4603', '察雅县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4604', '左贡县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4605', '昌都县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4606', '江达县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4607', '洛隆县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4608', '类乌齐县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4609', '芒康县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4610', '贡觉县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4611', '边坝县', '432', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4612', '乃东县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4613', '加查县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4614', '扎囊县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4615', '措美县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4616', '曲松县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4617', '桑日县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4618', '洛扎县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4619', '浪卡子县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4620', '琼结县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4621', '贡嘎县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4622', '错那县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4623', '隆子县', '433', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4624', '亚东县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4625', '仁布县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4626', '仲巴县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4627', '南木林县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4628', '吉隆县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4629', '定日县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4630', '定结县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4631', '岗巴县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4632', '康马县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4633', '拉孜县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4634', '日喀则市', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4635', '昂仁县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4636', '江孜县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4637', '白朗县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4638', '聂拉木县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4639', '萨嘎县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4640', '萨迦县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4641', '谢通门县', '434', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4642', '嘉黎县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4643', '安多县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4644', '尼玛县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4645', '巴青县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4646', '比如县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4647', '班戈县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4648', '申扎县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4649', '索县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4650', '聂荣县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4651', '那曲县', '435', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4652', '噶尔县', '436', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4653', '措勤县', '436', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4654', '改则县', '436', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4655', '日土县', '436', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4656', '普兰县', '436', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4657', '札达县', '436', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4658', '革吉县', '436', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4659', '墨脱县', '437', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4660', '察隅县', '437', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4661', '工布江达县', '437', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4662', '朗县', '437', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4663', '林芝县', '437', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4664', '波密县', '437', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4665', '米林县', '437', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4666', '临潼区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4667', '周至县', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4668', '户县', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4669', '新城区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4670', '未央区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4671', '灞桥区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4672', '碑林区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4673', '莲湖区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4674', '蓝田县', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4675', '长安区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4676', '阎良区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4677', '雁塔区', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4678', '高陵县', '438', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4679', '印台区', '439', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4680', '宜君县', '439', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4681', '王益区', '439', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4682', '耀州区', '439', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4683', '凤县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4684', '凤翔县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4685', '千阳县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4686', '太白县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4687', '岐山县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4688', '扶风县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4689', '渭滨区', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4690', '眉县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4691', '金台区', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4692', '陇县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4693', '陈仓区', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4694', '麟游县', '440', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4695', '三原县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4696', '干县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4697', '兴平市', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4698', '彬县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4699', '旬邑县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4700', '杨陵区', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4701', '武功县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4702', '永寿县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4703', '泾阳县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4704', '淳化县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4705', '渭城区', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4706', '礼泉县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4707', '秦都区', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4708', '长武县', '441', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4709', '临渭区', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4710', '华县', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4711', '华阴市', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4712', '合阳县', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4713', '大荔县', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4714', '富平县', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4715', '潼关县', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4716', '澄城县', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4717', '白水县', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4718', '蒲城县', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4719', '韩城市', '442', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4720', '吴起县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4721', '子长县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4722', '安塞县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4723', '宜川县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4724', '宝塔区', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4725', '富县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4726', '延川县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4727', '延长县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4728', '志丹县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4729', '洛川县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4730', '甘泉县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4731', '黄陵县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4732', '黄龙县', '443', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4733', '佛坪县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4734', '勉县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4735', '南郑县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4736', '城固县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4737', '宁强县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4738', '汉台区', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4739', '洋县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4740', '留坝县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4741', '略阳县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4742', '西乡县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4743', '镇巴县', '444', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4744', '佳县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4745', '吴堡县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4746', '子洲县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4747', '定边县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4748', '府谷县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4749', '榆林市榆阳区', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4750', '横山县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4751', '清涧县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4752', '神木县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4753', '米脂县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4754', '绥德县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4755', '靖边县', '445', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4756', '宁陕县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4757', '岚皋县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4758', '平利县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4759', '旬阳县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4760', '汉滨区', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4761', '汉阴县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4762', '白河县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4763', '石泉县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4764', '紫阳县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4765', '镇坪县', '446', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4766', '丹凤县', '447', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4767', '商南县', '447', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4768', '商州区', '447', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4769', '山阳县', '447', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4770', '柞水县', '447', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4771', '洛南县', '447', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4772', '镇安县', '447', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4773', '七里河区', '448', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4774', '城关区', '448', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4775', '安宁区', '448', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4776', '榆中县', '448', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4777', '永登县', '448', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4778', '皋兰县', '448', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4779', '红古区', '448', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4780', '西固区', '448', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4781', '嘉峪关市', '449', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4782', '永昌县', '450', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4783', '金川区', '450', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4784', '会宁县', '451', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4785', '平川区', '451', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4786', '景泰县', '451', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4787', '白银区', '451', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4788', '靖远县', '451', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4789', '张家川回族自治县', '452', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4790', '武山县', '452', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4791', '清水县', '452', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4792', '甘谷县', '452', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4793', '秦安县', '452', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4794', '秦州区', '452', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4795', '麦积区', '452', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4796', '凉州区', '453', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4797', '古浪县', '453', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4798', '天祝藏族自治县', '453', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4799', '民勤县', '453', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4800', '临泽县', '454', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4801', '山丹县', '454', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4802', '民乐县', '454', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4803', '甘州区', '454', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4804', '肃南裕固族自治县', '454', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4805', '高台县', '454', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4806', '华亭县', '455', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4807', '崆峒区', '455', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4808', '崇信县', '455', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4809', '庄浪县', '455', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4810', '泾川县', '455', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4811', '灵台县', '455', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4812', '静宁县', '455', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4813', '敦煌市', '456', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4814', '玉门市', '456', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4815', '瓜州县（原安西县）', '456', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4816', '肃北蒙古族自治县', '456', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4817', '肃州区', '456', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4818', '金塔县', '456', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4819', '阿克塞哈萨克族自治县', '456', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4820', '华池县', '457', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4821', '合水县', '457', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4822', '宁县', '457', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4823', '庆城县', '457', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4824', '正宁县', '457', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4825', '环县', '457', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4826', '西峰区', '457', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4827', '镇原县', '457', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4828', '临洮县', '458', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4829', '安定区', '458', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4830', '岷县', '458', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4831', '渭源县', '458', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4832', '漳县', '458', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4833', '通渭县', '458', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4834', '陇西县', '458', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4835', '两当县', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4836', '宕昌县', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4837', '康县', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4838', '徽县', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4839', '成县', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4840', '文县', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4841', '武都区', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4842', '礼县', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4843', '西和县', '459', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4844', '东乡族自治县', '460', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4845', '临夏县', '460', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4846', '临夏市', '460', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4847', '和政县', '460', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4848', '广河县', '460', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4849', '康乐县', '460', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4850', '永靖县', '460', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4851', '积石山保安族东乡族撒拉族自治县', '460', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4852', '临潭县', '461', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4853', '卓尼县', '461', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4854', '合作市', '461', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4855', '夏河县', '461', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4856', '玛曲县', '461', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4857', '碌曲县', '461', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4858', '舟曲县', '461', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4859', '迭部县', '461', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4860', '城东区', '462', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4861', '城中区', '462', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4862', '城北区', '462', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4863', '城西区', '462', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4864', '大通回族土族自治县', '462', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4865', '湟中县', '462', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4866', '湟源县', '462', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4867', '乐都县', '463', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4868', '互助土族自治县', '463', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4869', '化隆回族自治县', '463', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4870', '平安县', '463', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4871', '循化撒拉族自治县', '463', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4872', '民和回族土族自治县', '463', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4873', '刚察县', '464', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4874', '海晏县', '464', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4875', '祁连县', '464', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4876', '门源回族自治县', '464', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4877', '同仁县', '465', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4878', '尖扎县', '465', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4879', '河南蒙古族自治县', '465', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4880', '泽库县', '465', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4881', '共和县', '466', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4882', '兴海县', '466', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4883', '同德县', '466', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4884', '贵南县', '466', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4885', '贵德县', '466', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4886', '久治县', '467', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4887', '玛多县', '467', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4888', '玛沁县', '467', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4889', '班玛县', '467', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4890', '甘德县', '467', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4891', '达日县', '467', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4892', '囊谦县', '468', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4893', '曲麻莱县', '468', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4894', '杂多县', '468', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4895', '治多县', '468', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4896', '玉树县', '468', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4897', '称多县', '468', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4898', '乌兰县', '469', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4899', '冷湖行委', '469', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4900', '大柴旦行委', '469', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4901', '天峻县', '469', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4902', '德令哈市', '469', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4903', '格尔木市', '469', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4904', '茫崖行委', '469', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4905', '都兰县', '469', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4906', '兴庆区', '470', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4907', '永宁县', '470', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4908', '灵武市', '470', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4909', '西夏区', '470', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4910', '贺兰县', '470', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4911', '金凤区', '470', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4912', '大武口区', '471', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4913', '平罗县', '471', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4914', '惠农区', '471', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4915', '利通区', '472', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4916', '同心县', '472', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4917', '盐池县', '472', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4918', '青铜峡市', '472', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4919', '原州区', '473', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4920', '彭阳县', '473', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4921', '泾源县', '473', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4922', '西吉县', '473', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4923', '隆德县', '473', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4924', '中宁县', '474', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4925', '沙坡头区', '474', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4926', '海原县', '474', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4927', '东山区', '475', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4928', '乌鲁木齐县', '475', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4929', '天山区', '475', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4930', '头屯河区', '475', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4931', '新市区', '475', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4932', '水磨沟区', '475', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4933', '沙依巴克区', '475', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4934', '达坂城区', '475', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4935', '乌尔禾区', '476', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4936', '克拉玛依区', '476', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4937', '独山子区', '476', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4938', '白碱滩区', '476', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4939', '吐鲁番市', '477', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4940', '托克逊县', '477', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4941', '鄯善县', '477', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4942', '伊吾县', '478', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4943', '哈密市', '478', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4944', '巴里坤哈萨克自治县', '478', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4945', '吉木萨尔县', '479', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4946', '呼图壁县', '479', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4947', '奇台县', '479', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4948', '昌吉市', '479', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4949', '木垒哈萨克自治县', '479', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4950', '玛纳斯县', '479', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4951', '米泉市', '479', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4952', '阜康市', '479', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4953', '博乐市', '480', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4954', '温泉县', '480', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4955', '精河县', '480', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4956', '博湖县', '481', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4957', '和硕县', '481', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4958', '和静县', '481', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4959', '尉犁县', '481', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4960', '库尔勒市', '481', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4961', '焉耆回族自治县', '481', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4962', '若羌县', '481', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4963', '轮台县', '481', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4964', '乌什县', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4965', '库车县', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4966', '拜城县', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4967', '新和县', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4968', '柯坪县', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4969', '沙雅县', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4970', '温宿县', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4971', '阿克苏市', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4972', '阿瓦提县', '482', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4973', '乌恰县', '483', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4974', '阿克陶县', '483', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4975', '阿合奇县', '483', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4976', '阿图什市', '483', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4977', '伽师县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4978', '叶城县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4979', '喀什市', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4980', '塔什库尔干塔吉克自治县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4981', '岳普湖县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4982', '巴楚县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4983', '泽普县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4984', '疏勒县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4985', '疏附县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4986', '英吉沙县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4987', '莎车县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4988', '麦盖提县', '484', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4989', '于田县', '485', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4990', '和田县', '485', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4991', '和田市', '485', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4992', '墨玉县', '485', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4993', '民丰县', '485', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4994', '洛浦县', '485', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4995', '皮山县', '485', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4996', '策勒县', '485', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4997', '伊宁县', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4998', '伊宁市', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('4999', '奎屯市', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5000', '察布查尔锡伯自治县', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5001', '尼勒克县', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5002', '巩留县', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5003', '新源县', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5004', '昭苏县', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5005', '特克斯县', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5006', '霍城县', '486', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5007', '乌苏市', '487', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5008', '和布克赛尔蒙古自治县', '487', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5009', '塔城市', '487', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5010', '托里县', '487', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5011', '沙湾县', '487', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5012', '裕民县', '487', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5013', '额敏县', '487', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5014', '吉木乃县', '488', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5015', '哈巴河县', '488', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5016', '富蕴县', '488', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5017', '布尔津县', '488', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5018', '福海县', '488', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5019', '阿勒泰市', '488', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5020', '青河县', '488', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5021', '石河子市', '489', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5022', '阿拉尔市', '490', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5023', '图木舒克市', '491', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('5024', '五家渠市', '492', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('45055', '海外', '35', '0', '2', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('45056', '香港', '33', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('45057', '澳门', '34', '0', '3', '0', '20150914112523', '20150914112523', null);
INSERT INTO `shop_area` VALUES ('45058', '台湾', '32', '0', '3', '0', '20150914112523', '20150914112523', null);

-- ----------------------------
-- Table structure for shop_cart
-- ----------------------------
DROP TABLE IF EXISTS `shop_cart`;
CREATE TABLE `shop_cart` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '购物车id',
  `member_id` bigint(11) DEFAULT '0' COMMENT '会员id',
  `store_id` bigint(11) DEFAULT '0' COMMENT '店铺id',
  `store_name` varchar(100) DEFAULT '0' COMMENT '店铺名称',
  `goods_id` bigint(11) DEFAULT '0' COMMENT '商品id',
  `goods_name` varchar(100) DEFAULT NULL COMMENT '商品名称',
  `spec_id` bigint(11) DEFAULT '0' COMMENT '规格id',
  `spec_info` text COMMENT '规格内容',
  `goods_store_price` varchar(10) DEFAULT NULL COMMENT '商品价格',
  `goods_num` smallint(5) DEFAULT '1' COMMENT '购买商品数量',
  `goods_images` varchar(100) DEFAULT NULL COMMENT '商品图片',
  `first_gc_id` bigint(10) DEFAULT NULL COMMENT '商品所在一级分类的id',
  PRIMARY KEY (`id`),
  KEY `member_id` (`member_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='购物车数据表';

-- ----------------------------
-- Records of shop_cart
-- ----------------------------

-- ----------------------------
-- Table structure for shop_consult
-- ----------------------------
DROP TABLE IF EXISTS `shop_consult`;
CREATE TABLE `shop_consult` (
  `id` bigint(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '咨询编号',
  `goods_id` bigint(11) unsigned DEFAULT '0' COMMENT '商品编号',
  `cgoods_name` varchar(100) NOT NULL COMMENT '商品名称',
  `member_id` bigint(11) NOT NULL DEFAULT '0' COMMENT '咨询发布者会员编号(0：游客)',
  `cmember_name` varchar(100) DEFAULT NULL COMMENT '会员名称',
  `store_id` bigint(11) unsigned NOT NULL DEFAULT '0' COMMENT '店铺编号',
  `email` varchar(255) DEFAULT NULL COMMENT '咨询发布者邮箱',
  `consult_content` varchar(255) DEFAULT NULL COMMENT '咨询内容',
  `consult_addtime` bigint(13) DEFAULT NULL COMMENT '咨询添加时间',
  `consult_reply` varchar(255) DEFAULT NULL COMMENT '咨询回复内容',
  `consult_reply_time` bigint(13) DEFAULT NULL COMMENT '咨询回复时间',
  `isanonymous` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0表示不匿名 1表示匿名',
  `is_del` tinyint(1) DEFAULT NULL,
  `create_time` bigint(13) DEFAULT NULL COMMENT '创建时间',
  `update_time` bigint(13) DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  KEY `goods_id` (`goods_id`) USING BTREE,
  KEY `seller_id` (`store_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 COMMENT='产品咨询表';

-- ----------------------------
-- Records of shop_consult
-- ----------------------------
INSERT INTO `shop_consult` VALUES ('4', '4', 'æäºå¨åè³æº', '5', 'gyh99', '10', null, 'è¿ä¸ªè³æºå¤å°é±', '20150803102942', '你的麻烦你给return ', null, '0', '0', null, null);
INSERT INTO `shop_consult` VALUES ('5', '30', '可情小美 欧美范春夏款时尚OL职业女超高跟鞋 糖果色漆皮尖头夜店性感', '0', '匿名', '9', null, '1111', '20150822101401', null, null, '1', '0', null, null);
INSERT INTO `shop_consult` VALUES ('6', '30', '可情小美 欧美范春夏款时尚OL职业女超高跟鞋 糖果色漆皮尖头夜店性感', '0', '匿名', '9', null, '你好', '20150822101414', null, null, '1', '0', null, null);
INSERT INTO `shop_consult` VALUES ('7', '36', ' 琪可朵高跟鞋尖头真皮蝴蝶结2015新款婚鞋  01甜美粉色 ', '0', '匿名', '9', null, '[', '20150827205953', null, null, '1', '0', null, null);
INSERT INTO `shop_consult` VALUES ('8', '5', 'iphone6', '28', '吴世勋', '10', null, '是国行吗？', '20150831142848', '是的哦，亲~~', null, '0', '0', null, null);
INSERT INTO `shop_consult` VALUES ('9', '32', '琪可朵高跟鞋尖头真皮细跟蝴蝶结2015新款女鞋 03淡紫色 40', '28', '吴世勋', '9', null, '紫色色差大吗？是什么紫色？', '20150901093741', null, null, '0', '0', null, null);
INSERT INTO `shop_consult` VALUES ('10', '32', '琪可朵高跟鞋尖头真皮细跟蝴蝶结2015新款女鞋 03淡紫色 40', '28', '吴世勋', '9', null, '对方水电费', '20150906165708', null, null, '0', '1', null, null);
INSERT INTO `shop_consult` VALUES ('11', '32', '琪可朵高跟鞋尖头真皮细跟蝴蝶结2015新款女鞋 03淡紫色 40', '28', '吴世勋', '9', null, '双方的所发生的', '20150906165714', null, null, '0', '1', null, null);
INSERT INTO `shop_consult` VALUES ('12', '26', ' 凡牧2015夏装新款棉麻短袖连衣裙女韩版修身', '16', 'zrh', '9', null, '裙子如何', '20150906165850', '保证正品哦，亲', null, '0', '0', null, null);
INSERT INTO `shop_consult` VALUES ('13', '25', '碧月茹香 2015夏新款文艺棉麻宽松大码连衣裙 617绿色 XXL', '0', '匿名', '9', null, 'ddd', '20150924095004', null, null, '1', '0', '20150924095004', null);
INSERT INTO `shop_consult` VALUES ('14', '25', '碧月茹香 2015夏新款文艺棉麻宽松大码连衣裙 617绿色 XXL', '0', '匿名', '9', null, 'sfsf', '20150924095012', null, null, '1', '0', '20150924095012', null);
INSERT INTO `shop_consult` VALUES ('15', '11', 'Apple MacBook Air MJVE2CH/A 13.3英寸宽屏笔记本电脑 128GB 闪存', '14', 'demo', '9', null, '啊实打实', '20151008165249', null, null, '0', '0', '20151008165249', null);
INSERT INTO `shop_consult` VALUES ('16', '11', 'Apple MacBook Air MJVE2CH/A 13.3��?��?��?????��????��?��?????�̨�?? 128GB ��?a?-?', '0', '匿名', '9', null, null, '20151008165249', null, null, '1', '0', '20151008165249', null);
INSERT INTO `shop_consult` VALUES ('17', '72', '111', '0', '匿名', '9', null, 'ni hao', '20151009142454', '2123123', '1444704656508', '1', '0', '20151009142454', '1444704656508');
INSERT INTO `shop_consult` VALUES ('18', '76', 'sony', '14', 'demo', '12', null, '11111', '20151010103337', null, null, '0', '0', '20151010103337', null);
INSERT INTO `shop_consult` VALUES ('19', '35', ' bubufeifei2015夏季新款高跟鞋女 水钻细跟女鞋婚鞋单鞋 珍珠白', '84', 'guan2015', '9', null, 'ghijvbghj空调同 宋瑞', '20151016094325', null, null, '0', '0', '20151016094325', null);
INSERT INTO `shop_consult` VALUES ('20', '35', ' bubufeifei2015夏季新款高跟鞋女 水钻细跟女鞋婚鞋单鞋 珍珠白', '84', 'guan2015', '9', null, '心狠我我你为了她你同同虐酷我同他们拉我', '20151016094359', null, null, '0', '0', '20151016094359', null);

-- ----------------------------
-- Table structure for shop_express
-- ----------------------------
DROP TABLE IF EXISTS `shop_express`;
CREATE TABLE `shop_express` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `e_name` varchar(50) NOT NULL COMMENT '公司名称',
  `e_state` int(4) NOT NULL DEFAULT '0' COMMENT '状态',
  `e_code` varchar(50) NOT NULL COMMENT '编号',
  `e_letter` char(1) NOT NULL COMMENT '首字母',
  `e_order` int(4) NOT NULL DEFAULT '0' COMMENT '1常用0不常用',
  `e_url` varchar(100) NOT NULL COMMENT '公司网址',
  `is_del` int(4) NOT NULL DEFAULT '0' COMMENT '删除标记',
  UNIQUE KEY `id` (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=48 DEFAULT CHARSET=utf8 COMMENT='快递公司';

-- ----------------------------
-- Records of shop_express
-- ----------------------------
INSERT INTO `shop_express` VALUES ('1', '安信达', '0', 'anxindakuaixi', 'A', '0', 'http://www.anxinda.com', '0');
INSERT INTO `shop_express` VALUES ('2', '包裹平邮', '1', 'youzhengguonei', 'B', '0', 'http://yjcx.chinapost.com.cn', '0');
INSERT INTO `shop_express` VALUES ('3', 'CCES', '1', 'cces', 'C', '0', 'http://www.cces.com.cn', '0');
INSERT INTO `shop_express` VALUES ('4', '传喜物流', '1', 'chuanxiwuliu', 'C', '0', 'http://www.cxcod.com', '0');
INSERT INTO `shop_express` VALUES ('5', 'DHL快递', '1', 'dhl', 'D', '1', 'http://www.cn.dhl.com', '0');
INSERT INTO `shop_express` VALUES ('6', '大田物流', '1', 'datianwuliu', 'D', '0', 'http://www.dtw.com.cn', '0');
INSERT INTO `shop_express` VALUES ('7', '德邦物流', '1', 'debangwuliu', 'D', '1', 'http://www.deppon.com', '0');
INSERT INTO `shop_express` VALUES ('8', 'EMS', '1', 'ems', 'E', '0', 'http://www.ems.com.cn', '0');
INSERT INTO `shop_express` VALUES ('9', 'EMS国际', '1', 'emsguoji', 'E', '0', '###', '0');
INSERT INTO `shop_express` VALUES ('10', '飞康达', '1', 'feikangda', 'F', '1', 'http://www.fkd.com.cn', '0');
INSERT INTO `shop_express` VALUES ('11', 'FedEx(国际)', '1', 'fedex', 'F', '0', 'http://fedex.com/cn', '0');
INSERT INTO `shop_express` VALUES ('12', '凡客如风达', '1', 'rufengda', 'F', '0', 'http://www.rufengda.com', '0');
INSERT INTO `shop_express` VALUES ('13', '港中能达', '1', 'ganzhongnengda', 'G', '0', 'http://www.nd56.com', '0');
INSERT INTO `shop_express` VALUES ('14', '挂号信', '1', 'youzhengguonei', 'G', '0', 'http://yjcx.chinapost.com.cn', '0');
INSERT INTO `shop_express` VALUES ('15', '共速达', '1', 'gongsuda', 'G', '0', 'http://www.gongsuda.com/mall/Search.aspx', '0');
INSERT INTO `shop_express` VALUES ('16', '汇通快递', '0', 'huitongkuaidi', 'H', '0', 'http://www.htky365.com', '0');
INSERT INTO `shop_express` VALUES ('17', '华宇物流', '1', 'tiandihuayu', 'H', '0', 'http://www.hoau.net', '0');
INSERT INTO `shop_express` VALUES ('18', '佳吉快运', '1', 'jiajiwuliu', 'J', '0', 'http://www.jiaji.com', '0');
INSERT INTO `shop_express` VALUES ('19', '佳怡物流', '1', 'jiayiwuliu', 'J', '0', 'http://www.jiayi56.com', '0');
INSERT INTO `shop_express` VALUES ('20', '急先达', '1', 'jixianda', 'J', '0', 'http://www.joust.cn', '0');
INSERT INTO `shop_express` VALUES ('21', '快捷速递', '0', 'kuaijiesudi', 'K', '0', 'http://www.fastexpress.com.cn', '0');
INSERT INTO `shop_express` VALUES ('22', '龙邦快递', '1', 'longbanwuliu', 'L', '0', 'http://www.lbex.com.cn', '0');
INSERT INTO `shop_express` VALUES ('23', '联邦快递', '1', 'lianbangkuaidi', 'L', '0', 'http://cndxp.apac.fedex.com/dxp.html', '0');
INSERT INTO `shop_express` VALUES ('24', '联昊通', '1', 'lianhaowuliu', 'L', '0', 'http://www.lhtex.com.cn', '0');
INSERT INTO `shop_express` VALUES ('25', '全一快递', '1', 'quanyikuaidi', 'Q', '0', 'http://www.apex100.com', '0');
INSERT INTO `shop_express` VALUES ('26', '全峰快递', '1', 'quanfengkuaidi', 'Q', '0', 'http://www.qfkd.com.cn', '0');
INSERT INTO `shop_express` VALUES ('27', '全日通', '1', 'quanritongkuaidi', 'Q', '0', 'http://www.at-express.com', '0');
INSERT INTO `shop_express` VALUES ('28', '申通快递', '1', 'shentong', 'S', '1', 'http://www.sto.cn', '0');
INSERT INTO `shop_express` VALUES ('29', '顺丰快递', '1', 'shunfeng', 'S', '0', 'http://www.sf-express.com', '0');
INSERT INTO `shop_express` VALUES ('30', '速尔快递', '1', 'suer', 'S', '1', 'http://www.sure56.com', '0');
INSERT INTO `shop_express` VALUES ('31', 'TNT快递', '1', 'tnt', 'T', '1', 'http://www.tnt.com.cn', '0');
INSERT INTO `shop_express` VALUES ('32', '天天快递', '1', 'tiantian', 'T', '1', 'http://www.ttkdex.com', '0');
INSERT INTO `shop_express` VALUES ('33', '天地华宇', '1', 'tiandihuayu', 'T', '1', 'http://www.hoau.net', '0');
INSERT INTO `shop_express` VALUES ('34', 'UPS快递', '1', 'ups', 'U', '1', 'http://www.ups.com/cn', '0');
INSERT INTO `shop_express` VALUES ('35', 'USPS', '1', 'usps', 'U', '0', 'http://www.kuaidi100.com/all/usps.shtml', '0');
INSERT INTO `shop_express` VALUES ('36', '新邦物流', '1', 'xinbangwuliu', 'X', '0', 'http://www.xbwl.cn', '0');
INSERT INTO `shop_express` VALUES ('37', '信丰物流', '1', 'xinfengwuliu', 'X', '0', 'http://www.xf-express.com.cn', '0');
INSERT INTO `shop_express` VALUES ('38', '希伊艾斯', '1', 'cces', 'X', '0', 'http://www.cces.com.cn', '0');
INSERT INTO `shop_express` VALUES ('39', '新蛋物流', '1', 'neweggozzo', 'X', '0', 'http://www.ozzo.com.cn', '0');
INSERT INTO `shop_express` VALUES ('40', '圆通快递', '1', 'yuantong', 'Y', '0', 'http://www.yto.net.cn', '0');
INSERT INTO `shop_express` VALUES ('41', '韵达快递', '1', 'yunda', 'Y', '1', 'http://www.yundaex.com', '0');
INSERT INTO `shop_express` VALUES ('42', '邮政包裹', '1', 'youzhengguonei', 'Y', '1', 'http://yjcx.chinapost.com.cn', '0');
INSERT INTO `shop_express` VALUES ('43', '优速快递', '1', 'youshuwuliu', 'Y', '1', 'http://www.uc56.com', '0');
INSERT INTO `shop_express` VALUES ('44', '中通快递', '1', 'zhongtong', 'Z', '0', 'http://www.zto.cn', '0');
INSERT INTO `shop_express` VALUES ('45', '中铁快运', '1', 'zhongtiewuliu', 'Z', '0', 'http://www.cre.cn', '0');
INSERT INTO `shop_express` VALUES ('46', '宅急送', '1', 'zhaijisong', 'Z', '0', 'http://www.zjs.com.cn', '0');
INSERT INTO `shop_express` VALUES ('47', '中邮物流', '1', 'zhongyouwuliu', 'Z', '1', 'http://www.cnpl.com.cn', '0');

-- ----------------------------
-- Table structure for shop_favorites
-- ----------------------------
DROP TABLE IF EXISTS `shop_favorites`;
CREATE TABLE `shop_favorites` (
  `id` bigint(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '会员ID',
  `fav_id` bigint(10) unsigned NOT NULL COMMENT '收藏ID',
  `fav_type` varchar(20) DEFAULT NULL COMMENT '收藏类型',
  `fav_time` bigint(13) DEFAULT NULL COMMENT '收藏时间',
  `member_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='买家收藏表';

-- ----------------------------
-- Records of shop_favorites
-- ----------------------------
INSERT INTO `shop_favorites` VALUES ('1', '5', null, null, '105');
INSERT INTO `shop_favorites` VALUES ('2', '6', null, null, '105');

-- ----------------------------
-- Table structure for shop_navigation
-- ----------------------------
DROP TABLE IF EXISTS `shop_navigation`;
CREATE TABLE `shop_navigation` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `nav_type` tinyint(1) NOT NULL DEFAULT '0' COMMENT '类别，0自定义导航，1商品分类，2文章导航，3活动导航，默认为0',
  `nav_title` varchar(100) DEFAULT NULL COMMENT '导航标题',
  `nav_url` varchar(255) DEFAULT NULL COMMENT '导航链接',
  `nav_location` tinyint(1) NOT NULL DEFAULT '0' COMMENT '导航位置，0头部，1中部，2底部，默认为0',
  `nav_new_open` tinyint(1) unsigned zerofill NOT NULL DEFAULT '0' COMMENT '是否以新窗口打开，0为否，1为是，默认为0',
  `nav_sort` tinyint(3) unsigned NOT NULL DEFAULT '255' COMMENT '排序',
  `item_id` bigint(10) unsigned NOT NULL DEFAULT '0' COMMENT '类别ID，对应着nav_type中的内容，默认为0',
  `is_del` tinyint(1) DEFAULT NULL,
  `create_time` bigint(13) DEFAULT NULL COMMENT '创建时间',
  `update_time` bigint(13) DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8 COMMENT='页面导航表';

-- ----------------------------
-- Records of shop_navigation
-- ----------------------------
INSERT INTO `shop_navigation` VALUES ('1', '2', 'test', '', '1', '0', '3', '1', '1', '20150914112515', '20150914112516');
INSERT INTO `shop_navigation` VALUES ('2', '2', 'test1', null, '1', '0', '20', '21', '1', '20150914112515', '20150914112516');
INSERT INTO `shop_navigation` VALUES ('3', '0', '首页', 'http://b2b2c.leimingtech.com/leimingtech-front/', '2', '1', '255', '0', '1', '20150914112515', '20150914112516');
INSERT INTO `shop_navigation` VALUES ('4', '0', '招聘英才', 'http://rhxtune.cn/#/join', '2', '1', '1', '0', '0', '20150914112515', '1473663848300');
INSERT INTO `shop_navigation` VALUES ('5', '0', '广告合作', 'http://rhxtune.cn/#/contact', '2', '1', '0', '0', '0', '20150914112515', '1473663869438');
INSERT INTO `shop_navigation` VALUES ('6', '0', '联系我们', 'http://b2b2c.leimingtech.com/leimingtech-front/help/content?acId=7&articleId=38', '2', '1', '255', '0', '1', '20150914112515', '20150914112516');
INSERT INTO `shop_navigation` VALUES ('7', '0', '关于我们', 'http://b2b2c.leimingtech.com/leimingtech-front/help/content?acId=7&articleId=33', '2', '1', '255', '0', '1', '20150914112515', '20151007110251');
INSERT INTO `shop_navigation` VALUES ('8', '0', 'test', 'http://www.baidu.com', '1', '1', '255', '0', '1', '20150914112515', '20150914112516');
INSERT INTO `shop_navigation` VALUES ('9', '0', '222', 'http://222', '1', '1', '255', '0', '1', '20150914112515', '20150914112516');
INSERT INTO `shop_navigation` VALUES ('10', '0', '测试链接地址', 'http://www.baidu.com', '1', '1', '255', '0', '1', '20151010111658', '20151010111658');
INSERT INTO `shop_navigation` VALUES ('11', '0', '邮票品牌', '/all/brand', '0', '1', '11', '0', '0', '1449903649670', '1477373652322');
INSERT INTO `shop_navigation` VALUES ('12', '0', '优惠券', '/all/coupon', '0', '1', '10', '0', '1', '1449903649670', '1477365817033');
INSERT INTO `shop_navigation` VALUES ('13', '0', '积分中心', '/shop-front/points/index', '0', '1', '4', '0', '1', '1449903649670', '1473663636638');
INSERT INTO `shop_navigation` VALUES ('14', '0', '首页', 'http://post.rhxtune.com/', '0', '1', '255', '0', '0', '1477384097929', null);
INSERT INTO `shop_navigation` VALUES ('15', '0', '邮票竞价', '/all/coupon', '0', '1', '10', '0', '0', '1477481774861', '1477481944819');
INSERT INTO `shop_navigation` VALUES ('16', '0', '邮票置换', '/points/index', '0', '1', '9', '0', '1', '1477482025331', '1477482202272');
INSERT INTO `shop_navigation` VALUES ('17', '0', '微商城', '/m/index/index', '0', '1', '9', '0', '0', '1477543039591', '1477543054830');
INSERT INTO `shop_navigation` VALUES ('18', '0', '邮票置换', '/points/index', '0', '1', '10', '0', '0', '1477561469349', '1477561486914');

-- ----------------------------
-- Table structure for shop_order
-- ----------------------------
DROP TABLE IF EXISTS `shop_order`;
CREATE TABLE `shop_order` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '订单索引id',
  `order_sn` varchar(50) DEFAULT NULL COMMENT '订单编号',
  `store_id` bigint(11) DEFAULT NULL COMMENT '卖家店铺id',
  `store_name` varchar(50) DEFAULT NULL COMMENT '卖家店铺名称',
  `buyer_id` bigint(11) DEFAULT NULL COMMENT '买家id',
  `buyer_name` varchar(50) DEFAULT NULL COMMENT '买家姓名',
  `buyer_email` varchar(100) DEFAULT NULL COMMENT '买家电子邮箱',
  `create_time` bigint(13) DEFAULT NULL COMMENT '订单生成时间',
  `order_type` tinyint(1) DEFAULT '0' COMMENT '订单类型 0.普通 1.团购',
  `payment_id` bigint(11) DEFAULT NULL COMMENT '支付方式id',
  `payment_name` varchar(50) DEFAULT NULL COMMENT '支付方式名称',
  `payment_code` varchar(50) DEFAULT NULL COMMENT '支付方式名称代码',
  `payment_branch` varchar(20) DEFAULT NULL COMMENT '支付分支',
  `payment_direct` char(1) DEFAULT '1' COMMENT '支付类型:1是即时到帐,2是担保交易',
  `payment_state` tinyint(1) DEFAULT '0' COMMENT '付款状态:0:未付款;1:已付款',
  `out_sn` varchar(100) DEFAULT NULL COMMENT '订单编号，外部支付时使用，有些外部支付系统要求特定的订单编号',
  `trade_sn` varchar(50) DEFAULT NULL COMMENT '交易流水号',
  `payment_time` bigint(13) DEFAULT NULL COMMENT '支付(付款)时间',
  `pay_message` text COMMENT '支付留言',
  `shipping_time` bigint(13) DEFAULT NULL COMMENT '配送时间',
  `shipping_express_id` tinyint(1) DEFAULT '0' COMMENT '配送公司ID',
  `shipping_code` varchar(50) DEFAULT '' COMMENT '物流单号',
  `out_payment_code` varchar(255) DEFAULT NULL COMMENT '外部交易平台单独使用的标识字符串',
  `finnshed_time` bigint(13) DEFAULT NULL COMMENT '订单完成时间',
  `invoice` varchar(100) DEFAULT NULL COMMENT '发票信息',
  `goods_amount` decimal(10,2) DEFAULT NULL COMMENT '商品总价格',
  `discount` decimal(10,2) DEFAULT NULL COMMENT '优惠总金额',
  `order_amount` decimal(10,2) DEFAULT NULL COMMENT '订单应付金额',
  `order_total_price` varchar(10) DEFAULT NULL COMMENT '订单总价格',
  `shipping_fee` decimal(10,2) DEFAULT NULL COMMENT '运费价格',
  `shipping_name` varchar(10) DEFAULT '' COMMENT '配送方式',
  `evaluation_status` tinyint(1) DEFAULT '0' COMMENT '评价状态 0为评价，1已评价',
  `evaluation_time` bigint(13) DEFAULT NULL COMMENT '评价时间',
  `evalseller_status` tinyint(1) DEFAULT '0' COMMENT '卖家是否已评价买家',
  `evalseller_time` bigint(13) DEFAULT NULL COMMENT '卖家评价买家的时间',
  `order_message` varchar(300) DEFAULT NULL COMMENT '订单留言',
  `order_state` int(11) DEFAULT '10' COMMENT '订单状态：0:已取消;10:待付款;20:待发货;30:待收货;40:交易完成;50:已提交;60:已确认;',
  `order_pointscount` int(11) DEFAULT '0' COMMENT '订单赠送积分',
  `voucher_id` int(11) DEFAULT NULL COMMENT '代金券id',
  `voucher_price` decimal(11,2) DEFAULT NULL COMMENT '代金券面额',
  `voucher_code` varchar(32) DEFAULT NULL COMMENT '代金券编码',
  `refund_state` tinyint(1) unsigned DEFAULT '0' COMMENT '退款状态:0是无退款,1是部分退款,2是全部退款',
  `return_state` tinyint(1) unsigned DEFAULT '0' COMMENT '退货状态:0是无退货,1是部分退货,2是全部退货',
  `refund_amount` decimal(10,2) DEFAULT '0.00' COMMENT '退款金额',
  `return_num` int(10) unsigned DEFAULT '0' COMMENT '退货数量',
  `group_id` bigint(10) unsigned DEFAULT '0' COMMENT '团购编号(非团购订单为0)',
  `group_count` int(10) unsigned DEFAULT '0' COMMENT '团购数量',
  `xianshi_id` bigint(10) unsigned DEFAULT '0' COMMENT ' 限时折扣编号',
  `xianshi_explain` varchar(100) DEFAULT '' COMMENT '限时折扣说明',
  `mansong_id` bigint(10) unsigned DEFAULT '0' COMMENT '满就送编号',
  `mansong_explain` varchar(200) DEFAULT '' COMMENT '满就送说明',
  `bundling_id` int(10) DEFAULT NULL COMMENT '搭配套餐id',
  `bundling_explain` varchar(100) DEFAULT NULL COMMENT '搭配套餐说明',
  `order_from` enum('1','2') DEFAULT '1' COMMENT '1PC2手机端',
  `deliver_explain` text COMMENT '发货备注',
  `daddress_id` mediumint(9) DEFAULT NULL COMMENT '发货地址ID',
  `address_id` bigint(11) DEFAULT NULL COMMENT '收货地址id',
  `pay_id` bigint(11) DEFAULT NULL COMMENT '订单支付表id',
  `pay_sn` varchar(50) DEFAULT NULL COMMENT '订单支付表编号',
  `balance_state` tinyint(1) DEFAULT '0' COMMENT '结算状态:0,未结算,1已结算',
  `balance_time` bigint(13) DEFAULT NULL COMMENT '结算时间',
  `shipping_express_code` varchar(50) DEFAULT '' COMMENT '配送公司编号',
  `predeposit_amount` decimal(10,2) DEFAULT NULL COMMENT '余额支付金额',
  `cancel_cause` varchar(50) DEFAULT NULL COMMENT '订单取消原因',
  `coupon_id` bigint(11) DEFAULT NULL COMMENT '优惠券id',
  `coupon_price` decimal(10,2) DEFAULT NULL COMMENT '优惠券金额',
  `promo_price` decimal(10,2) DEFAULT NULL COMMENT '促销金额',
  `lock_state` tinyint(1) DEFAULT '0' COMMENT '锁定状态:0是正常,大于0是锁定,默认是0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='订单表';

-- ----------------------------
-- Records of shop_order
-- ----------------------------

-- ----------------------------
-- Table structure for shop_payment
-- ----------------------------
DROP TABLE IF EXISTS `shop_payment`;
CREATE TABLE `shop_payment` (
  `id` bigint(1) unsigned NOT NULL AUTO_INCREMENT COMMENT '支付索引id',
  `payment_code` char(10) NOT NULL COMMENT '支付代码名称',
  `payment_name` char(10) NOT NULL COMMENT '支付名称',
  `payment_config` text COMMENT '支付接口配置信息',
  `payment_state` enum('0','1') DEFAULT NULL COMMENT '接口状态0禁用1启用',
  `is_del` tinyint(4) DEFAULT '0' COMMENT '是否删除0:未删除;1:已删除',
  `create_time` bigint(13) DEFAULT NULL COMMENT '创建时间',
  `update_time` bigint(13) DEFAULT NULL COMMENT '修改时间',
  `payment_logo` varchar(55) DEFAULT NULL COMMENT '支付方式logo',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 COMMENT='支付方式表';

-- ----------------------------
-- Records of shop_payment
-- ----------------------------
INSERT INTO `shop_payment` VALUES ('4', 'HDFK', '货到付款', null, '0', '0', null, '1477439942147', '/upload/img/paymentlogo/1472811585098.jpg');
INSERT INTO `shop_payment` VALUES ('5', 'ZFB', '支付宝', null, '1', '1', null, '1471342291209', '/upload/img/paymentlogo/1444315841296png');
INSERT INTO `shop_payment` VALUES ('6', 'CFT', '财付通', null, '0', '1', null, '1472811599287', '/upload/img/paymentlogo/1472811598068.jpg');
INSERT INTO `shop_payment` VALUES ('7', 'YL', '银联', null, '0', '1', null, '1477560997884', '/upload/img/paymentlogo/1438941545519.jpg');
INSERT INTO `shop_payment` VALUES ('8', 'YCK', '预存款', null, '0', '0', null, '1477560976598', '/upload/img/paymentlogo/1472811617333.jpg');
INSERT INTO `shop_payment` VALUES ('9', 'wx', '微信支付', null, '0', '1', '1472810647292', '1477439911735', '/upload/img/paymentlogo/1477439826026.png');
INSERT INTO `shop_payment` VALUES ('10', 'weiscan', '微信支付', null, '1', '0', '1477439891594', null, '/upload/img/paymentlogo/1477439889314.png');
INSERT INTO `shop_payment` VALUES ('11', 'YL', '银联', null, '1', '0', '1477561111787', '1477561183135', '/upload/img/paymentlogo/1477561141382.jpg');

-- ----------------------------
-- Table structure for sys_area
-- ----------------------------
DROP TABLE IF EXISTS `sys_area`;
CREATE TABLE `sys_area` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `parent_id` bigint(20) NOT NULL COMMENT '父级编号',
  `parent_ids` varchar(2000) DEFAULT NULL COMMENT '所有父级编号',
  `code` varchar(100) DEFAULT NULL COMMENT '区域编码',
  `name` varchar(100) NOT NULL COMMENT '区域名称',
  `type` char(1) DEFAULT NULL COMMENT '区域类型',
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记(0活null 正常 1,删除)',
  `icon` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `sys_area_parent_id` (`parent_id`),
  KEY `sys_area_parent_ids` (`parent_ids`(255)),
  KEY `sys_area_del_flag` (`del_flag`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='区域表';

-- ----------------------------
-- Records of sys_area
-- ----------------------------
INSERT INTO `sys_area` VALUES ('1', '2', '0,0,2,', 'bj', '北京', '1', '2', '2016-12-22 20:11:20', null, null, '', '0', 'fa fa-calculator');
INSERT INTO `sys_area` VALUES ('2', '0', '0,0,', 'china', '中国', '1', '2', '2016-12-22 20:12:37', null, null, '', '0', 'fa fa-meanpath');

-- ----------------------------
-- Table structure for sys_dict
-- ----------------------------
DROP TABLE IF EXISTS `sys_dict`;
CREATE TABLE `sys_dict` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `label` varchar(100) NOT NULL COMMENT '标签名',
  `value` varchar(100) NOT NULL COMMENT '数据值',
  `type` varchar(100) NOT NULL COMMENT '类型',
  `description` varchar(100) NOT NULL COMMENT '描述',
  `sort` int(11) NOT NULL DEFAULT '1' COMMENT '排序（升序）',
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) NOT NULL DEFAULT '0' COMMENT '删除标记',
  PRIMARY KEY (`id`),
  KEY `sys_dict_value` (`value`),
  KEY `sys_dict_label` (`label`),
  KEY `sys_dict_del_flag` (`del_flag`)
) ENGINE=InnoDB AUTO_INCREMENT=67 DEFAULT CHARSET=utf8 COMMENT='字典表';

-- ----------------------------
-- Records of sys_dict
-- ----------------------------
INSERT INTO `sys_dict` VALUES ('1', '正常', '0', 'del_flag', '删除标记', '10', '1', '2013-05-27 08:00:00', '2,超级管理员', '2015-02-28 23:07:13', null, '0');
INSERT INTO `sys_dict` VALUES ('2', '删除', '1', 'del_flag', '删除标记', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('3', '显示', '1', 'show_hide', '显示/隐藏', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('4', '隐藏', '0', 'show_hide', '显示/隐藏', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('5', '是', '1', 'yes_no', '是/否', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('6', '否', '0', 'yes_no', '是/否', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('17', '国家', '1', 'sys_area_type', '区域类型', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('18', '省份、直辖市', '2', 'sys_area_type', '区域类型', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('19', '地市', '3', 'sys_area_type', '区域类型', '30', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('20', '区县', '4', 'sys_area_type', '区域类型', '40', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('22', '部门', '2', 'sys_office_type', '机构类型', '70', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('23', '一级', '1', 'sys_office_grade', '机构等级', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('24', '二级', '2', 'sys_office_grade', '机构等级', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('25', '三级', '3', 'sys_office_grade', '机构等级', '30', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('26', '四级', '4', 'sys_office_grade', '机构等级', '40', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('27', '所有数据', '1', 'sys_data_scope', '数据范围', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('28', '所在公司及以下数据', '2', 'sys_data_scope', '数据范围', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('29', '所在公司数据', '3', 'sys_data_scope', '数据范围', '30', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('30', '所在部门及以下数据', '4', 'sys_data_scope', '数据范围', '40', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('31', '所在部门数据', '5', 'sys_data_scope', '数据范围', '50', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('32', '仅本人数据', '8', 'sys_data_scope', '数据范围', '90', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('33', '按明细设置', '9', 'sys_data_scope', '数据范围', '100', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('34', '系统管理', '1', 'sys_user_type', '用户类型', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('35', '部门经理', '2', 'sys_user_type', '用户类型', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('36', '普通用户', '3', 'sys_user_type', '用户类型', '30', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('62', '操作日志', '1', 'sys_log_type', '日志类型', '30', '1', '2013-06-03 08:00:00', '1', '2013-06-03 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('63', '异常日志', '2', 'sys_log_type', '日志类型', '40', '1', '2013-06-03 08:00:00', '1', '2013-06-03 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('64', '单表增删改查', 'single', 'prj_template_type', '代码模板', '10', '1', '2013-06-03 08:00:00', '1', '2013-06-03 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('65', '所有entity和dao', 'entityAndDao', 'prj_template_type', '代码模板', '20', '1', '2013-06-03 08:00:00', '1', '2013-06-03 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('66', '公司', '1', 'sys_office_type', '', '1', null, '2015-01-10 22:15:43', null, '2015-01-10 22:15:43', null, '0');

-- ----------------------------
-- Table structure for sys_log
-- ----------------------------
DROP TABLE IF EXISTS `sys_log`;
CREATE TABLE `sys_log` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `type` char(1) DEFAULT '1' COMMENT '日志类型',
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `remote_addr` varchar(255) DEFAULT NULL COMMENT '操作IP地址',
  `user_agent` varchar(255) DEFAULT NULL COMMENT '用户代理',
  `request_uri` varchar(255) DEFAULT NULL COMMENT '请求URI',
  `method` varchar(5) DEFAULT NULL COMMENT '操作方式',
  `params` text COMMENT '操作提交的数据',
  `exception` text COMMENT '异常信息',
  `description` text COMMENT '描述',
  PRIMARY KEY (`id`),
  KEY `sys_log_create_by` (`create_by`),
  KEY `sys_log_request_uri` (`request_uri`),
  KEY `sys_log_type` (`type`),
  KEY `sys_log_create_date` (`create_date`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 COMMENT='日志表';

-- ----------------------------
-- Records of sys_log
-- ----------------------------
INSERT INTO `sys_log` VALUES ('20', '2', '2,超级管理员', '2015-03-01 14:23:57', '0:0:0:0:0:0:0:1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36', '/mytemplate/test/area/save', 'POST', '[参数1，类型:SysArea，值:{\"updateBy\":\"2,超级管理员\",\"id\":1,\"parentId\":0,\"icon\":\"fa fa-institution\",\"parentIds\":\"0,\",\"oldParentIds\":\"0,\",\"name\":\"中国\",\"remarks\":\"\",\"code\":\"100000\",\"type\":\"1\",\"updateDate\":1425191037467}]', 'java.lang.ArithmeticException: / by zero', null);
INSERT INTO `sys_log` VALUES ('21', '2', '2,超级管理员', '2015-03-01 14:24:42', '0:0:0:0:0:0:0:1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36', '/mytemplate/test/area/save', 'POST', '[参数1，类型:SysArea，值:{\"updateBy\":\"2,超级管理员\",\"id\":1,\"parentId\":0,\"icon\":\"fa fa-institution\",\"parentIds\":\"0,\",\"oldParentIds\":\"0,\",\"name\":\"中国\",\"remarks\":\"\",\"code\":\"100000\",\"type\":\"1\",\"updateDate\":1425191082730}]', 'java.lang.ArithmeticException: / by zero', null);
INSERT INTO `sys_log` VALUES ('22', '2', '2,超级管理员', '2015-03-01 14:25:53', '0:0:0:0:0:0:0:1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36', '/mytemplate/test/area/save', 'POST', '[参数1，类型:SysArea，值:{\"updateBy\":\"2,超级管理员\",\"id\":1,\"parentId\":0,\"icon\":\"fa fa-institution\",\"parentIds\":\"0,\",\"oldParentIds\":\"0,\",\"name\":\"中国\",\"remarks\":\"\",\"code\":\"100000\",\"type\":\"1\",\"updateDate\":1425191153080}]', 'java.lang.ArithmeticException: / by zero', null);
INSERT INTO `sys_log` VALUES ('23', '2', '2,超级管理员', '2015-03-01 14:30:23', '0:0:0:0:0:0:0:1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36', '/mytemplate/test/area/save', 'POST', '[参数1，类型:SysArea，值:{\"updateBy\":\"2,超级管理员\",\"id\":1,\"parentId\":0,\"icon\":\"fa fa-institution\",\"parentIds\":\"0,\",\"oldParentIds\":\"0,\",\"name\":\"中国\",\"remarks\":\"\",\"code\":\"100000\",\"type\":\"1\",\"updateDate\":1425191423732}]', 'java.lang.ArithmeticException: / by zero', null);
INSERT INTO `sys_log` VALUES ('24', '2', '2,超级管理员', '2015-03-01 14:39:04', '0:0:0:0:0:0:0:1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36', '/mytemplate/test/area/save', 'POST', '[参数1，类型:SysArea，值:{\"updateBy\":\"2,超级管理员\",\"id\":1,\"parentId\":0,\"icon\":\"fa fa-institution\",\"parentIds\":\"0,\",\"oldParentIds\":\"0,\",\"name\":\"中国\",\"remarks\":\"\",\"code\":\"100000\",\"type\":\"1\",\"updateDate\":1425191923185}]', 'java.lang.ArithmeticException: / by zero', null);
INSERT INTO `sys_log` VALUES ('25', '2', '2,超级管理员', '2015-03-29 17:18:50', '0:0:0:0:0:0:0:1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36', '/mytemplate/menu/list', 'POST', '[参数1，类型:LinkedHashMap，值:{name=, id=, pageNum=1, pageSize=10, _ORIGINAL_PARAMETER_OBJECT=(this Map), First_PageHelper=0, Second_PageHelper=10}]', 'org.springframework.jdbc.BadSqlGrammarException: \r\n### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column \'sr.code\' in \'field list\'\r\n### The error may exist in file [E:\\develop_software\\Tomcat\\apache-tomcat-8.0.20\\webapps\\mytemplate\\WEB-INF\\classes\\com\\template\\web\\sys\\mapper\\SysResourceMapper.xml]\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: select sr.id,sr.code,sr.description,sr.icon,sr.name,sr.sort,sr.common,sr.pos,   sr.status,sr.type,sr.url,srp.name pname,srp.id pid   from sys_resource sr   left join sys_resource srp   ON sr.parent_id=srp.id        ORDER BY sr.update_date desc limit ?,?\r\n### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column \'sr.code\' in \'field list\'\n; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column \'sr.code\' in \'field list\'', null);
INSERT INTO `sys_log` VALUES ('26', '2', '2,超级管理员', '2016-12-01 16:33:31', '0:0:0:0:0:0:0:1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36', '/licese/buyLicense/audit', 'POST', '[参数1，类型:BuyLicense，值:{\"id\":1,\"auditcontent\":\"已经付完钱了\",\"status\":1}]', 'java.lang.NullPointerException', null);

-- ----------------------------
-- Table structure for sys_office
-- ----------------------------
DROP TABLE IF EXISTS `sys_office`;
CREATE TABLE `sys_office` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `parent_id` bigint(20) NOT NULL COMMENT '父级编号',
  `parent_ids` varchar(2000) NOT NULL COMMENT '所有父级编号',
  `area_id` bigint(20) NOT NULL COMMENT '归属区域',
  `code` varchar(100) DEFAULT NULL COMMENT '区域编码',
  `name` varchar(100) NOT NULL COMMENT '机构名称',
  `type` char(1) DEFAULT NULL COMMENT '机构类型',
  `grade` char(1) DEFAULT NULL COMMENT '机构等级',
  `address` varchar(255) DEFAULT NULL COMMENT '联系地址',
  `zip_code` varchar(100) DEFAULT NULL COMMENT '邮政编码',
  `master` varchar(100) DEFAULT NULL COMMENT '负责人',
  `phone` varchar(200) DEFAULT NULL COMMENT '电话',
  `fax` varchar(200) DEFAULT NULL COMMENT '传真',
  `email` varchar(200) DEFAULT NULL COMMENT '邮箱',
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) NOT NULL DEFAULT '0' COMMENT '删除标记',
  `icon` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `sys_office_parent_id` (`parent_id`),
  KEY `sys_office_parent_ids` (`parent_ids`(255)),
  KEY `sys_office_del_flag` (`del_flag`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8 COMMENT='机构表';

-- ----------------------------
-- Records of sys_office
-- ----------------------------
INSERT INTO `sys_office` VALUES ('50', '0', '0,', '1', null, '北京zscat科技有限公司', '1', '1', '', null, 'zscat', '', '', '', '2', '2016-12-22 20:14:09', null, null, '', '0', 'fa fa-cc-mastercard');

-- ----------------------------
-- Table structure for sys_resource
-- ----------------------------
DROP TABLE IF EXISTS `sys_resource`;
CREATE TABLE `sys_resource` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(64) DEFAULT NULL COMMENT '资源名称',
  `common` char(1) DEFAULT '0' COMMENT '是否是公共资源(0.不是 1.是)',
  `icon` varchar(64) DEFAULT NULL COMMENT '图标',
  `sort` int(11) DEFAULT '1' COMMENT '排序号',
  `parent_id` bigint(20) DEFAULT NULL COMMENT '父级id',
  `type` char(1) DEFAULT '0' COMMENT '类型(0.菜单 1.按钮)',
  `url` varchar(255) DEFAULT NULL COMMENT '链接',
  `description` varchar(255) DEFAULT NULL COMMENT '描述',
  `status` char(1) DEFAULT '0' COMMENT '状态(0.正常 1.禁用)',
  `parent_ids` varchar(2000) DEFAULT NULL COMMENT '父级集合',
  `create_date` datetime DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `create_by` varchar(64) DEFAULT NULL,
  `update_by` varchar(64) DEFAULT NULL,
  `del_flag` char(1) DEFAULT '0',
  `permission_str` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=250 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_resource
-- ----------------------------
INSERT INTO `sys_resource` VALUES ('1', '菜单配置', '0', 'fa fa-list', '1', '188', '0', 'menu', '', '0', '0,188,', null, '2015-03-11 23:12:27', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('181', '区域管理', '0', 'fa fa-globe', '9', '188', '0', 'sysarea', '', '0', '0,188,', null, '2016-12-01 14:45:27', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('188', '系统管理', '0', 'fa fa-cogs', '1', '0', '0', '', '', '0', '0,', null, '2015-03-12 23:57:18', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('190', '字典管理', '0', 'fa fa-calculator', '1', '188', '0', 'dict', '', '0', '0,188,', null, '2015-03-11 23:12:41', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('192', '机构管理', '0', 'fa fa-sitemap', '1', '188', '0', 'office', '', '0', '0,188,', null, '2016-12-01 14:44:54', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('193', '用户管理', '0', 'fa fa-user', '1', '188', '0', 'sysuser', '', '0', '0,188,', null, '2016-12-01 14:45:06', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('194', '角色管理', '0', 'fa fa-graduation-cap', '2', '188', '0', 'role', '', '0', '0,188,', null, '2016-12-01 14:45:15', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('195', '日志查询', '0', 'fa fa-copy', '1', '188', '0', 'syslog', '', '0', '0,188,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('203', '搜索按钮', '0', 'fa fa-angellist', '1', '181', '1', 'sys:area:find', '这是一个按钮级别的示例，页面为添加，请添加@if(auth.hasPermission(\"sys:area:find\")){}测试', '0', '0,188,181,', '2015-01-20 20:50:16', '2015-01-20 20:57:38', '22', '22', '0', null);
INSERT INTO `sys_resource` VALUES ('204', '系统监控', '0', 'fa fa-binoculars', '6', '0', '0', '', '', '0', '0,', '2015-03-03 20:11:10', '2015-03-11 23:12:56', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('205', 'Ehcache监控', '0', 'fa fa-crosshairs', '1', '204', '0', 'monitor/ehcache', '', '0', '0,204,', '2015-03-03 20:11:19', '2015-03-11 23:15:52', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('206', 'jvm监控', '0', 'fa fa-flash', '1', '204', '0', 'monitor/jvm', '', '0', '0,204,', '2015-03-08 11:17:00', '2015-03-11 23:20:19', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('207', '执行sql', '0', 'fa fa-ge', '1', '204', '0', 'monitor/db/sql', '', '0', '0,204,', '2015-03-09 21:07:49', '2015-03-11 23:18:39', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('208', '数据库监控', '0', 'fa fa-github-alt', '1', '204', '0', 'monitor/db/druid', '', '0', '0,204,', '2015-03-10 21:11:20', '2015-03-11 23:19:56', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('219', 'database', '0', '', '1', '204', '0', 'database', '', '0', '0,204,', '2016-12-02 11:55:58', '2016-12-02 11:55:58', null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('226', '项目管理', '0', 'fa fa-cc-mastercard', '1', '0', '0', '', '', '0', '0,', '2016-12-22 09:51:14', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('227', '项目列表', '0', '', '1', '226', '0', 'product', '', '0', '0,226,', '2016-12-22 09:51:33', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('228', '项目类型', '0', '', '2', '226', '0', 'productType', '', '0', '0,226,', '2016-12-22 09:51:54', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('229', '产品类别', '0', '', '1', '226', '0', 'productClass', '', '0', '0,226,', '2016-12-22 14:16:27', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('230', '楼层管理', '0', '', '4', '226', '0', 'floor', '', '0', '0,226,', '2016-12-22 14:16:52', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('231', '博客管理', '0', 'fa fa-meanpath', '1', '0', '0', '', '', '0', '0,', '2016-12-22 18:12:52', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('232', '博客类型', '0', '', '2', '231', '0', 'blogType', '', '0', '0,231,', '2016-12-22 18:13:17', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('233', '文章管理', '0', '', '1', '231', '0', 'blog', '', '0', '0,231,', '2016-12-22 18:13:32', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('234', '模板管理', '0', '', '4', '231', '0', 'blogTemplate', '', '0', '0,231,', '2016-12-22 18:13:46', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('235', '留言管理', '0', '', '5', '231', '0', 'comment', '', '0', '0,231,', '2016-12-22 18:13:58', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('236', '友好链接', '0', '', '1', '231', '0', 'link', '', '0', '0,231,', '2016-12-22 18:14:09', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('237', '图表展示', '0', '', '7', '188', '0', 'chart', '', '0', '0,188,', '2016-12-22 18:14:24', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('238', '商城公告', '0', '', '1', '231', '0', 'article', '', '0', '0,231,', '2016-12-23 09:58:07', null, '28', null, '0', null);
INSERT INTO `sys_resource` VALUES ('239', '增加', '0', '', '1', '233', '1', 'blog:blog:add', '', '0', '0,231,233,', '2016-12-23 11:11:57', null, '28', null, '0', null);
INSERT INTO `sys_resource` VALUES ('240', '修改', '0', '', '1', '233', '1', 'blog:blog:edit', '', '0', '0,231,233,', '2016-12-23 11:12:12', null, '28', null, '0', null);
INSERT INTO `sys_resource` VALUES ('241', '删除', '0', '', '1', '233', '1', 'blog:blog:delete', '', '0', '0,231,233,', '2016-12-23 11:12:24', null, '28', null, '0', null);
INSERT INTO `sys_resource` VALUES ('242', '订单管理', '0', 'fa fa-calculator', '13', '0', '0', '', '', '0', '0,', '2016-12-23 13:34:21', null, '28', null, '0', null);
INSERT INTO `sys_resource` VALUES ('243', '订单列表', '0', '', '1', '242', '0', 'order', '', '0', '0,242,', '2016-12-23 13:34:45', null, '28', null, '0', null);
INSERT INTO `sys_resource` VALUES ('244', '村通管理', '0', 'fa fa-calculator', '1', '0', '0', '', '', '0', '0,', '2017-01-19 10:22:23', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('245', '村庄管理', '0', '', '1', '244', '0', 'dvillage', '', '0', '0,244,', '2017-01-19 10:22:42', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('246', '成员管理', '0', '', '2', '244', '0', 'dviname', '', '0', '0,244,', '2017-01-19 10:23:27', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('247', '动态管理', '0', '', '9', '244', '0', 'darticle', '', '0', '0,244,', '2017-01-19 10:23:50', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('248', '类别管理', '0', '', '3', '244', '0', 'dproducttype', '', '0', '0,244,', '2017-01-19 11:56:12', null, '2', null, '0', null);
INSERT INTO `sys_resource` VALUES ('249', '商品管理', '0', '', '1', '244', '0', 'dproduct', '', '0', '0,244,', '2017-01-19 11:56:38', null, '2', null, '0', null);

-- ----------------------------
-- Table structure for sys_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_role`;
CREATE TABLE `sys_role` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `office_id` bigint(20) DEFAULT NULL COMMENT '归属机构',
  `name` varchar(100) NOT NULL COMMENT '角色名称',
  `data_scope` char(1) DEFAULT NULL COMMENT '数据范围',
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) NOT NULL DEFAULT '0' COMMENT '删除标记',
  PRIMARY KEY (`id`),
  KEY `sys_role_del_flag` (`del_flag`)
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8 COMMENT='角色表';

-- ----------------------------
-- Records of sys_role
-- ----------------------------
INSERT INTO `sys_role` VALUES ('19', '50', '客户', '8', '2', '2016-12-22 20:14:44', null, null, null, '0');

-- ----------------------------
-- Table structure for sys_role_office
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_office`;
CREATE TABLE `sys_role_office` (
  `role_id` bigint(20) NOT NULL COMMENT '角色编号',
  `office_id` bigint(20) NOT NULL COMMENT '机构编号',
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `create_by` varchar(64) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_by` varchar(64) DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `del_flag` char(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色-机构';

-- ----------------------------
-- Records of sys_role_office
-- ----------------------------

-- ----------------------------
-- Table structure for sys_role_resource
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_resource`;
CREATE TABLE `sys_role_resource` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `role_id` bigint(20) DEFAULT NULL,
  `resource_id` bigint(20) DEFAULT NULL,
  `create_by` varchar(64) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_by` varchar(64) DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `del_flag` char(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1499 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_role_resource
-- ----------------------------
INSERT INTO `sys_role_resource` VALUES ('1479', '19', '188', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1480', '19', '193', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1481', '19', '195', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1482', '19', '237', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1483', '19', '226', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1484', '19', '227', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1485', '19', '230', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1486', '19', '231', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1487', '19', '233', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1488', '19', '236', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1489', '19', '238', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1490', '19', '232', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1491', '19', '234', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1492', '19', '235', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1493', '19', '204', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1494', '19', '205', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1495', '19', '206', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1496', '19', '207', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1497', '19', '208', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1498', '19', '219', null, null, null, null, '0');

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `company_id` bigint(20) NOT NULL COMMENT '归属公司',
  `office_id` bigint(20) NOT NULL COMMENT '归属部门',
  `username` varchar(100) NOT NULL COMMENT '登录名',
  `password` varchar(100) NOT NULL COMMENT '密码',
  `no` varchar(100) DEFAULT NULL COMMENT '工号',
  `name` varchar(100) DEFAULT NULL COMMENT '姓名',
  `email` varchar(200) DEFAULT NULL COMMENT '邮箱',
  `phone` varchar(200) DEFAULT NULL COMMENT '电话',
  `mobile` varchar(200) DEFAULT NULL COMMENT '手机',
  `user_type` char(1) DEFAULT '0' COMMENT '用户类型(0.普通 1.系统超级管理员)',
  `login_ip` varchar(100) DEFAULT NULL COMMENT '最后登陆IP',
  `login_date` datetime DEFAULT NULL COMMENT '最后登陆时间',
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) NOT NULL DEFAULT '0' COMMENT '删除标记',
  `status` char(1) DEFAULT '0',
  `license_code` varchar(255) DEFAULT NULL,
  `yue` varchar(255) DEFAULT NULL COMMENT '余额',
  `jifen` varchar(255) DEFAULT NULL COMMENT '积分',
  `villageid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `sys_user_office_id` (`office_id`),
  KEY `sys_user_company_id` (`company_id`),
  KEY `sys_user_update_date` (`update_date`),
  KEY `sys_user_del_flag` (`del_flag`),
  KEY `sys_user_login_name` (`username`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='用户表';

-- ----------------------------
-- Records of sys_user
-- ----------------------------
INSERT INTO `sys_user` VALUES ('2', '50', '50', 'admin', '86f3059b228c8acf99e69734b6bb32cc', '0002', '超级管理员', '@163.com', '13146587711', '951449465', '1', '127.0.0.1', '2017-01-24 15:00:32', '1', '2013-05-27 08:00:00', '2,超级管理员', '2016-12-05 13:15:16', '管理员', '0', '0', null, null, null, '2');
INSERT INTO `sys_user` VALUES ('3', '50', '50', 'zscat', '0658e089de04e6046ec4716a30a7c361', null, 'zscat', null, null, null, '0', null, null, null, '2016-12-28 18:03:12', null, null, null, '0', '0', null, null, null, null);
INSERT INTO `sys_user` VALUES ('4', '50', '50', 'shen', 'e6449d1935ae1119a02d6d1f83158587', null, 'shen', 'shen', null, null, '1', '127.0.0.1', '2017-01-19 15:55:08', null, '2017-01-07 18:10:44', null, null, null, '0', '0', null, '11', '22', '3');
INSERT INTO `sys_user` VALUES ('5', '50', '50', 'wap', 'f913f5fb6bbb5fe61c46a9954fc18ad9', null, 'wap', null, null, 'wap', '0', null, null, null, '2017-01-17 20:42:31', null, null, null, '0', '0', null, null, null, null);

-- ----------------------------
-- Table structure for sys_user_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_user_role`;
CREATE TABLE `sys_user_role` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `role_id` bigint(20) DEFAULT NULL,
  `user_id` bigint(20) DEFAULT NULL,
  `create_by` varchar(64) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_by` varchar(64) DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `del_flag` char(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=82 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_user_role
-- ----------------------------
INSERT INTO `sys_user_role` VALUES ('76', '19', '27', null, null, null, null, '0');
INSERT INTO `sys_user_role` VALUES ('77', '19', '28', null, null, null, null, '0');
INSERT INTO `sys_user_role` VALUES ('79', '19', '29', null, null, null, null, '0');
INSERT INTO `sys_user_role` VALUES ('80', '19', '4', null, null, null, null, '0');
INSERT INTO `sys_user_role` VALUES ('81', '19', '5', null, null, null, null, '0');

-- ----------------------------
-- Table structure for t_article
-- ----------------------------
DROP TABLE IF EXISTS `t_article`;
CREATE TABLE `t_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `remark` text,
  `del_flag` char(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_article
-- ----------------------------
INSERT INTO `t_article` VALUES ('1', '第一次发版', '平台', '<p>111111111111111111111</p>,', null, '交易平台发版');

-- ----------------------------
-- Table structure for t_blog
-- ----------------------------
DROP TABLE IF EXISTS `t_blog`;
CREATE TABLE `t_blog` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL COMMENT '标题',
  `summary` text COMMENT '摘要',
  `releaseDate` datetime DEFAULT NULL COMMENT '发布时间',
  `clickHit` int(11) DEFAULT NULL,
  `replyHit` int(11) DEFAULT '0',
  `content` longtext,
  `typeId` int(11) DEFAULT NULL,
  `keyWord` varchar(200) DEFAULT NULL,
  `state` int(11) DEFAULT NULL,
  `blogger_id` bigint(20) DEFAULT NULL,
  `typename` varchar(255) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `typeId` (`typeId`),
  CONSTRAINT `t_blog_ibfk_1` FOREIGN KEY (`typeId`) REFERENCES `t_blogtype` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=153 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blog
-- ----------------------------
INSERT INTO `t_blog` VALUES ('85', 'Storm 的可靠性保证测试', 'Storm 是一个分布式的实时计算框架，可以很方便地对流式数据进行实时处理和分析，能运用在实时分析、在线数据挖掘、持续计算以及分布式 RPC 等场景下。Storm 的实时性可以使得数据从收集到处理展示在秒级别内完成，从而为业务方决策提供实时的数据支持。在美团点评公司内部，实时计算主要应用场景包括实时日志解析、', '2016-10-27 19:11:36', '0', '0', '<p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><a href=\"http://storm.apache.org/\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">Storm</a>&nbsp;是一个分布式的实时计算框架，可以很方便地对流式数据进行实时处理和分析，能运用在实时分析、在线数据挖掘、持续计算以及分布式 RPC 等场景下。Storm 的实时性可以使得数据从收集到处理展示在秒级别内完成，从而为业务方决策提供实时的数据支持。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在美团点评公司内部，实时计算主要应用场景包括实时日志解析、用户行为分析、实时消息推送、消费趋势展示、实时新客判断、实时活跃用户数统计等。这些数据提供给各事业群，并作为他们实时决策的有力依据，弥补了离线计算“T+1”的不足。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在实时计算中，用户不仅仅关心时效性的问题，同时也关心消息处理的成功率。本文将通过实验验证 Storm 的消息可靠性保证机制，文章分为消息保证机制、测试目的、测试环境、测试场景以及总结等五节。</p><h2 id=\"storm-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Storm 的消息保证机制</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Storm 提供了三种不同层次的消息保证机制，分别是 At Most Once、At Least Once 以及 Exactly Once。消息保证机制依赖于消息是否被完全处理。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">消息完全处理</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">每个从 Spout（Storm 中数据源节点）发出的 Tuple（Storm 中的最小消息单元）可能会生成成千上万个新的 Tuple，形成一棵 Tuple 树，当整棵 Tuple 树的节点都被成功处理了，我们就说从 Spout 发出的 Tuple 被完全处理了。 我们可以通过下面的例子来更好地诠释消息被完全处理这个概念：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">TopologyBuilder builder = new TopologyBuilder();\r\nbuilder.setSpout(&quot;sentences&quot;, new KafkaSpout(spoutConfig), spoutNum);\r\nbuilder.setBolt(&quot;split&quot;, new SplitSentence(), 10)\r\n &nbsp; &nbsp;.shuffleGrouping(&quot;sentences&quot;);\r\nbuilder.setBolt(&quot;count&quot;, new WordCount(), 20)\r\n &nbsp; &nbsp;.fieldsGrouping(&quot;split&quot;, new Fields(&quot;word&quot;));</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这个 Topology 从 Kafka（一个开源的分布式消息队列）读取信息发往下游，下游的 Bolt 将收到的句子分割成单独的单词，并进行计数。每一个从 Spout 发送出来的 Tuple 会衍生出多个新的 Tuple，从 Spout 发送出来的 Tuple 以及后续衍生出来的 Tuple 形成一棵 Tuple 树，下图是一棵 Tuple 树示例：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/test-of-storm\'s-reliability/tuple_tree.png\" alt=\"Tuple 树示例图\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">上图中所有的 Tuple 都被成功处理了，我们才认为 Spout 发出的 Tuple 被完全处理。如果在一个固定的时间内（这个时间可以配置，默认为 30 秒），有至少一个 Tuple 处理失败或超时，则认为整棵 Tuple 树处理失败，即从 Spout 发出的 Tuple 处理失败。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">如何实现不同层次的消息保证机制</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/test-of-storm\'s-reliability/spout_bolt_acker.png\" alt=\"spout_bolt_acker\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Tuple 的完全处理需要 Spout、Bolt 以及 Acker（Storm 中用来记录某棵 Tuple 树是否被完全处理的节点）协同完成，如上图所示。从 Spout 发送 Tuple 到下游，并把相应信息通知给 Acker，整棵 Tuple 树中某个 Tuple 被成功处理了都会通知 Acker，待整棵 Tuple 树都被处理完成之后，Acker 将成功处理信息返回给 Spout；如果某个 Tuple 处理失败，或者超时，Acker 将会给 Spout 发送一个处理失败的消息，Spout 根据 Acker 的返回信息以及用户对消息保证机制的选择判断是否需要进行消息重传。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Storm 提供的三种不同消息保证机制中。利用 Spout、Bolt 以及 Acker 的组合我们可以实现 At Most Once 以及 At Least Once 语义，Storm 在 At Least Once 的基础上进行了一次封装（Trident），从而实现 Exactly Once 语义。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Storm 的消息保证机制中，如果需要实现 At Most Once 语义，只需要满足下面任何一条即可：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>关闭 ACK 机制，即 Acker 数目设置为 0</li><li>Spout 不实现可靠性传输</li><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>Spout 发送消息是使用不带 message ID 的 API</li><li>不实现 fail 函数</li></ul><li>Bolt 不把处理成功或失败的消息发送给 Acker</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果需要实现 At Least Once 语义，则需要同时保证如下几条：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>开启 ACK 机制，即 Acker 数目大于 0</li><li>Spout 实现可靠性传输保证</li><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>Spout 发送消息时附带 message 的 ID</li><li>如果收到 Acker 的处理失败反馈，需要进行消息重传，即实现 fail 函数</li></ul><li>Bolt 在处理成功或失败后需要调用相应的方法通知 Acker</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">实现 Exactly Once 语义，则需要在 At Least Once 的基础上进行状态的存储，用来防止重复发送的数据被重复处理，在 Storm 中使用 Trident API 实现。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下图中，每种消息保证机制中左边的字母表示上游发送的消息，右边的字母表示下游接收到的消息。从图中可以知道，At Most Once 中，消息可能会丢失（上游发送了两个 A，下游只收到一个 A）；At Least Once 中，消息不会丢失，可能重复（上游只发送了一个 B ，下游收到两个 B）；Exactly Once 中，消息不丢失、不重复，因此需要在 At Least Once 的基础上保存相应的状态，表示上游的哪些消息已经成功发送到下游，防止同一条消息发送多次给下游的情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/test-of-storm\'s-reliability/3_compare.png\" alt=\"三种消息保证机制比较图\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">测试目的</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Storm 官方提供 At Most Once、At Least Once 以及 Exactly Once 三种不同层次的消息保证机制，我们希望通过相关测试，达到如下目的：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>三种消息保证机制的表现，是否与官方的描述相符；</li><li>At Most Once 语义下，消息的丢失率和什么有关系、关系如何；</li><li>At Least Once 语义下，消息的重复率和什么有关系、关系如何。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">测试环境</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">本文的测试环境如下: 每个 worker（worker 为一个 物理 JVM 进程，用于运行实际的 Storm 作业）分配 1 CPU 以及 1.6G 内存。Spout、Bolt、Acker 分别跑在单独的 worker 上。并通过在程序中控制抛出异常以及人工 Kill Spout/Bolt/Acker 的方式来模拟实际情况中的异常情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">三种消息保证机制的测试均由 Spout 从 Kafka 读取测试数据，经由相应 Bolt 进行处理，然后发送到 Kafka，并将 Kafka 上的数据同步到 MySQL 方便最终结果的统计，如下图所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/test-of-storm\'s-reliability/test-flow.png\" alt=\"测试流程示意图\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">测试数据为 Kafka 上顺序保存的一系列纯数字，数据量分别有十万、五十万、一百万等，每个数字在每个测试样例中出现且仅出现一次。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">测试场景</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对于三种不同的消息保证机制，我们分别设置了不同的测试场景，来进行充分的测试。其中为了保证 Spout/Bolt/Acker 发生异常的情况下不影响其他节点，在下面的测试中，所有的节点单独运行在独立的 Worker 上。</p><h3 id=\"at-most-once\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">At Most Once</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">从背景中可以得知，如果希望实现 At Most Once 语义，将 Acker 的数目设置为 0 即可，本文的测试过程中通过把设置 Acker 为 0 来进行 At Most Once 的测试。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">输入数据</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">保存在 Kafka 上的一系列纯数字，数据量从十万到五百万不等，每个测试样例中，同一个数字在 Kafka 中出现且仅出现一次。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">不发生异常的情况下，消息能够不丢不重；Bolt 发生异常的情况下，消息会丢失，不会重复，其中消息的<strong style=\"padding: 0px; margin: 0px;\">丢失数目</strong>与<strong style=\"padding: 0px; margin: 0px;\">异常次数正相关</strong>。与官方文档描述相符，符合预期。</p><h3 id=\"at-least-once\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">At Least Once</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了实现 At Least Once 语义，需要 Spout、Bolt、Acker 进行配合。我们使用 Kafka-Spout 并通过自己管理 offset 的方式来实现可靠的 Spout；Bolt 通过继承 BaseBasicBolt，自动帮我们建立 Tuple 树以及消息处理之后通知 Acker；将 Acker 的数目设置为 1，即打开 ACK 机制，这样整个 Topology 即可提供 At Least Once 的语义。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">测试数据</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Kafka 上保存的十万到五十万不等的纯数字，其中每个测试样例中，每个数字在 Kafka 中出现且仅出现一次。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">从上面的表格中可以得到，消息不会丢失，可能发生重复，重复的数目与异常的情况相关。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>不发生任何异常的情况下，消息不会重复不会丢失。</li><li>Spout 发生异常的情况下，消息的重复数目约等于 spout.max.pending(Spout 的配置项，每次可以发送的最多消息条数） * NumberOfException（异常次数）。</li><li>Acker 发生异常的情况下，消息重复的数目等于 spout.max.pending * NumberOfException。</li><li>Bolt 发生异常的情况：</li><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>emit 之前发生异常，消息不会重复。</li><li>emit 之后发生异常，消息重复的次数等于异常的次数。</li></ul></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">结论与官方文档所述相符，每条消息至少发送一次，保证数据不会丢失，但可能重复，符合预期。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在所有情况下，最终结果集中的消息不会丢失，不会重复，与官方文档中的描述相符，符合预期。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">总结</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对 Storm 提供的三种不同消息保证机制，用户可以根据自己的需求选择不同的消息保证机制。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">不同消息可靠性保证的使用场景</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对于 Storm 提供的三种消息可靠性保证，优缺点以及使用场景如下所示：</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">如何实现不同层次的消息可靠性保证</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对于 At Least Once 的保证需要做如下几步：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>需要开启 ACK 机制，即 Topology 中的 Acker 数量大于零；</li><li>Spout 是可靠的。即 Spout 发送消息的时候需要附带 msgId，并且实现失败消息重传功能（fail 函数 ，可以参考下面的 Spout 代码）；</li><li>Bolt 在发送消息时，需要调用 emit（inputTuple, outputTuple）进行建立 anchor 树（参考下面建立 anchor 树的代码），并且在成功处理之后调用 ack ，处理失败时调用 fail 函数，通知 Acker。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">不满足以上三条中任意一条的都只提供 At Most Once 的消息可靠性保证，如果希望得到 Exactly Once 的消息可靠性保证，可以使用 Trident 进行实现。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">不同层次的可靠性保证如何实现</h3><h4 id=\"-spout\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">如何实现可靠的 Spout</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">实现可靠的 Spout 需要在 nextTuple 函数中发送消息时，调用带 msgID 的 emit 方法，然后实现失败消息的重传（fail 函数），参考如下示例:</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">/**\r\n &nbsp; &nbsp; * 想实现可靠的 Spout，需要实现如下两点\r\n &nbsp; &nbsp; * 1. 在 nextTuple 函数中调用 emit 函数时需要带一个 &nbsp; &nbsp; msgId，用来表示当前的消息（如果消息发送失败会用 msgId 作为参数回调 fail 函数）\r\n &nbsp; &nbsp; * 2. 自己实现 fail 函数，进行重发（注意，在 storm 中没有 msgId 和消息的对应关系，需要自己进行维护）\r\n &nbsp; &nbsp; */\r\npublic void nextTuple() {\r\n &nbsp; &nbsp;//设置 msgId 和 Value 一样，方便 fail 之后重发\r\n &nbsp; &nbsp;collector.emit(new Values(curNum + &quot;&quot;, round + &nbsp; &nbsp; &quot;&quot;), curNum + &quot;:&quot; + round);\r\n}\r\n\r\n@Override\r\npublic void fail(Object msgId) {//消息发送失败时的回调函数\r\nString tmp = (String)msgId; &nbsp; //上面我们设置了 msgId 和消息相同，这里通过 msgId 解析出具体的消息\r\nString[] args = tmp.split(&quot;:&quot;);\r\n\r\n//消息进行重发\r\ncollector.emit(new Values(args[0], args[1]), msgId);\r\n}</code></pre><h4 id=\"-bolt\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">如何实现可靠的 Bolt</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Storm 提供两种不同类型的 Bolt，分别是 BaseRichBolt 和 BaseBasicBolt，都可以实现可靠性消息传递，不过 BaseRichBolt 需要自己做很多周边的事情（建立 anchor 树，以及手动 ACK/FAIL 通知 Acker），使用场景更广泛，而 BaseBasicBolt 则由 Storm 帮忙实现了很多周边的事情，实现起来方便简单，但是使用场景单一。如何用这两个 Bolt 实现（不）可靠的消息传递如下所示：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">//BaseRichBolt 实现不可靠消息传递\r\npublic class SplitSentence extends BaseRichBolt {//不建立 anchor 树的例子\r\n &nbsp; &nbsp;OutputCollector _collector;\r\n\r\n &nbsp; &nbsp;public void prepare(Map conf, TopologyContext context, OutputCollector collector) {\r\n &nbsp; &nbsp; &nbsp; &nbsp;_collector = collector;\r\n &nbsp; &nbsp;}\r\n\r\n &nbsp; &nbsp;public void execute(Tuple tuple) {\r\n &nbsp; &nbsp; &nbsp; &nbsp;String sentence = tuple.getString(0);\r\n &nbsp; &nbsp; &nbsp; &nbsp;for(String word: sentence.split(&quot; &quot;)) {\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;_collector.emit(new Values(word)); &nbsp;// 不建立 anchor 树\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n &nbsp; &nbsp; &nbsp; &nbsp;_collector.ack(tuple); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//手动 ack，如果不建立 anchor 树，是否 ack 是没有区别的，这句可以进行注释\r\n &nbsp; &nbsp;}\r\n\r\n &nbsp; &nbsp;public void declareOutputFields(OutputFieldsDeclarer declarer) {\r\n &nbsp; &nbsp; &nbsp; &nbsp;declarer.declare(new Fields(&quot;word&quot;));\r\n &nbsp; &nbsp;} &nbsp; &nbsp; &nbsp;\r\n}\r\n\r\n//BaseRichBolt 实现可靠的 Bolt\r\npublic class SplitSentence extends BaseRichBolt {//建立 anchor 树以及手动 ack 的例子\r\n &nbsp; &nbsp;OutputCollector _collector;\r\n\r\n &nbsp; &nbsp;public void prepare(Map conf, TopologyContext context, OutputCollector collector) {\r\n &nbsp; &nbsp; &nbsp; &nbsp;_collector = collector;\r\n &nbsp; &nbsp;}\r\n\r\n &nbsp; &nbsp;public void execute(Tuple tuple) {\r\n &nbsp; &nbsp; &nbsp; &nbsp;String sentence = tuple.getString(0);\r\n &nbsp; &nbsp; &nbsp; &nbsp;for(String word: sentence.split(&quot; &quot;)) {\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;_collector.emit(tuple, new Values(word)); &nbsp;// 建立 anchor 树\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n &nbsp; &nbsp; &nbsp; &nbsp;_collector.ack(tuple); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//手动 ack，如果想让 Spout 重发该 Tuple，则调用 _collector.fail(tuple);\r\n &nbsp; &nbsp;}\r\n\r\n &nbsp; &nbsp;public void declareOutputFields(OutputFieldsDeclarer declarer) {\r\n &nbsp; &nbsp; &nbsp; &nbsp;declarer.declare(new Fields(&quot;word&quot;));\r\n &nbsp; &nbsp;} &nbsp; &nbsp; &nbsp;\r\n}</code></pre><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('86', '分布式会话跟踪系统架构设计与实践', '本文整理自美团点评技术沙龙第08期：大规模集群的服务治理设计与实践。美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号“美团点评技术团', '2016-10-27 19:15:37', '0', '0', '<p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">本文整理自美团点评技术沙龙第08期：大规模集群的服务治理设计与实践。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号“美团点评技术团队”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这期沙龙主要内容有：分布式服务通信框架及服务治理系统、分布式监控系统实践、分布式会话跟踪系统架构设计与实践，特邀美恰CTO讲解时下热门话题“微服务”。其中既包括关键系统设计、在美团点评内部的实践经验，也包括一些项目在业界开源的运营实践。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">前言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着美团点评的业务发展，公司的分布式系统变得越来越复杂，我们亟需一个工具能够梳理内部服务之间的关系，感知上下游服务的形态。比如一次请求的流量从哪个服务而来、最终落到了哪个服务中去？服务之间是RPC调用，还是HTTP调用？一次分布式请求中的瓶颈节点是哪一个，等等。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace1.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">简介</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">MTrace，美团点评内部的分布式会话跟踪系统，其核心理念就是调用链：通过一个全局的ID将分布在各个服务节点上的同一次请求串联起来，还原原有的调用关系、追踪系统问题、分析调用数据、统计系统指标。这套系统借鉴了2010年Google发表的一篇论文《dapper》，并参考了Twitter的Zipkin以及阿里的Eagle Eye的实现。<br style=\"padding: 0px; margin: 0px;\"/>那么我们先来看一下什么是调用链，调用链其实就是将一次分布式请求还原成调用链路。显式的在后端查看一次分布式请求的调用情况，比如各个节点上的耗时、请求具体打到了哪台机器上、每个服务节点的请求状态，等等。它能反映出一次请求中经历了多少个服务以及服务层级等信息（比如你的系统A调用B，B调用C，那么这次请求的层级就是3），如果你发现有些请求层级大于10，那这个服务很有可能需要优化了。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">网络优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace2.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如上图所示，红框内显示了一次分布式请求经过各个服务节点的具体IP，通过该IP就可以查询一次分布式请求是否有跨机房调用等信息，优化调用链路的网络结构。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">瓶颈查询</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace3.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">再比如上图，红框部分显示的是系统调用的瓶颈节点，由于该节点的耗时，导致了整个系统调用的耗时延长，因此该节点需要进行优化，进而优化整个系统的效率。这种问题通过调用链路能很快发现下游服务的瓶颈节点；但是假如没有这样的系统，我们会怎样做呢？首先我会发现下游服务超时造成了我的服务超时，这时我会去找这个下游服务的负责人，然后该负责人发现也不是他自己服务的问题，而是他们调用了其他人的接口造成的问题，紧接着他又去找下游的服务负责人。我们都知道跨部门之间的沟通成本很高的，这么找下去会花费大量的不必要时间，而有了MTrace之后，你只需要点开链路就能发现超时问题的瓶颈所在。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">优化链路</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace4.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我们再来看下上面这张图，红框部分都是同一个接口的调用，一次请求调用相同的接口10几次甚至是几十次，这是我们不想看到的事情，那么整个系统能不能对这样的请求进行优化，比如改成批量接口或者提高整个系统调用的并行度？在美团点评内部我们会针对这样的链路进行筛选分析，然后提供给业务方进行优化。</p><h2 id=\"-log-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">异常log绑定</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过MTrace不仅能做上述这些事情，通过它的特性，还能携带很多业务感兴趣的数据。因为MTrace可以做到数据和一次请求的绑定以及数据在一次请求的网络中传递。比如一些关键的异常log，一般服务的异常log很有可能是因为上游或者下游的异常造成的，那就需要我们手动地对各个不同服务的异常log做mapping。看这次的异常log对应到上游服务的哪个log上，是不是因为上游传递的一些参数造成了该次异常？而通过MTrace就可以将请求的参数、异常log等信息通过traceId进行绑定，很容易地就把这些信息聚合到了一起，方便业务端查询问题。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">透明传输数据</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">业务端往往有这样的需求，它希望一些参数能在一次分布式请求一直传递下去，并且可以在不同的RPC中间件间传递。MTrace对该类需求提供了两个接口：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">put(map&lt;String, String&gt; data)\r\nputOnce(map&lt;String, String&gt; data)</code></pre><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>put 接口：参数可以在一次分布式请求中一直传递。</li><li>putOnce 接口：参数在一次分布式请求中只传递一级。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如下图所示</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace5.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>左侧绿色部分是put接口，service中调用了put接口传递了uid=123456这个参数，它会在网络中一直传递，可以在服务A中通过get(&quot;uid&quot;)的方式获取参数值，也可以在服务C中通过get(&quot;uid&quot;)的方式获取参数值。</li><li>右侧蓝色部分是putOnce接口，service中调用了putOnce接口传递pid=11111，它只会传递一级，可以在服务B中通过get(&quot;pid&quot;)的方式获取参数值，但是在服务D中就获取不到pid的值了。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上的两种接口可以用于业务自定义传递数据，比如通过传递一个服务标识，用于AB test，下游的所有服务获取到test的标识就会走test的策略，即上游服务可以传递一些参数，控制所有下游服务的逻辑。当然业务也可以通过该接口传递一些临时性的数据。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">系统架构</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace6.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">主要分为三层：数据埋点上报、数据收集计算、数据前端展示。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">基本概念</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace7.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"traceid\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">traceId</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">全局唯一，64位整数，用于标识一次分布式请求，会在RPC调用的网络中传递。</p><h3 id=\"spanid\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">spanId</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">签名方式生成:0, 0.1, 0.1.1, 0.2。用于标识一次RPC在分布式请求中的位置，比如0.2就是0节点服务调用的第二个服务。</p><h5 id=\"annotation\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">annotation</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">业务端自定义埋点，业务感兴趣的想上传到后端的数据，比如该次请求的用户ID等。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">数据埋点</h2><h3 id=\"-sdk\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">埋点SDK</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">提供统一的SDK，在各个中间件中埋点，生成traceID等核心数据，上报服务的调用数据信息。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>生成调用上下文；</li><li>同步调用上下文存放在ThreadLocal, 异步调用通过显式调用API的方式支持；</li><li>网络中传输关键埋点数据，用于中间件间的数据传递，支持Thrift, HTTP协议。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">业内有些系统是使用注解的方式实现的埋点，这种方式看似很优雅，但是需要业务方显式依赖一些AOP库，这部分很容易出现问题，因为AOP方式太过透明，导致查问题很麻烦，而且业务方配置的东西越多越容易引起一些意想不到的问题，所以我们的经验是尽量在各个统一的中间件中进行显式埋点，虽然会导致代码间耦合度增加，但是方便后续定位问题。其次，为了整个框架的统一，MTrace并非仅支持Java一种语言，而AOP的特性很多语言是不支持的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Agent</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>透传数据，用作数据转发；</li><li>做流量控制；</li><li>控制反转，很多策略可以通过agent实现，而不需要每次都升级业务代码中的SDK。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Agent仅仅会转发数据，由Agent判断将数据转发到哪里，这样就可以通过Agent做数据路由、流量控制等操作。也正是由于Agent的存在，使得我们可以在Agent层实现一些功能，而不需要业务端做SDK的升级，要知道业务端SDK升级的过程是很缓慢的，这对于整个调用链的系统来说是不可接受的，因为MTrace整个系统是针对庞大的分布式系统而言的，有一环的服务缺失也会造成一定的问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前MTrace支持的中间件有:</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>公司内部RPC中间件</li><li>http中间件</li><li>mysql中间件</li><li>tair中间件</li><li>mq中间件</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">数据埋点的四个阶段：</h3><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1em; word-wrap: break-word;\">Client Send : 客户端发起请求时埋点，需要传递一些参数，比如服务的方法名等</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; color: rgb(0, 0, 0); font-family: &#39;Helvetica Regular&#39;; font-size: 1em; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;Span span = Tracer.clientSend(param);</code></pre></li><li><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1em; word-wrap: break-word;\">Server Recieve : 服务端接收请求时埋点，需要回填一些参数，比如traceId，spanId</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; color: rgb(0, 0, 0); font-family: &#39;Helvetica Regular&#39;; font-size: 1em; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;Tracer.serverRecv(param);</code></pre></li><li><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1em; word-wrap: break-word;\">ServerSend : 服务端返回请求时埋点，这时会将上下文数据传递到异步上传队列中</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; color: rgb(0, 0, 0); font-family: &#39;Helvetica Regular&#39;; font-size: 1em; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;Tracer.serverSend();</code></pre></li><li><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1em; word-wrap: break-word;\">Client Recieve : 客户端接收返回结果时埋点，这时会将上下文数据传递到异步上传队列中</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; color: rgb(0, 0, 0); font-family: &#39;Helvetica Regular&#39;; font-size: 1em; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;Tracer.clientRecv();</code></pre></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace8.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">埋点上下文</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace9.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">上图CS、SR为创建上下文的位置，CR、SS为归档上下文的位置。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">上下文归档</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">上下文归档，会把上下文数据异步上传到后端，为了减轻对业务端的影响，上下文上报采用的是异步队列的方式，数据不会落地，直接通过网络形式传递到后端服务，在传递之前会对数据做一层压缩，主要是压缩比很可观，可以达到10倍以上，所以就算牺牲一点CPU资源也是值得的。具体上报的数据如图所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt-mtrace/mtrace10.png\" alt=\"\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我们之前在数据埋点时遇到了一些问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>异步调用</li><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>异步IO造成的线程切换，不能通过ThreadLocal传递上下文。</li><li>显式的通过API进行埋点传递，切换前保存，切换后还原。</li><li>提供封装好的ThreadPool库。</li></ul><li>数据量大，每天千亿级别的数据</li><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>批量上报</li><li>数据压缩</li><li>极端情况下采样</li></ul></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">数据存储</h2><h3 id=\"kafka-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Kafka使用</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我们在SDK与后端服务之间加了一层Kafka，这样做既可以实现两边工程的解耦，又可以实现数据的延迟消费。我们不希望因为瞬时QPS过高而引起的数据丢失，当然为此也付出了一些实效性上的代价。</p><h3 id=\"-hbase\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实时数据Hbase</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">调用链路数据的实时查询主要是通过Hbase，使用traceID作为RowKey，能天然的把一整条调用链聚合在一起，提高查询效率。</p><h3 id=\"-hive\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">离线数据Hive</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">离线数据主要是使用Hive，可以通过SQL进行一些结构化数据的定制分析。比如链路的离线形态，服务的出度入度(有多少服务调用了该服务，该服务又调用了多少下游服务)</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">前端展示</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">前端展示，主要遇到的问题是NTP同步的问题，因为调用链的数据是从不同机器上收集上来的，那么聚合展示的时候就会有NTP时间戳不同步的问题，这个问题很难解决，于是我们采取的方式是前端做一层适配，通过SpanId定位调用的位置而不是时间，比如0.2一定是发生在0.1这个Span之后的调用，所以如果时间出现漂移，就会根据SpanId做一次校正。即判断时间顺序的优先级为最高是spanid,然后是时间戳。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">总结</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">核心概念：调用链；<br style=\"padding: 0px; margin: 0px;\"/>用途：定位系统瓶颈，优化系统结构、统计系统指标、分析系统数据；<br style=\"padding: 0px; margin: 0px;\"/>架构：埋点上报、收集计算、展示分析。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式会话跟踪系统主要的特点就是能关联服务之间的联动关系，通过这层关系可以延伸出来很多有意义的分析数据，统计数据。为优化系统结构，查询系统瓶颈问题带来了极大的便利。</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('87', 'Spring MVC注解故障追踪记', 'Spring MVC是美团点评很多团队使用的Web框架。在基于Spring MVC的项目里，注解的使用几乎遍布在项目中的各个模块，有Java提供的注解，如：@Override、@Deprecated等；也有Spring提供的注解，如：@Controller、@Service、@Autowired等；同时还可能', '2016-10-27 19:16:09', '0', '0', '<p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Spring MVC是美团点评很多团队使用的Web框架。在基于Spring MVC的项目里，注解的使用几乎遍布在项目中的各个模块，有Java提供的注解，如：@Override、@Deprecated等；也有Spring提供的注解，如：@Controller、@Service、@Autowired等；同时还可能有自定义注解等。注解一方面可以作为标记说明使用；另一方面也能帮助我们省去一些配置工作，加快开发速度。注解就像语法糖一样，我有时候会“随心所欲”的把它带入到代码里，一直乐 (hú)此(lǐ)不(hú)疲(tú)。直到笔者遇到了一个由@Service注解引发的空指针问题时，才真正意识到乱用注解的危害，同时也有了下文的深入探讨！</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">事件起因</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">接到业务方需求需要封装上游的一个HTTP接口来提供系统内的服务支持，我封装这个接口并通过本地单元测试后就部署到测试环境中开始测试了。没想到一测试就报NullPointerException异常，异常栈信息如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">ERROR [qtp384587033-86] 2015-12-21 16:29:00.905 com.meituan.trip.mobile.hermes.common.utils.HttpClientUtils.doRequest(HttpClientUtils.java:359) HttpClientUtils.doRequest invoke get error, url:nullmt/api/test/v1/query?id=123456\r\n &nbsp;org.apache.http.client.ClientProtocolException\r\n &nbsp; &nbsp;at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:186) ~[httpclient-4.3.5.jar:4.3.5]\r\n &nbsp;…\r\n &nbsp;Caused by: org.apache.http.ProtocolException: Target host is not specified\r\n &nbsp;...</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">从异常栈上可以清楚的看出错误原因，是由于请求地址不标准（以 http:// 开头）导致的。这个错误其实很诡异，因为我已经在配置文件中通过XML的方式注入URL属性值了，而且在本地写单元测试都能通过，为什么还会属性注入失败呢？经过反复的检查和尝试，发现只要在class的定义上加@Service注解，问题就会重现，去掉则正常运行。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">问题定位</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在保留@Service注解的情况下，重新在本地部署并启动工程，从启动日志上发现此实现Bean被替换过：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;INFO [main] 2015-12-21 16:28:47.078 org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:665) Overriding bean definition for bean &#39;queryPartnerImpl&#39;: replacing [Generic bean: class [com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/Users/hanzhankang/hermes/hermes-sal/target/classes/com/meituan/trip/mobile/hermes/sal/meilv/impl/QueryPartnerImpl.class]] with [Generic bean: class [com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [sal/service-outer.xml]]</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Spring Bean发生替换是因为在同一个WebApplicationContext下，重复注入同一名称的Bean实例。从上面的日志中我们可以看出，queryPartnerImpl对象最终保留的是通过[sal/service-outer.xml]配置文件注入的Bean，在这个配置文件里详细的设置了相关属性。从替换结果来看，即使发生过替换也不会影响程序到正确运行。那问题会出在哪里呢？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">经过反复调试发现，只要在QueryPartnerImpl类的定义前面加上@Service注解，问题就会重现。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">问题排查及解决</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">遇到如此诡异的问题，且又不能确定此问题是否是系统其他环境配置导致的时候，不妨可以从这个类在系统中的实例对象身上着手分析，最简单的办法是通过Jmap查询系统中的对象实例个数。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">使用Jmap查询QueryPartnerImpl类在系统中的实例个数及结果：（Jmap是JDK自带的堆分析工具Java Memory Map，可以通过此工具打印出某个Java进程内存内的所有对象大小和数量；建议在测试环境中使用jmap -histo:live命令查询，执行此命令会触发一次Full GC）</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp; &nbsp;$ jmap -histo:live 20881 | grep QueryPartnerImpl\r\n &nbsp; &nbsp;1354: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 80 &nbsp;com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">查看发现系统中居然有2个实例！这和我们对“Spring创建Bean默认是单例的”认知不符，那就把进程Dump出来详细解刨下这2个对象吧！通过Jmap的dump参数把进程镜像dump出来：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;$ jmap -dump:format=b,file=/tmp/heap.bin 20881\r\n &nbsp;Dumping heap to /private/tmp/dump.data ...\r\n &nbsp;Heap dump file created</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">此时可以使用MAT（内存分析工具，Memory Analysis Tool）并配合Jhat快速定位到此类的实例对象上，通过对象间的引用关系来查找定位原因。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先通过Jhat工具来查看QueryPartnerImpl对象及对象间的引用关系：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;$ jhat &nbsp;/tmp/heap.bin\r\n &nbsp;...........................................................................\r\n &nbsp;Snapshot resolved.\r\n &nbsp;Started HTTP server on port 7000\r\n &nbsp;Server is ready.</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">（Jhat是JDK自带的堆分析工具Java Heap Analyse Tool，可以将堆中的对象以HTML的形式显示出来，包括对象的数量、大小等，默认端口7000。）</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过Jhat加载dump文件成功后，访问localhost:7000进入对象列表页，此时通过关键字“QueryPartnerImpl”搜索定位到具体的类上，再点击进去查看详情：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;Class 0x6c36938b0\r\n &nbsp;class com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl\r\n &nbsp;Instances （类的实例）\r\n &nbsp;Exclude subclasses\r\n &nbsp;Include subclasses\r\n &nbsp;References summary by Type（对象的引用关系）\r\n &nbsp;References summary by type</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">点击链接Instances -&gt; Exclude subclasses查看类的实例对象：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><code style=\"padding: 0px 0.5em; margin: 0px; color: rgb(0, 0, 0); font-family: monospace, monospace; font-size: 1em; border-radius: 0.3em; border: 1px solid rgb(204, 204, 204); background: rgb(238, 238, 238);\">com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl@0x6c41b6f80 (64 bytes)</code><br style=\"padding: 0px; margin: 0px;\"/><code style=\"padding: 0px 0.5em; margin: 0px; color: rgb(0, 0, 0); font-family: monospace, monospace; font-size: 1em; border-radius: 0.3em; border: 1px solid rgb(204, 204, 204); background: rgb(238, 238, 238);\">com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl@0x7aeafac20 (64 bytes)</code></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这2个就是QueryPartnerImpl在系统中创建的2个实例对象，点击查看每个对象属性注入情况：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">QueryPartnerImpl@0x6c41b6f80 (64 bytes)\r\n属性：\r\nclientId (L) : trip_trade (28 bytes)\r\nclientSecret (L) : 6ee952489a93b51b1ffcadd040ca562e (28 bytes)\r\nconnectTimeout (I) : 15000\r\nencode (L) : UTF-8 (28 bytes)\r\nlog (L) : org.apache.logging.slf4j.Log4jLogger@0x6c3f26240 (41 bytes)\r\nreadTimeout (I) : 15000\r\nurl (L) : &nbsp;http://test.url.meituan.com/ &nbsp;(28 bytes)\r\n\r\n引用关系：\r\ncom.meituan.trip.mobile.hermes.biz.cs.GroupTravelCsOrderDetailBiz@0x6c41b6f60 (48 bytes) : field queryPartnerImpl\r\njava.util.concurrent.ConcurrentHashMap$Node@0x6c4420fe8 (44 bytes) : field val\r\norg.springframework.beans.factory.support.DisposableBeanAdapter@0x6c41b79f0 (66 bytes) : field bean\r\ncom.meituan.trip.mobile.hermes.biz.driven.listener.snapshot.GroupTravelOrderSnapshotEventListener@0x7ae57c490 (96 bytes) : field queryPartnerImpl\r\ncom.meituan.trip.mobile.hermes.web.controller.api.ApiAliveController@0x6c3619fe8 (24 bytes) : field queryPartnerImpl\r\n\r\nQueryPartnerImpl@0x7aeafac20 (64 bytes)\r\n属性：\r\nclientId (L) : &lt;null&gt;\r\nclientSecret (L) : &lt;null&gt;\r\nconnectTimeout (I) : 0\r\nencode (L) : &lt;null&gt;\r\nlog (L) : org.apache.logging.slf4j.Log4jLogger@0x6c3f26240 (41 bytes)\r\nreadTimeout (I) : 0\r\nurl (L) : &lt;null&gt;\r\n引用关系：\r\norg.springframework.beans.factory.support.DisposableBeanAdapter@0x7aeccfd40 (66 bytes) : field bean\r\njava.util.concurrent.ConcurrentHashMap$Node@0x7aeb05b18 (44 bytes) : field val\r\ncom.meituan.trip.mobile.hermes.biz.cs.GroupTravelCsOrderDetailBiz@0x7aeafab88 (48 bytes) : field queryPartnerImpl\r\ncom.meituan.trip.mobile.hermes.web.controller.api.ApiAliveController@0x7aeb80228 (24 bytes) : field queryPartnerImpl\r\ncom.meituan.trip.mobile.hermes.biz.driven.listener.snapshot.GroupTravelOrderSnapshotEventListener@0x7aeb03908 (96 bytes) : field queryPartnerImpl</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">结果发现QueryPartnerImpl@0x6c41b6f80对象的属性是注入成功的，而QueryPartnerImpl@0x7aeafac20对象的属性却注入失败。从这里可以初步判断：导致错误的原因是我们使用的对象是属性注入失败的QueryPartnerImpl@0x7aeafac20。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">问题排除到这里，我们不禁有2个疑问：<br style=\"padding: 0px; margin: 0px;\"/>1）<strong style=\"padding: 0px; margin: 0px;\">为什么会出现2个对象？</strong><br style=\"padding: 0px; margin: 0px;\"/>从Spring启动日志看到queryPartnerImpl有被替换的情况，其实替换的结果是把通过@Service注入的Bean替换成了用XML定义并注入的Bean，这也只能有1个对象，另一个对象怎么出现的？<br style=\"padding: 0px; margin: 0px;\"/>2）<strong style=\"padding: 0px; margin: 0px;\">谁在使用这2个对象？</strong><br style=\"padding: 0px; margin: 0px;\"/>既然错误已成事实，那是谁在使用这个属性注入失败的QueryPartnerImpl@0x7aeafac20呢？而且我们每次都是使用它，而不是属性注入成功的QueryPartnerImpl@0x6c41b6f80。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过Jhat展示的对象引用关系看，只有org.springframework.beans.factory.support.DisposableBeanAdapter和java.util.concurrent.ConcurrentHashMap$Node 比较可疑。但DisposableBeanAdapter是用来管理Spring Bean的销毁，所以和本事故无关，重点就落在java.util.concurrent.ConcurrentHashMap$Node 上了。<br style=\"padding: 0px; margin: 0px;\"/>通过MAT工具来分析java.util.concurrent.ConcurrentHashMap$Node@0x7aeb05b18的引用关系，通过对象查找工具并输入对象的内存地址定位：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/52373.png\" width=\"600\" title=\"通过MAT工具查找对象\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可直接查看此对象：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/649372.png\" width=\"600\" title=\"对象查找结果\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">选中这个对象，右键打开菜单选项，选择：Lists objects -&gt; with incoming references查看都有哪些对象持有此对象（with outgoing references表示此对象拥有哪些对象）：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/270014.png\" width=\"600\" title=\"查看对象引用关系1\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/596625.png\" width=\"600\" title=\"查看对象引用关系2\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过上面对象引用追踪路径可以看到，queryPartnerImpl@0x7aeafac20最终被DispatcherServlet@0x7ae577e00对象引用。<br style=\"padding: 0px; margin: 0px;\"/>采用同样的方式来分析queryPartnerImpl@0x6c41b6f80的对象引用关系：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/434085.png\" width=\"600\" title=\"查看对象引用关系3\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/480991.png\" width=\"600\" title=\"查看对象引用关系4\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">queryPartnerImpl@0x6c41b6f80最终被ContextLoaderListener@0x6c358f7f8引用。<br style=\"padding: 0px; margin: 0px;\"/>通过对比发现:</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">queryPartnerImpl@0x6c41b6f80 被 XmlWebApplicationContext@0x6c358f810 引用，而 XmlWebApplicationContext@0x6c358f810 又被 ContextLoaderListener@0x6c358f7f8 引用;\r\nqueryPartnerImpl@0x7aeafac20 被 XmlWebApplicationContext@0x7ae9ca338 引用，而 XmlWebApplicationContext@0x7ae9ca338 又被 DispatcherServlet@0x7ae577e00 引用。</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ContextLoaderListener和DispatcherServlet对我们来说非常熟悉，这是在Spring MVC项目中的web.xml中配置的，ContextLoaderListener用来初始化root WebApplicationContext；DispatcherServlet是请求分发控制器，启动时也会初始化一个自己的WebApplicationContext，并设置parent为root WebApplicationContext，从而形成常说的“父子关系”。DispatcherServlet如果在自己的WebApplicationContext能找到需要用的对象就直接使用，只有在找不到对象的情况下才会去查找父容器里的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">到这里我们找到了引起事故发生的根本原因，但是我们还需要找出引发事故的罪魁祸首！通过前面的分析我们知道这和ContextLoaderListener、DispatcherServlet有关系，那就定位到web.xml的配置文件中来：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/597466.png\" width=\"600\" title=\"web.xml的配置\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在spring/spring-servlet.xml配置文件中我们开启了注解扫描功能，并且从项目路径“com.meituan.trip.mobile.hermes”开始扫描：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/608828.png\" width=\"600\" title=\"spring-servlet.xml的配置\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我们知道Spring会通过@Service注解去实例化一个Bean，属性如果没有通过注解注入进来的话，就用默认值。在此配置文件后面就再没有对queryPartnerImpl的定义，也就不会发生替换的情况。DispatcherServlet只能获得由注解加载的半成品Bean。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">再来看看ContextLoaderListener的配置文件applicationContext.xml：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/499078.png\" width=\"600\" title=\"applicationContext.xml的配置\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我们在applicationContext.xml中也同样开启了注解扫描功能，也是从项目路径“com.meituan.trip.mobile.hermes”开始扫描，但是在下文的sal/service-out.xml配置文件中，又重新对queryPartnerImpl通过XML定义，所以会发生替换现象。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">到这里我们才最终搞清楚发生这次事故的最根本原因，解决办法是要让整个系统中只有一个属性注入成功的queryPartnerImpl对象，途径有如下几种：<br style=\"padding: 0px; margin: 0px;\"/>1）删除@Service注解：这个方法治标不治本，因为配置<context:annotation-config style=\"padding: 0px; margin: 0px;\">、<context:component-scan style=\"padding: 0px; margin: 0px;\">&nbsp;注解扫描功能后会开启包括@Service在内的超过6种注解，而这些注解部分在用；<br style=\"padding: 0px; margin: 0px;\"/>2）扫描隔离：通过配置<context:component-scan style=\"padding: 0px; margin: 0px;\">的属性use-default-filters并配合include-filter/exclude-filter实现扫描过滤，只扫描指定注解。<br style=\"padding: 0px; margin: 0px;\"/>修改后的spring-servlet.xml配置（applicationContext.xml配置也需要做调整）：</context:component-scan></context:component-scan></context:annotation-config></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/873114.png\" width=\"600\" title=\"修改后的spring-servlet.xml配置\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">use-default-filters＝true，表示Spring将会创建那些被@Component, @Repository, @Service 或 @Controller等注解标注的Bean，默认值为true。如果use-default-filters＝true，同时使用<context:exclude-filter style=\"padding: 0px; margin: 0px;\">并指定注解类，表示不扫描指定base-package路径下的此注解；如果use-default-filters＝false，同时使用<context:include-filter style=\"padding: 0px; margin: 0px;\">并指定注解类，表示扫描指定base-package路径下面的此注解。</context:include-filter></context:exclude-filter></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">问题总结</h2><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>使用注解并不一定会引起错误，但是注解要使用规范，不能乱用。如果通过注解注入，属性值最好也要通过注解方式注入；</li><li>注解扫描功能虽然很强大、很方便，但是要注意区分扫描范围及过滤特定注解；</li><li>单元测试能通过的原因：我们一般只指定加载一个配置文件作为测试环境，类实例只会出现一个，故能测试通过；</li><li>最好最重要的一点就是在使用任何框架时，最好按&quot;Best Practice&quot;规范，避免出现一些莫名其妙的问题。</li></ol><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">进一步探讨</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过阅读Spring源码中涉及ContextLoaderListener和DispatcherServlet的部分学习到，ContextLoaderListener在Context初始化的时候会创建一个root WebApplicationContext，并将此对象存储在ServletContext中，Key为：WebApplicationContext.class.getName() + &quot;.ROOT”；DispatcherServlet在初始化过程也实例化了一个自己的WebApplicationContext，设置在ServletContext中的key为：<br style=\"padding: 0px; margin: 0px;\"/>FrameworkServlet.class.getName() + &quot;.CONTEXT.”+ getServletName()，同时设置此对象的parent为 ContextLoaderListener定义的 root WebApplicationContext。DispatcherServlet所创建的WebApplicationContext被称为子容器，子容器可以访问父容器中的内容，但父容器不能访问子容器中的内容。<br style=\"padding: 0px; margin: 0px;\"/>Spring官方在介绍Spring MVC的同时，也给我们介绍了WebApplicationContext的继承关系：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/309178.png\" title=\"WebApplicationContext的继承关系\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">从图中可以看出，每个DispatcherServlet都会去实例化一个自己的WebApplicationContext，而这个WebApplicationContext可以获得root WebApplicationContext中已经实例化好的Bean。</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('88', '分布式系统互斥性与幂等性问题的分析与解决', '前言随着互联网信息技术的飞速发展，数据量不断增大，业务逻辑也日趋复杂，对系统的高并发访问、海量数据处理的场景也越来越多。如何用较低成本实现系统的高可用、易伸缩、可扩展等目标就显得越发重要。为了解决这一系列问题，系统架构也在不断演进。传统的集中式系统已经逐渐无法满足要求，分布式系统被使用在更多的场景中。分布式系', '2016-10-27 19:19:11', '0', '0', '<h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">前言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着互联网信息技术的飞速发展，数据量不断增大，业务逻辑也日趋复杂，对系统的高并发访问、海量数据处理的场景也越来越多。如何用较低成本实现系统的高可用、易伸缩、可扩展等目标就显得越发重要。为了解决这一系列问题，系统架构也在不断演进。传统的集中式系统已经逐渐无法满足要求，分布式系统被使用在更多的场景中。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式系统由独立的服务器通过网络松散耦合组成。在这个系统中每个服务器都是一台独立的主机，服务器之间通过内部网络连接。分布式系统有以下几个特点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>可扩展性：可通过横向水平扩展提高系统的性能和吞吐量。</li><li>高可靠性：高容错，即使系统中一台或几台故障，系统仍可提供服务。</li><li>高并发性：各机器并行独立处理和计算。</li><li>廉价高效：多台小型机而非单台高性能机。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">然而，在分布式系统中，其环境的复杂度、网络的不确定性会造成诸如时钟不一致、“拜占庭将军问题”（Byzantine failure）等。存在于集中式系统中的机器宕机、消息丢失等问题也会在分布式环境中变得更加复杂。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">基于分布式系统的这些特征，有两种问题逐渐成为了分布式环境中需要重点关注和解决的典型问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>互斥性问题。</li><li>幂等性问题。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">今天我们就针对这两个问题来进行分析。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">互斥性问题</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">先看两个常见的例子：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">例1：</strong>某服务记录关键数据X，当前值为100。A请求需要将X增加200；同时，B请求需要将X减100。<br style=\"padding: 0px; margin: 0px;\"/>在理想的情况下，A先读取到X=100，然后X增加200，最后写入X=300。B请求接着从读取X=300，减少100，最后写入X=200。<br style=\"padding: 0px; margin: 0px;\"/>然而在真实情况下，如果不做任何处理，则可能会出现：A和B同时读取到X=100；A写入之前B读取到X；B比A先写入等等情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">例2：</strong>某服务提供一组任务，A请求随机从任务组中获取一个任务；B请求随机从任务组中获取一个任务。<br style=\"padding: 0px; margin: 0px;\"/>在理想的情况下，A从任务组中挑选一个任务，任务组删除该任务，B从剩下的的任务中再挑一个，任务组删除该任务。<br style=\"padding: 0px; margin: 0px;\"/>同样的，在真实情况下，如果不做任何处理，可能会出现A和B挑中了同一个任务的情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上的两个例子，都存在操作互斥性的问题。互斥性问题用通俗的话来讲，就是对共享资源的抢占问题。如果不同的请求对同一个或者同一组资源读取并修改时，无法保证按序执行，无法保证一个操作的原子性，那么就很有可能会出现预期外的情况。因此操作的互斥性问题，也可以理解为一个需要保证时序性、原子性的问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在传统的基于数据库的架构中，对于数据的抢占问题往往是通过数据库事务（ACID）来保证的。在分布式环境中，出于对性能以及一致性敏感度的要求，使得分布式锁成为了一种比较常见而高效的解决方案。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事实上，操作互斥性问题也并非分布式环境所独有，在传统的多线程、多进程情况下已经有了很好的解决方案。因此在研究分布式锁之前，我们先来分析下这两种情况的解决方案，以期能够对分布式锁的解决方案提供一些实现思路。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">多线程环境解决方案及原理</h2><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">解决方案</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">《Thinking in Java》书中写到：</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">基本上所有的并发模式在解决线程冲突问题的时候，都是采用序列化访问共享资源的方案。</p></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在多线程环境中，线程之间因为公用一些存储空间，冲突问题时有发生。解决冲突问题最普遍的方式就是用互斥锁把该资源或对该资源的操作保护起来。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Java JDK中提供了两种互斥锁Lock和synchronized。不同的线程之间对同一资源进行抢占，该资源通常表现为某个类的普通成员变量。因此，利用ReentrantLock或者synchronized将共享的变量及其操作锁住，即可基本解决资源抢占的问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面来简单聊一聊两者的实现原理。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">原理</h3><h4 id=\"reentrantlock\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">ReentrantLock</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ReentrantLock主要利用CAS+CLH队列来实现。它支持公平锁和非公平锁，两者的实现类似。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>CAS：Compare and Swap，比较并交换。CAS有3个操作数：内存值V、预期值A、要修改的新值B。当且仅当预期值A和内存值V相同时，将内存值V修改为B，否则什么都不做。该操作是一个原子操作，被广泛的应用在Java的底层实现中。在Java中，CAS主要是由sun.misc.Unsafe这个类通过JNI调用CPU底层指令实现。</li><li>CLH队列：带头结点的双向非循环链表(如下图所示)：</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/distributed-system-mutually-exclusive-idempotence-cerberus-gtis/clh_queue.png\" alt=\"CLH队列\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ReentrantLock的基本实现可以概括为：先通过CAS尝试获取锁。如果此时已经有线程占据了锁，那就加入CLH队列并且被挂起。当锁被释放之后，排在CLH队列队首的线程会被唤醒，然后CAS再次尝试获取锁。在这个时候，如果：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>非公平锁：如果同时还有另一个线程进来尝试获取，那么有可能会让这个线程抢先获取；</li><li>公平锁：如果同时还有另一个线程进来尝试获取，当它发现自己不是在队首的话，就会排到队尾，由队首的线程获取到锁。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面分析下两个片段：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"Java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">nonfairTryAcquire</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">int</span> acquires)</span> </span>{ &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> Thread current = Thread.currentThread(); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">int</span> c = getState(); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (c == <span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>) { &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (compareAndSetState(<span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>, acquires)) {\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;setExclusiveOwnerThread(current); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">else</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (current == getExclusiveOwnerThread()) { &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">int</span> nextc = c + acquires; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (nextc &lt; <span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>) <span class=\"comment\" style=\"padding: 0px; margin: 0px;\">// overflow</span>\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">throw</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">new</span> Error(<span class=\"string\" style=\"padding: 0px; margin: 0px;\">&quot;Maximum lock count exceeded&quot;</span>);\r\n &nbsp; &nbsp; &nbsp; &nbsp;setState(nextc); &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">false</span>;\r\n}</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在尝试获取锁的时候，会先调用上面的方法。如果状态为0，则表明此时无人占有锁。此时尝试进行set，一旦成功，则成功占有锁。如果状态不为0，再判断是否是当前线程获取到锁。如果是的话，将状态+1，因为此时就是当前线程，所以不用CAS。这也就是可重入锁的实现原理。</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"Java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">acquireQueued</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> Node node, <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">int</span> arg)</span> </span>{ &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> failed = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">try</span> { &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> interrupted = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">false</span>; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">for</span> (;;) { &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> Node p = node.predecessor(); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (p == head &amp;&amp; tryAcquire(arg)) {\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;setHead(node);\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;p.next = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>; <span class=\"comment\" style=\"padding: 0px; margin: 0px;\">// help GC</span>\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;failed = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">false</span>; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> interrupted;\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;parkAndCheckInterrupt())\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;interrupted = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n &nbsp; &nbsp;} <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">finally</span> { &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (failed)\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cancelAcquire(node);\r\n &nbsp; &nbsp;}\r\n}<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">private</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">parkAndCheckInterrupt</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">()</span> </span>{\r\n &nbsp; &nbsp;LockSupport.park(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">this</span>); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> Thread.interrupted();\r\n}</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">该方法是在尝试获取锁失败加入CHL队尾之后，如果发现前序节点是head，则CAS再尝试获取一次。否则，则会根据前序节点的状态判断是否需要阻塞。如果需要阻塞，则调用LockSupport的park方法阻塞该线程。</p><h4 id=\"synchronized\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">synchronized</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在Java语言中存在两种内建的synchronized语法：synchronized语句、synchronized方法。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>synchronized语句：当源代码被编译成字节码的时候，会在同步块的入口位置和退出位置分别插入monitorenter和monitorexit字节码指令;</li><li>synchronized方法：在Class文件的方法表中将该方法的access_flags字段中的synchronized标志位置1。这个在specification中没有明确说明。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在Java虚拟机的specification中，有关于monitorenter和monitorexit字节码指令的详细描述：<a href=\"http://docs.oracle.com/Javase/specs/jvms/se7/html/jvms-6.html#jvms-6.5.monitorenter\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">http://docs.oracle.com/Javase/specs/jvms/se7/html/jvms-6.html#jvms-6.5.monitorenter</a>&nbsp;。</p><h5 id=\"monitorenter\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">monitorenter</h5><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">The objectref must be of type reference.<br style=\"padding: 0px; margin: 0px;\"/>Each object is associated with a monitor. A monitor is locked if and only if it has an owner. The thread that executes monitorenter attempts to gain ownership of the monitor associated with objectref, as follows:</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>If the entry count of the monitor associated with objectref is zero, the thread enters the monitor and sets its entry count to one. The thread is then the owner of the monitor.</li><li>If the thread already owns the monitor associated with objectref, it reenters the monitor, incrementing its entry count.</li><li>If another thread already owns the monitor associated with objectref, the thread blocks until the monitor&#39;s entry count is zero, then tries again to gain ownership.</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">每个对象都有一个锁，也就是监视器（monitor）。当monitor被占有时就表示它被锁定。线程执行monitorenter指令时尝试获取对象所对应的monitor的所有权，过程如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>如果monitor的进入数为0，则该线程进入monitor，然后将进入数设置为1，该线程即为monitor的所有者;</li><li>如果线程已经拥有了该monitor，只是重新进入，则进入monitor的进入数加1;</li><li>如果其他线程已经占用了monitor，则该线程进入阻塞状态，直到monitor的进入数为0，再重新尝试获取monitor的所有权。</li></ul><h5 id=\"monitorexit\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">monitorexit</h5><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">The objectref must be of type reference.<br style=\"padding: 0px; margin: 0px;\"/>The thread that executes monitorexit must be the owner of the monitor associated with the instance referenced by objectref.<br style=\"padding: 0px; margin: 0px;\"/>The thread decrements the entry count of the monitor associated with objectref. If as a result the value of the entry count is zero, the thread exits the monitor and is no longer its owner. Other threads that are blocking to enter the monitor are allowed to attempt to do so.</p></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">执行monitorexit的线程必须是相应的monitor的所有者。<br style=\"padding: 0px; margin: 0px;\"/>指令执行时，monitor的进入数减1，如果减1后进入数为0，那线程退出monitor，不再是这个monitor的所有者。其他被这个monitor阻塞的线程可以尝试去获取这个monitor的所有权。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在JDK1.6及其之前的版本中monitorenter和monitorexit字节码依赖于底层的操作系统的Mutex Lock来实现的，但是由于使用Mutex Lock需要将当前线程挂起并从用户态切换到内核态来执行，这种切换的代价是非常昂贵的。然而在现实中的大部分情况下，同步方法是运行在单线程环境（无锁竞争环境）。如果每次都调用Mutex Lock将严重的影响程序的性能。因此在JDK 1.6之后的版本中对锁的实现做了大量的优化，这些优化在很大程度上减少或避免了Mutex Lock的使用。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">多进程的解决方案</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在多道程序系统中存在许多进程，它们共享各种资源，然而有很多资源一次只能供一个进程使用，这便是临界资源。多进程中的临界资源大致上可以分为两类，一类是物理上的真实资源，如打印机；一类是硬盘或内存中的共享数据，如共享内存等。而进程内互斥访问临界资源的代码被称为临界区。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对临界资源的互斥访问，JVM层面的锁就已经失去效力了。在多进程的情况下，主要还是利用操作系统层面的进程间通信原理来解决临界资源的抢占问题。比较常见的一种方法便是使用信号量（Semaphores）。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">信号量在POSIX标准下有两种，分别为有名信号量和无名信号量。无名信号量通常保存在共享内存中，而有名信号量是与一个特定的文件名称相关联。信号量是一个整数变量，有计数信号量和二值信号量两种。对信号量的操作，主要是P操作（wait）和V操作（signal）。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>P操作：先检查信号量的大小，若值大于零，则将信号量减1，同时进程获得共享资源的访问权限，继续执行；若小于或者等于零，则该进程被阻塞后，进入等待队列。</li><li>V操作：该操作将信号量的值加1，如果有进程阻塞着等待该信号量，那么其中一个进程将被唤醒。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">举个例子，设信号量为1，当一个进程A在进入临界区之前，先进行P操作。发现值大于零，那么就将信号量减为0，进入临界区执行。此时，若另一个进程B也要进去临界区，进行P操作，发现信号量等于0，则会被阻塞。当进程A退出临界区时，会进行V操作，将信号量的值加1，并唤醒阻塞的进程B。此时B就可以进入临界区了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这种方式，其实和多线程环境下的加解锁非常类似。因此用信号量处理临界资源抢占，也可以简单地理解为对临界区进行加锁。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过上面的一些了解，我们可以概括出解决互斥性问题，即资源抢占的基本方式为：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">对共享资源的操作前后（进入退出临界区）加解锁，保证不同线程或进程可以互斥有序的操作资源。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">加解锁方式，有显式的加解锁，如ReentrantLock或信号量；也有隐式的加解锁，如synchronized。那么在分布式环境中，为了保证不同JVM不同主机间不会出现资源抢占，那么同样只要对临界区加解锁就可以了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">然而在多线程和多进程中，锁已经有比较完善的实现，直接使用即可。但是在分布式环境下，就需要我们自己来实现分布式锁。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式环境下的解决方案——分布式锁</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先，我们来看看分布式锁的基本条件。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式锁条件</h3><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">基本条件</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">再回顾下多线程和多进程环境下的锁，可以发现锁的实现有很多共通之处，它们都需要满足一些最基本的条件：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>需要有存储锁的空间，并且锁的空间是可以访问到的。</li><li>锁需要被唯一标识。</li><li>锁要有至少两种状态。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">仔细分析这三个条件：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>存储空间</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">锁是一个抽象的概念，锁的实现，需要依存于一个可以存储锁的空间。在多线程中是内存，在多进程中是内存或者磁盘。更重要的是，这个空间是可以被访问到的。多线程中，不同的线程都可以访问到堆中的成员变量；在多进程中，不同的进程可以访问到共享内存中的数据或者存储在磁盘中的文件。但是在分布式环境中，不同的主机很难访问对方的内存或磁盘。这就需要一个都能访问到的外部空间来作为存储空间。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最普遍的外部存储空间就是数据库了，事实上也确实有基于数据库做分布式锁（行锁、version乐观锁），如quartz集群架构中就有所使用。除此以外，还有各式缓存如Redis、Tair、Memcached、Mongodb，当然还有专门的分布式协调服务Zookeeper，甚至是另一台主机。只要可以存储数据、锁在其中可以被多主机访问到，那就可以作为分布式锁的存储空间。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>唯一标识</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">不同的共享资源，必然需要用不同的锁进行保护，因此相应的锁必须有唯一的标识。在多线程环境中，锁可以是一个对象，那么对这个对象的引用便是这个唯一标识。多进程环境中，信号量在共享内存中也是由引用来作为唯一的标识。但是如果不在内存中，失去了对锁的引用，如何唯一标识它呢？上文提到的有名信号量，便是用硬盘中的文件名作为唯一标识。因此，在分布式环境中，只要给这个锁设定一个名称，并且保证这个名称是全局唯一的，那么就可以作为唯一标识。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>至少两种状态</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了给临界区加锁和解锁，需要存储两种不同的状态。如ReentrantLock中的status，0表示没有线程竞争，大于0表示有线程竞争；信号量大于0表示可以进入临界区，小于等于0则表示需要被阻塞。因此只要在分布式环境中，锁的状态有两种或以上：如有锁、没锁；存在、不存在等等，均可以实现。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">有了这三个条件，基本就可以实现一个简单的分布式锁了。下面以数据库为例，实现一个简单的分布式锁：<br style=\"padding: 0px; margin: 0px;\"/>数据库表，字段为锁的ID（唯一标识），锁的状态（0表示没有被锁，1表示被锁）。<br style=\"padding: 0px; margin: 0px;\"/>伪代码为：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"Java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">lock = mysql.get(id);<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">while</span>(lock.status == <span class=\"number\" style=\"padding: 0px; margin: 0px;\">1</span>) {\r\n &nbsp; &nbsp;sleep(<span class=\"number\" style=\"padding: 0px; margin: 0px;\">100</span>);\r\n}\r\nmysql.update(lock.status = <span class=\"number\" style=\"padding: 0px; margin: 0px;\">1</span>);\r\ndoSomething();\r\nmysql.update(lock.status = <span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>);</code></pre><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">问题</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上的方式即可以实现一个粗糙的分布式锁，但是这样的实现，有没有什么问题呢？</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><p style=\"padding: 0px; margin-top: 0px; margin-bottom: 0px; font-size: 1em; word-wrap: break-word;\">问题1：锁状态判断原子性无法保证<br style=\"padding: 0px; margin: 0px;\"/>从读取锁的状态，到判断该状态是否为被锁，需要经历两步操作。如果不能保证这两步的原子性，就可能导致不止一个请求获取到了锁，这显然是不行的。因此，我们需要保证锁状态判断的原子性。</p></li><li><p style=\"padding: 0px; margin-top: 0px; margin-bottom: 0px; font-size: 1em; word-wrap: break-word;\">问题2：网络断开或主机宕机，锁状态无法清除<br style=\"padding: 0px; margin: 0px;\"/>假设在主机已经获取到锁的情况下，突然出现了网络断开或者主机宕机，如果不做任何处理该锁将仍然处于被锁定的状态。那么之后所有的请求都无法再成功抢占到这个锁。因此，我们需要在持有锁的主机宕机或者网络断开的时候，及时的释放掉这把锁。</p></li><li><p style=\"padding: 0px; margin-top: 0px; margin-bottom: 0px; font-size: 1em; word-wrap: break-word;\">问题3：无法保证释放的是自己上锁的那把锁<br style=\"padding: 0px; margin: 0px;\"/>在解决了问题2的情况下再设想一下，假设持有锁的主机A在临界区遇到网络抖动导致网络断开，分布式锁及时的释放掉了这把锁。之后，另一个主机B占有了这把锁，但是此时主机A网络恢复，退出临界区时解锁。由于都是同一把锁，所以A就会将B的锁解开。此时如果有第三个主机尝试抢占这把锁，也将会成功获得。因此，我们需要在解锁时，确定自己解的这个锁正是自己锁上的。</p></li></ul><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">进阶条件</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果分布式锁的实现，还能再解决上面的三个问题，那么就可以算是一个相对完整的分布式锁了。然而，在实际的系统环境中，还会对分布式锁有更高级的要求。</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>可重入：线程中的可重入，指的是外层函数获得锁之后，内层也可以获得锁，ReentrantLock和synchronized都是可重入锁；衍生到分布式环境中，一般仍然指的是线程的可重入，在绝大多数分布式环境中，都要求分布式锁是可重入的。</li><li>惊群效应（Herd Effect）：在分布式锁中，惊群效应指的是，在有多个请求等待获取锁的时候，一旦占有锁的线程释放之后，如果所有等待的方都同时被唤醒，尝试抢占锁。但是这样的情况会造成比较大的开销，那么在实现分布式锁的时候，应该尽量避免惊群效应的产生。</li><li>公平锁和非公平锁：不同的需求，可能需要不同的分布式锁。非公平锁普遍比公平锁开销小。但是业务需求如果必须要锁的竞争者按顺序获得锁，那么就需要实现公平锁。</li><li>阻塞锁和自旋锁：针对不同的使用场景，阻塞锁和自旋锁的效率也会有所不同。阻塞锁会有上下文切换，如果并发量比较高且临界区的操作耗时比较短，那么造成的性能开销就比较大了。但是如果临界区操作耗时比较长，一直保持自旋，也会对CPU造成更大的负荷。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">保留以上所有问题和条件，我们接下来看一些比较典型的实现方案。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">典型实现</h3><h4 id=\"zookeeper-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">ZooKeeper的实现</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ZooKeeper（以下简称“ZK”）中有一种节点叫做顺序节点，假如我们在/lock/目录下创建3个节点，ZK集群会按照发起创建的顺序来创建节点，节点分别为/lock/0000000001、/lock/0000000002、/lock/0000000003。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ZK中还有一种名为临时节点的节点，临时节点由某个客户端创建，当客户端与ZK集群断开连接，则该节点自动被删除。EPHEMERAL_SEQUENTIAL为临时顺序节点。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据ZK中节点是否存在，可以作为分布式锁的锁状态，以此来实现一个分布式锁，下面是分布式锁的基本逻辑：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>客户端调用create()方法创建名为“/dlm-locks/lockname/lock-”的临时顺序节点。</li><li>客户端调用getChildren(“lockname”)方法来获取所有已经创建的子节点。</li><li>客户端获取到所有子节点path之后，如果发现自己在步骤1中创建的节点是所有节点中序号最小的，那么就认为这个客户端获得了锁。</li><li>如果创建的节点不是所有节点中需要最小的，那么则监视比自己创建节点的序列号小的最大的节点，进入等待。直到下次监视的子节点变更的时候，再进行子节点的获取，判断是否获取锁。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">释放锁的过程相对比较简单，就是删除自己创建的那个子节点即可，不过也仍需要考虑删除节点失败等异常情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">开源的基于ZK的Menagerie的源码就是一个典型的例子：<a href=\"https://github.com/sfines/menagerie\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">https://github.com/sfines/menagerie</a>&nbsp;。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Menagerie中的lock首先实现了可重入锁，利用ThreadLocal存储进入的次数，每次加锁次数加1，每次解锁次数减1。如果判断出是当前线程持有锁，就不用走获取锁的流程。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过tryAcquireDistributed方法尝试获取锁，循环判断前序节点是否存在，如果存在则监视该节点并且返回获取失败。如果前序节点不存在，则再判断更前一个节点。如果判断出自己是第一个节点，则返回获取成功。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了在别的线程占有锁的时候阻塞，代码中使用JUC的condition来完成。如果获取尝试锁失败，则进入等待且放弃localLock，等待前序节点唤醒。而localLock是一个本地的公平锁，使得condition可以公平的进行唤醒，配合循环判断前序节点，实现了一个公平锁。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这种实现方式非常类似于ReentrantLock的CHL队列，而且zk的临时节点可以直接避免网络断开或主机宕机，锁状态无法清除的问题，顺序节点可以避免惊群效应。这些特性都使得利用ZK实现分布式锁成为了最普遍的方案之一。</p><h4 id=\"redis-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Redis的实现</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Redis的分布式缓存特性使其成为了分布式锁的一种基础实现。通过Redis中是否存在某个锁ID，则可以判断是否上锁。为了保证判断锁是否存在的原子性，保证只有一个线程获取同一把锁，Redis有<strong style=\"padding: 0px; margin: 0px;\">SETNX</strong>（即SET if Not<br style=\"padding: 0px; margin: 0px;\"/>eXists）和<strong style=\"padding: 0px; margin: 0px;\">GETSET</strong>（先写新值，返回旧值，原子性操作，可以用于分辨是不是首次操作）操作。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了防止主机宕机或网络断开之后的死锁，Redis没有ZK那种天然的实现方式，只能依赖设置超时时间来规避。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以下是一种比较普遍但不太完善的Redis分布式锁的实现步骤（与下图一一对应）：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>线程A发送SETNX lock.orderid&nbsp;<current 1=\"\" unix=\"\" time=\"\" lock=\"\" timeout=\"\" style=\"padding: 0px; margin: 0px;\">尝试获得锁，如果锁不存在，则set并获得锁。</current></li><li>如果锁存在，则再判断锁的值（时间戳）是否大于当前时间，如果没有超时，则等待一下再重试。</li><li>如果已经超时了，在用GETSET lock.{orderid}&nbsp;<current 1=\"\" unix=\"\" time=\"\" lock=\"\" timeout=\"\" style=\"padding: 0px; margin: 0px;\">来尝试获取锁，如果这时候拿到的时间戳仍旧超时，则说明已经获得锁了。</current></li><li>如果在此之前，另一个线程C快一步执行了上面的操作，那么A拿到的时间戳是个未超时的值，这时A没有如期获得锁，需要再次等待或重试。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/distributed-system-mutually-exclusive-idempotence-cerberus-gtis/redis_lock.png\" alt=\"redis分布式锁实现\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">该实现还有一个需要考虑的问题是全局时钟问题，由于生产环境主机时钟不能保证完全同步，对时间戳的判断也可能会产生误差。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上是Redis的一种常见的实现方式，除此以外还可以用SETNX+EXPIRE来实现。Redisson是一个官方推荐的Redis客户端并且实现了很多分布式的功能。它的分布式锁就提供了一种更完善的解决方案，源码：<a href=\"https://github.com/mrniko/redisson\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">https://github.com/mrniko/redisson</a>&nbsp;。</p><h4 id=\"tair-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Tair的实现</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Tair和Redis的实现类似，Tair客户端封装了一个expireLock的方法：通过锁状态和过期时间戳来共同判断锁是否存在，只有锁已经存在且没有过期的状态才判定为有锁状态。在有锁状态下，不能加锁，能通过大于或等于过期时间的时间戳进行解锁。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采用这样的方式，可以不用在Value中存储时间戳，并且保证了判断是否有锁的原子性。更值得注意的是，由于超时时间是由Tair判断，所以避免了不同主机时钟不一致的情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上的几种分布式锁实现方式，都是比较常见且有些已经在生产环境中应用。随着应用环境越来越复杂，这些实现可能仍然会遇到一些挑战。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">强依赖于外部组件</strong>：分布式锁的实现都需要依赖于外部数据存储如ZK、Redis等等，因此一旦这些外部组件出现故障，那么分布式锁就不可用了。</li><li><strong style=\"padding: 0px; margin: 0px;\">无法完全满足需求</strong>：不同分布式锁的实现，都有相应的特点，对于一些需求并不能很好的满足，如实现公平锁、给等待锁加超时时间等等。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">基于以上问题，结合多种实现方式，我们开发了Cerberus（得名自希腊神话里守卫地狱的猛犬），致力于提供灵活可靠的分布式锁。</p><h3 id=\"cerberus-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Cerberus分布式锁</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Cerberus有以下几个特点。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">特点一：一套接口多种引擎</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Cerberus分布式锁使用了多种引擎实现方式（Tair、ZK、未来支持Redis），支持使用方自主选择所需的一种或多种引擎。这样可以结合引擎特点，选择符合实际业务需求和系统架构的方式。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Cerberus分布式锁将不同引擎的接口抽象为一套，屏蔽了不同引擎的实现细节。使得使用方可以专注于业务逻辑，也可以任意选择并切换引擎而不必更改任何的业务代码。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><span style=\"color: rgb(42, 41, 53); font-size: 1.16em; line-height: 1.5em;\"><br/>特点二：使用灵活、学习成本低</span><br/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面是Cerberus的lock方法，这些方法和JUC的ReentrantLock的方式保持一致，使用非常灵活且不需要额外的学习时间。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>void lock();<br style=\"padding: 0px; margin: 0px;\"/>获取锁，如果锁被占用，将禁用当前线程，并且在获得锁之前，该线程将一直处于阻塞状态。</li><li>boolean tryLock();<br style=\"padding: 0px; margin: 0px;\"/>仅在调用时锁为空闲状态才获取该锁。<br style=\"padding: 0px; margin: 0px;\"/>如果锁可用，则获取锁，并立即返回值 true。如果锁不可用，则此方法将立即返回值 false。</li><li>boolean tryLock(long time, TimeUnit unit) throws InterruptedException;<br style=\"padding: 0px; margin: 0px;\"/>如果锁在给定的等待时间内空闲，并且当前线程未被中断，则获取锁。<br style=\"padding: 0px; margin: 0px;\"/>如果在给定时间内锁可用，则获取锁，并立即返回值 true。如果在给定时间内锁一直不可用，则此方法将立即返回值false。</li><li>void lockInterruptibly() throws InterruptedException;<br style=\"padding: 0px; margin: 0px;\"/>获取锁，如果锁被占用，则一直等待直到线程被中断或者获取到锁。</li><li>void unlock();<br style=\"padding: 0px; margin: 0px;\"/>释放当前持有的锁。</li></ul><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">特点三：支持一键降级</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Cerberus提供了实时切换引擎的接口:</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>String switchEngine()<br style=\"padding: 0px; margin: 0px;\"/>转换分布式锁引擎，按配置的引擎的顺序循环转换。<br style=\"padding: 0px; margin: 0px;\"/>返回值：返回当前的engine名字，如：&quot;zk&quot;。</li><li>String switchEngine(String engineName)<br style=\"padding: 0px; margin: 0px;\"/>转换分布式锁引擎，切换为指定的引擎。<br style=\"padding: 0px; margin: 0px;\"/>参数：engineName - 引擎的名字，同配置bean的名字，&quot;zk&quot;/&quot;tair&quot;。<br style=\"padding: 0px; margin: 0px;\"/>返回值：返回当前的engine名字，如：&quot;zk&quot;。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">当使用方选择了两种引擎，平时分布式锁会工作在主引擎上。一旦所依赖的主引擎出现故障，那么使用方可以通过自动或者手动方式调用该切换引擎接口，平滑的将分布式锁切换到另一个引擎上以将风险降到最低。自动切换方式可以利用Hystrix实现。手动切换推荐的一个方案则是使用美团点评基于Zookeeper的基础组件MCC，通过监听MCC配置项更改，来达到手动将分布式系统所有主机同步切换引擎的目的。需要注意的是，切换引擎目前并不会迁移原引擎已有的锁。这样做的目的是出于必要性、系统复杂度和可靠性的综合考虑。在实际情况下，引擎故障到切换引擎，尤其是手动切换引擎的时间，要远大于分布式锁的存活时间。作为较轻量级的Cerberus来说，迁移锁会带来不必要的开销以及较高的系统复杂度。鉴于此，如果想要保证在引擎故障后的绝对可靠，那么则需要结合其他方案来进行处理。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">除此以外，Cerberus还提供了内置公用集群，免去搭建和配置集群的烦恼。Cerberus也有一套完善的应用授权机制，以此防止业务方未经评估使用，对集群造成影响。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前，Cerberus分布式锁已经持续迭代了8个版本，先后在美团点评多个项目中稳定运行。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">幂等性问题</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">所谓幂等，简单地说，就是对接口的多次调用所产生的结果和调用一次是一致的。扩展一下，这里的接口，可以理解为对外发布的HTTP接口或者Thrift接口，也可以是接收消息的内部接口，甚至是一个内部方法或操作。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">那么我们为什么需要接口具有幂等性呢？设想一下以下情形：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>在App中下订单的时候，点击确认之后，没反应，就又点击了几次。在这种情况下，如果无法保证该接口的幂等性，那么将会出现重复下单问题。</li><li>在接收消息的时候，消息推送重复。如果处理消息的接口无法保证幂等，那么重复消费消息产生的影响可能会非常大。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在分布式环境中，网络环境更加复杂，因前端操作抖动、网络故障、消息重复、响应速度慢等原因，对接口的重复调用概率会比集中式环境下更大，尤其是重复消息在分布式环境中很难避免。Tyler Treat也在<a href=\"http://bravenewgeek.com/you-cannot-have-exactly-once-delivery/\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">《You Cannot Have Exactly-Once Delivery》</a>一文中提到：</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">Within the context of a distributed system, you cannot have exactly-once message delivery.</p></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式环境中，有些接口是天然保证幂等性的，如查询操作。有些对数据的修改是一个常量，并且无其他记录和操作，那也可以说是具有幂等性的。其他情况下，所有涉及对数据的修改、状态的变更就都有必要防止重复性操作的发生。通过间接的实现接口的幂等性来防止重复操作所带来的影响，成为了一种有效的解决方案。</p><h2 id=\"gtis\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">GTIS</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">GTIS就是这样的一个解决方案。它是一个轻量的重复操作关卡系统，它能够确保在分布式环境中操作的唯一性。我们可以用它来间接保证每个操作的幂等性。它具有如下特点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>高效：低延时，单个方法平均响应时间在2ms内，几乎不会对业务造成影响；</li><li>可靠：提供降级策略，以应对外部存储引擎故障所造成的影响；提供应用鉴权，提供集群配置自定义，降低不同业务之间的干扰；</li><li>简单：接入简捷方便，学习成本低。只需简单的配置，在代码中进行两个方法的调用即可完成所有的接入工作；</li><li>灵活：提供多种接口参数、使用策略，以满足不同的业务需求。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实现原理</h3><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">基本原理</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">GTIS的实现思路是将每一个不同的业务操作赋予其唯一性。这个唯一性是通过对不同操作所对应的唯一的内容特性生成一个唯一的全局ID来实现的。基本原则为：相同的操作生成相同的全局ID；不同的操作生成不同的全局ID。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">生成的全局ID需要存储在外部存储引擎中，数据库、Redis亦或是Tair等等均可实现。考虑到Tair天生分布式和持久化的优势，目前的GTIS存储在Tair中。其相应的key和value如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>key：将对于不同的业务，采用APP_KEY+业务操作内容特性生成一个唯一标识trans_contents。然后对唯一标识进行加密生成全局ID作为Key。</li><li>value：current_timestamp + trans_contents，current_timestamp用于标识当前的操作线程。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">判断是否重复，主要利用Tair的SETNX方法，如果原来没有值则set且返回成功，如果已经有值则返回失败。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">内部流程</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">GTIS的内部实现流程为：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>业务方在业务操作之前，生成一个能够唯一标识该操作的transContents，传入GTIS；</li><li>GTIS根据传入的transContents，用MD5生成全局ID；</li><li>GTIS将全局ID作为key，current_timestamp+transContents作为value放入Tair进行setNx，将结果返回给业务方；</li><li>业务方根据返回结果确定能否开始进行业务操作；</li><li>若能，开始进行操作；若不能，则结束当前操作；</li><li>业务方将操作结果和请求结果传入GTIS，系统进行一次请求结果的检验；</li><li>若该次操作成功，GTIS根据key取出value值，跟传入的返回结果进行比对，如果两者相等，则将该全局ID的过期时间改为较长时间；</li><li>GTIS返回最终结果。</li></ol><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实现难点</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">GTIS的实现难点在于如何保证其判断重复的可靠性。由于分布式环境的复杂度和业务操作的不确定性，在上一章节分布式锁的实现中考虑的网络断开或主机宕机等等问题，同样需要在GTIS中设法解决。这里列出几个典型的场景：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>如果操作执行失败，理想的情况应该是另一个相同的操作可以立即进行。因此，需要对业务方的操作结果进行判断，如果操作失败，那么就需要立即删除该全局ID；</li><li>如果操作超时或主机宕机，当前的操作无法告知GTIS操作是否成功。那么我们必须引入超时机制，一旦长时间获取不到业务方的操作反馈，那么也需要该全局ID失效；</li><li>结合上两个场景，既然全局ID会失效并且可能会被删除，那就需要保证删除的不是另一个相同操作的全局ID。这就需要将特殊的标识记录下来，并由此来判断。这里所用的标识为当前时间戳。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可以看到，解决这些问题的思路，也和上一章节中的实现有很多类似的地方。除此以外，还有更多的场景需要考虑和解决，所有分支流程如下:<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/distributed-system-mutually-exclusive-idempotence-cerberus-gtis/gtis_principle.jpg\" alt=\"GTIS原理\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">使用说明</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">使用时，业务方只需要在操作的前后调用GTIS的前置方法和后置方法，如下图所示。如果前置方法返回可进行操作，则说明此时无重复操作，可以进行。否则则直接结束操作。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/distributed-system-mutually-exclusive-idempotence-cerberus-gtis/gtis_use.png\" alt=\"redis分布式锁实现\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">使用方需要考虑的主要是下面两个参数：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>空间全局性：业务方输入的能够标志操作唯一性的内容特性，可以是唯一性的String类型的ID，也可以是map、POJO等形式。如订单ID等</li><li>时间全局性：确定在多长时间内不允许重复，1小时内还是一个月内亦或是永久。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">此外，GTIS还提供了不同的故障处理策略和重试机制，以此来降低外部存储引擎异常对系统造成的影响。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前，GTIS已经持续迭代了7个版本，距离第一个版本有近1年之久，先后在美团点评多个项目中稳定运行。</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('89', '大促活动前团购系统流量预算和容量评估', '本文整理自美团点评技术沙龙第11期：移动端测试分享。美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号“美团点评技术团队”。本期沙龙首', '2016-10-27 19:20:05', '0', '0', '<p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">本文整理自美团点评技术沙龙第11期：移动端测试分享。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E6%B2%99%E9%BE%99%E7%8E%B0%E5%9C%BA.jpeg\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号“美团点评技术团队”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">本期沙龙首次在上海举行，包括四场讲座：一直被呼吁开源的测试工具Spider；移动端用户体验数据如何量化；大促活动前团购系统如何评估流量和容量；腾讯P图App的测试。其他几场讲座的图文实录会陆续发表，请继续关注。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">引言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">O2O行业高速发展，团购业务的流量和用户数也有了不止一个数量级的飞跃，单日交易额数以亿计，日均订单量也到了百万量级。目前团购产品形态稳定，产品运营会策划各种大促活动，为业务带来更多的流量和用户，以提升交易额。给力的大促活动能为业务带来千万级的PV和百万级的购买用户数，大促活动的瞬时流量可能是平时流量的几十倍，这对我们的系统来说是一个不小的挑战。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_6.png\" alt=\"引言\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">概述</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这次分享的主要内容包括以下4个部分：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>介绍相关背景，包括大促活动的特点和团购系统架构的演进过程。</li><li>建立大促活动期间团购系统核心路径的流量模型，推算活动峰值流量。</li><li>分层评估系统容量时，如何制定压力测试策略、选择合适的测试环境。</li><li>分层评估系统容量时，执行压力测试过程中的工具选型、场景设计和数据准备。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.26.13.png\" alt=\"概述\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">背景介绍</h1><h3 id=\"1-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">1. 大促活动的特点</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大促活动的三个关键词：瞬时流量、热点团单和核心路径。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">瞬时流量</strong>：大促活动的一般形态是在活动日的某个时间节点（比如上午10点），开放一批0元抢购团单；这时大量用户会从H5活动页点击“免费吃”按钮（静态页面，用户会提前打开），跳转到Native团购详情页，给团购系统带来一个瞬间流量高峰。某次活动统计数据显示，瞬时高峰流量达到了平时流量的33倍。</li><li><strong style=\"padding: 0px; margin: 0px;\">热点团单</strong>：活动日上午10点开放的这批0元抢购团单，可以称之为是热点团单。</li><li><strong style=\"padding: 0px; margin: 0px;\">核心路径</strong>：活动高峰期大部分用户行为会集中在这些热点团单的购买流程上，而不是去搜索一个团单或者给团单写评价；这个热点团单的抢购流程就是大促活动的核心路径。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.27.32.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"2-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">2. 大促活动前的准备——扩容</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">面对这个瞬时流量高峰，首先要回答的问题是系统能不能扛住；如果抗不住的话，最有效提升系统容量的方式是进行扩容。假设在系统没有瓶颈、可水平扩展的前提下，单个应用的扩容可以使用以下公式：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_9.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了制定扩容计划，我们需要知道分子“活动峰值流量”和分母“单机容量”。大促活动准备期间，运营会根据活动预算、Push发送量和Push转化率等数据，推算出活动页的PV和UV；根据往期活动的经验数据，推算出抢购或秒杀活动的用户点击量，以此数据作为系统的入口峰值访问量。有了入口峰值访问量，结合系统的流量模型，就可以推算出每个应用节点的活动峰值流量。通过对系统的压力测试，可以得出每个应用节点的单机容量极限值。</p><h3 id=\"3-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">3. 团购系统架构的演进</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在开始正式讲流量预算和容量评估之前，先介绍下团购系统架构的演进。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">早期的团单系统架构</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期的团购系统如下图所示，Web层和Service层都是单应用架构。Web层的团购MAPI应用，提供了包括团购首页、团购列表、购买流程、团购订单/券、退款流程等200多个接口（包括读接口和写接口），所有业务耦合在一起。Service层的团单服务也是类似的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_1.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对这样的系统架构做流量预算很简单，可以直接用运营同学给的入口峰值访问量做分子（活动峰值流量）即可。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">但是要获取分母（单机容量）是比较困难的事情。针对这样的架构，在线上或者线下做一次有效的压力测试成本比较高——如果通过线上引流的方式做压力测试，读流量和写流量必须区分开；如果在线下模拟搭建一套压力测试环境，依赖的服务较多，搭建环境成本高；另外业务耦合在一起，线下也比较难模拟线上的接口分布等情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据木桶短板理论，不需要压力测试也可以知道当时的团单系统性能不会很好。这样系统架构下，评估系统的容量的办法基本上只有拍脑袋。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8B%E5%8D%889.10.26.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8B%E5%8D%889.10.37.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">现在的团单系统架构</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">现在的团单系统架构有了比较大的改进。如下图所示，团单服务做了“拆弹项目”，复杂的团单服务按照业务领域拆分成了基础服务、价格服务、库存服务、属性导航服务等。从服务名称可以看出来，一个应用拆分成了多个应用，每个应用单独负责某个领域；缓存集群和团购数据库也按照业务领域做了拆分。随后，大而全的Web层MAPI应用也按照业务领域拆分成了团购详情应用、团购交易应用和个人中心应用。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_2.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">总结下的话，就是整体上逻辑耦合在一起的业务按微服务化拆分出来，每个服务独立专注的做一件事情。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面两张图可以比喻团购系统架构的演进。左图是早期的团购系统，业务混杂在一起，难以量化；右图是拆分之后的团购系统，分层架构清晰合理，这个时候对系统建立模型、量化分析变成了一件可行的事。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.29.41.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">活动流量预算</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">流量模型分析是流量预算的关键，只有清楚了系统的流量模型，才可能对系统每个节点的峰值流量做准确的评估。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">团购系统在不同的场景有不同的流量模型。如下图所示，左图是系统平时的流量模型，右图是大促时的流量模型，其中中间人最多的路径是大促活动核心路径的流量模型。下面会介绍如何针对这条核心路径建立流量模型。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_10.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大促活动时的业务核心路径是：用户首先访问H5活动页，点击“免费抢”按钮到达热点团购详情页，然后通过点击团购详情页的“立即抢购”按钮进入提交订单页，并最终完成支付流程。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.30.39.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这个是大促活动的业务核心路径对应的系统架构图，用户跳转到团购详情页时，客户端会向Web层的团购详情API应用请求数据，团购详情API应用再向聚合服务层发起请求，聚合服务层分别异步调用团单价格服务、团单库存服务、团单属性服务等基础服务，并将这些基础数据组装好返回给上层应用，最终返回数据到客户端，展示在用户的移动设备上。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_3.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据系统架构图，可以从上至下梳理调用关系链，建立核心路径的流量模型。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第一步：梳理活动页跳转到App Native页面的接口调用链。用户从活动页点击“免费吃”按钮进入团购详情页，会发起6个API接口请求。其中3个接口——团购基本信息接口，团购购买须知接口和团购适用商户接口——会对用户的购买决策起决定性作用，是团购详情页的核心路径。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">团购详情页下方还有三个非核心模块会发起3个接口请求，分别为本店其他团购接口、网友评价接口和团购推荐的接口，这几个模块可以给用户购买决策提供参考，但是不是必须的，在大促活动场景下是非核心路径。这些接口可以通过开关关闭（关闭非核心场景是一种有效的降级方案），下面的分析假设非核心路径接口开关关闭。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_5.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二步：梳理Web层接口之间的调用次数和调用顺序<br style=\"padding: 0px; margin: 0px;\"/>用户打开团购详情页时，客户端会先发起团购基础信息接口，再获取团购基本信息（如：标题、价格、销量等）之后，会异步发出其他5个模块的接口请求。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_4.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三步：通过代码分析和CAT调用堆栈分析，梳理Web层接口对下游服务的调用顺序和调用次数，汇总成对服务层各应用的调用倍数。（注：CAT是美团点评技术团队开源的实时监控平台，已在许多业界公司生产环境得到应用，详情参见<a href=\"https://github.com/dianping/cat\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">GitHub</a>）</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.31.19.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">假设团购详情页的PV是1，会发出3个API请求；除了团购商户API之外，团购基础信息API和团购详情API会分别调用团购基础服务1次，另外在大促的场景下会在创建订单和支付等场景对团购基础服务有5次调用，即总共会有7次的团购基础服务的调用。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过分析代码和调用堆栈，可以得知团购详情页的PV对团单价格服务和团单库存服务的调用次数也是1：7的关系。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_8.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这样我们可以得到大促活动核心路径的流量模型：假设详情页的流量单位为1，团购系统各个应用节点的流量构成如下表所示。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.31.47.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">同理，大促活动核心路径对缓存和DB的最大访问次数也可以分析出来。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.31.55.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这时可以根据运营给到的入口峰值流量数据，推算出大促活动时团购系统从上到下（Web层、服务层、缓存和数据持久层）每一个应用节点可能会达到的最高流量。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最终给到运维的会是这样一份扩容计划表。综上所述根据流量模型可以推算出系统每个应用节点的活动峰值流量以及需要提供的集群容量（活动峰值流量*余量系数）。另外系统当前机器数是已知的，那么要完成扩容计划表，下一步要做的事情是进行容量评估，即通过压力测试，评估系统每个应用节点的单机容量。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.17.09.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">系统容量评估</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">系统容量主要通过线上环境或者线下环境的压力测试来评估。首先会介绍压力测试策略的制定，大促活动期间压力测试的目的，以及压力测试环境的选择（重点介绍性能测试环境PTP）。然后通过实例介绍压力测试执行中的压测工具的选择、压测场景的设计和压测数据的准备。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8B%E5%8D%8811.31.00.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压力测试的目的</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大促活动准备期间的压力测试，与平时应用上线前的性能测试或负载测试的目的有所不同，平时性能测试的目的主要是查看系统各指标是否达到预期，以及在高并发下验证功能测正确性。大促活动准备期间的压力测试目的是找到系统针对混合场景的最大处理能力，具体有以下四个方面：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.17.34.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">压力测试这件事情没有最好只有更好，为了评估线上的系统容量，理想的压力测试方案是在线上环境做系统全链路的压测。但是线上全链路压测的时间、人力成本比较高（做一次线上全链路压测要参与或周知的人数要30+）。线上压测有一定风险，为了评估系统容量把线上服务压挂了是一件得不偿失的事情。另外，全链路线上压测可以发现系统的瓶颈，但是不能得到每个应用节点的单机容量。我们最终采用的压测方案基本原则是在保证压测数据有效性的基础上，做性价比最高的压力测试。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.17.45.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压力测试的环境</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在PTP环境出现之前，我们做压力测试主要在BETA环境、PPE环境或线上环境（BETA和PPE环境是我们用来做功能测试的两套线下测试环境），这三种环境都有些局限或风险，导致压力测试有效性不如人意。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">BETA环境</strong>：主要用作QA功能集成测试，服务和中间件部署完备（一般每个应用部署一台虚拟机），有专人维护，专门的BETA环境数据库</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>可靠性：硬件环境与线上差异较大，数据与线上差异较大</li><li>稳定性：被测服务和依赖服务容易被压挂，影响日常功能测试</li><li>易用性：一般用JMeter脚本，在本地执行压测</li><li>局限：只能评估单机容量，无法对集群进行压测</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">PPE环境</strong>：主要用作应用线上发布之前的功能验证</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>可靠性：硬件环境与线上差异较大，部分数据库定期同步线上数据库</li><li>稳定性：被测服务和依赖服务容易被压挂，影响应用上线前功能验证</li><li>易用性：一般用JMeter脚本，在本地执行压测</li><li>局限：只能评估单机容量，无法对集群进行压测</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">线上环境</strong></p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>可靠性：数据可靠，无环境差异，可以压测集群。</li><li>稳定性：线上被测服务或依赖服务可能被压挂。</li><li>易用性：需运维辅助操作，在线上缩减集群规模或者复制流量。</li><li>局限：风险高；时间人力成本高；不是所有类型的应用都适合。</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.17.55.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面重点介绍下我们做压力测试主要用到的PTP性能测试环境。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">PTP性能测试环境，实际上是一个平台+环境，包括了性能测试的环境搭建、测试执行和测试结果展示的整体功能。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.18.08.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">PTP性能测试环境与传统的性能测试环境有很大的区别。它是一个基于Docker的虚拟机器池，需要对某个应用做压力测试时，可以一键部署该被测应用；测试完成后可以释放清理环境，不需要专人维护一套完整的测试环境，从而解决了传统性能测试环境机器数量有限、维护成本高、资源利用率低等问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.18.19.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">PTP性能测试环境可以通过智能依赖和依赖回流的功能，把被测服务直接依赖和间接依赖的服务也部署起来。<br style=\"padding: 0px; margin: 0px;\"/>具体步骤如下图所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.18.48.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.19.02.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.19.13.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">另外PTP提供了配置虚拟机CPU核数和内存大小的功能，还提供了同步线上数据库表的功能，可以做到性能环境数据库和线上数据内容和量级保持一致。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">综上所述，PTP性能测试环境在数据可靠性、稳定性和易用性方面，解决了BETA环境、PPE环境或线上环境压测时存在的大部分问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_11.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面介绍下压力测试执行过程中的压测工具的选择、压测场景的设计和压测数据的准备。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8B%E5%8D%8811.32.06.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压测方法的选择</h3><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">线上压测方法——逐步减小集群规模</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过逐台摘机器，使得单台机器的访问量不断提升，来达到压力测试的目的。</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">优点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>应用无需读写接口分离。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">缺点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>逐个摘机器有风险。</li><li>对流量规模有要求，不能太小，否则压不到瓶颈。</li><li>需要运维人员的密切配合。</li></ul></blockquote><h4 id=\"-tcpcopy\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">线上压测方法——线上TCPCopy</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在集群中挑选A、B两台机器，A为被压机，B为施压机。<br style=\"padding: 0px; margin: 0px;\"/>将A配置一个泳道（机器不对外提供服务），通过TCPCopy将B的流量逐渐放大至A。</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">优点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>流量比例真实、风险小。</li><li>可以随时调整比例，模拟梯度加压。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">缺点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>要求被压的服务只能是纯读服务，不能有写接口，否则会带来脏数据</li><li>TCPCopy工具限制，放大40倍会挂掉，若线上流量太小，则需要首先摘掉部分机器以提高单机的QPS</li></ul></blockquote><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">线下压测方法</h4><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>PTP搭建性能测试环境</li><li>设计测试场景</li><li>准备测试脚本（JMeter）</li><li>准备测试数据</li><li>执行压力测试</li><li>测试结果分析</li></ul></blockquote><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压测场景的设计</h3><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例一</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对服务提供的接口的比例分布设计场景</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">例如：团购基础查询服务提供了两种查询方式：单个查询和批量查询</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>设计测试场景时需要考虑两种接口的比例分布</li><li>可以使用JMeter比例控制器来控制请求比例</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/percentage.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例二</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对批量接口参数的个数设计场景</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">例如：团购库存查询服务的批量接口参数个数</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>需要设计调用批量查询接口时传入的团单id个数。</li><li>可以通过线上日志统计“批量接口参数列表长度”分布。</li></ul></blockquote><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例三</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对对应用性能有影响的参数类型、逻辑分支设计场景</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">例如：团购销量查询服务区分品类</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>A品类团单要展示聚合销量、B品类团单要展示分城市销量。</li><li>不同的逻辑分支，查询不同的缓存和数据库。</li></ul></blockquote><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压测数据的构造</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_7.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例一 流量回放</h4><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\"><strong style=\"padding: 0px; margin: 0px;\">被测应用：</strong>团购详情Web应用（纯读服务）<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测环境：</strong>性能测试环境<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测数据：</strong>TCPDump复制线上流量在性能环境做回放<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测方法：</strong></p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>选择合适的时间段（流量不要太低）。</li><li>dump流量时间足够长，流量翻倍时数据离散度需满足要求。</li></ul></blockquote><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例二 日志回放</h4><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\"><strong style=\"padding: 0px; margin: 0px;\">被测应用：</strong>个人中心Web应用（读+写）<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测环境：</strong>性能测试环境<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测数据：</strong>Nginx Access Log<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测方法：</strong></p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>将最近通过App的访问Nginx Access Log进行分类（读、写）</li><li>线上到线下token的解析问题</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/nginx%E6%97%A5%E5%BF%97.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例三 人工构造数据</h4><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\"><strong style=\"padding: 0px; margin: 0px;\">被测应用：</strong>团购基础信息服务<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测环境：</strong>性能测试环境<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测数据：</strong>人工构造数据（csv文件）<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测方法：</strong></p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>人工构造的数据应模拟线上的缓存命中率</li><li>缓存命中率比线上环境偏低，需要进行缓存预热</li><li>缓存命中率比线上环境偏高，需要尽量模拟线上团单的离散程度</li></ul></blockquote><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压测结果的采集</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.21.00.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.21.08.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">总结</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在团购的一次大促活动前，我们会主要做这两件事情：首先会进行一个基于流量模型的流量预算，以获取扩容公式的分子——即从上到下评估流量；然后制定压力测试策略、执行压力测试、输出压力测试报告，对每个应用进行单机容量极限评估，以获取扩容公式的分母——即从下到上提供能力。最终的目的是为了保证大促期间核心用户的用户体验。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.21.43.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('90', '美团数据库运维自动化系统构建之路', '本文整理自美团点评技术沙龙第10期：数据库技术架构与实践。美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号“美团点评技术团队”。本次', '2016-10-27 19:20:31', '0', '0', '<p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">本文整理自美团点评技术沙龙第10期：数据库技术架构与实践。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号<strong style=\"padding: 0px; margin: 0px;\">“美团点评技术团队”。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">本次沙龙主要围绕数据库相关的主题，内容包括美团数据库自动化运维系统构建、点评侧MySQL自动化服务平台<a href=\"http://tech.meituan.com/tag/RDS\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">RDS</a>、美团数据库中间件、和小米高级DBA带来的Redis Cluster的大规模运维实践。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">讲师简介</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">宁龙，美团网高级DBA，现负责美团数据库自动化运维系统的架构和开发工作。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">目录</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">今天我主要分这几个部分讲：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>第一部分是美团在数据库自动化运维系统构建前的烦恼，DBA手动运维DB的时候遇到的各种问题；</li><li>第二个是我们在构数据库运维自动化系统过程中的一些坎坷和思考，这里我会说我们的1.0版系统，还有1.0版的系统为什么要到2.0版的，以及现在2.0版系统在线上的使用情况，在2.0版系统的基础上，我会给大家介绍三个典型的案例，可能大家平时会用到的；</li><li>最后说一下我们2.0版系统构建之后线上跑的效果，以及我们做的后期改进的计划，也可以说是3.0；</li><li>Q&amp;A环节。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_1.png\" alt=\"目录\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-dba\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建前的苦恼——一线运维DBA</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先说一下数据库运维自动化系统构建前，运维DBA都有哪些烦恼？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这是我们的一线运维DBA的小团，它每天需要对接很多的RD（Research&amp;Development 研发）的需求。从我们现在的系统统计来看，使用我们平台系统的RD大概是一千五六百人，我们的人数是RD人数的十分之一不到。我们每个DBA对接的RD需求还是非常多的。新业务的上线，RD需要申请新的数据库集群。随着业务的发展，比如：数据库的流量大了，需要拆分了，都需要DBA手动去做。第三个是SQL的审核和上线，SQL会不会有什么问题，可能他测试环境OK，但是到了线上会有各种各样的问题。第四个是变更、升级。第五个是备份，不然的话，RD把数据写坏了，你就没地方找了，再就是帐号和安全，虚IP的维护，DNS、MySQL本身的维护，还有数据一致性，包括RD提的一些问题的排查，自身报警的处理。这就是我们一线运维的DBA，小团每天需要干很多的事情，这些事情都很重复，相信大家在座的有DBA的话，肯定是每天都会遇到我列的这些事情中的一个或多个。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_2.png\" alt=\"构建前的苦恼-一线运维DBA\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建前的苦恼——手动运维的烦恼</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">接下来，我们先看一下美团点评初期数据库系统的架构：一开始是两层的架构，在主从库的基础上配置读写DNS，后来引入LVS。这个两层或者三层的数据库架有什么问题呢？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">比如底层的数据库做切换了，上层的DNS配置也要变更，生效到各个机房，几分钟过去了……</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">RD说：“这个不行，你不能这么搞，忍不了”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">所以说，这样的数据库架构在切换或者从库上下线流量的时候，都会导致业务的报错，业务接受不了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个是多：重复没有成长，你让一个DBA一开始做搭建、扩容、拆分、切换，他们可能觉得很有新鲜感和成就感，但是你让他做了上百次甚至上千次之后他们觉得这个没有成长。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个是杂：经常被打断，有报警处理的时候需要立马处理，RD找到你说这个问题必须马上、立刻处理，所以经常在做一些事情的时候被打断，总感觉自己在做杂事。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最后一个烦：RD经常不按照规范做事，包括上线一些大SQL、慢查询。程序不加重试，在网络抖动的时候，发现数据库怎么连接断了？他就会找到你。还有一些误操作，前几天有一个RD半夜打电话跟我说，线上数据误删除了需要恢复，通过我们平台去Delete数据的话，是很好恢复的，但是他说不好意思，我通过帐号直连线上删了数据。有些明白的RD会不好意思，知道数据不好恢复；但是，有些RD会说：“你DBA就是干这个事儿的，你就是得帮我恢复数据。”</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大家很郁闷，在没有<strong style=\"padding: 0px; margin: 0px;\">自动化运维系统</strong>之前的DBA还是非常苦恼的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_3.png\" alt=\"构建前的苦恼-手动运维的烦恼\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-1-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——1.0版系统设计之初的考虑</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上讲完了数据库运维自动化系统构建前DBA的苦恼，接下来说一说我们如果想去构建一套数据库自动化运维系统应该从哪里开始着手，我这里列的都是非常重要的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第一个就是CMDB，如果你做的自动化系统中没有CMDB，那么，我觉得你做的自动化系统就不叫自动化系统。做自动化其实就是做标准化，这样的话，你在做自动化运维的时候，CMDB可以很方便的让你查询到信息，对业务进行合理的描述，这样的话有一个基本的地方，其实就是数据标准，我后面会说。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个就是你想一想在你做自动化运维系统之前，你整个公司或者RD的需求、DBA的需求，你需要做哪些自动化。美团初期只做了三个，在线DDL，数据库帐号申请和慢查询。有些RD或者DBA经常出去听一些会，比如腾讯讲蓝鲸，阿里讲鲁班，我们回去搞一套这么大的，其实没有必要，你们公司需要什么，你迫切需要的应该最先做，先把系统搭起来，再迭代。这里我给大家说个经验就是，可以先从DBA内部入手，再推广到RD。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个就是开发人员和成本，当时2015年初期的时候，美团App的DBA只有4个人，那时候既没有FE，也没有后台做开发的，这个时候就需要考虑到开发会有一些人员和成本的问题。会想，我是不是招一个人或者招两个人？其实没有必要，你可以放眼整个公司看一看，有没有共用的平台或者资源给你使用，这样更快，更便利的让你搭建平台。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最后就是开发形式，我们整个大的运维部是有开发人员相关资源的，我们找到他们去帮我们做一些页面，这样的话，你就会迅速的搭建你的1.0版本。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上就是我要说的四点。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_4.png\" alt=\"构建中的坎坷和思考——1.0版系统设计之初的考虑\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-1-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——1.0版系统架构设计&amp;使用情况</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大家可以看一下我们1.0版系统的整体框图，用户就不说了，前端模块主要是Django+MVC的方式，前端开发是不懂DBA业务的，他们需要做什么事情呢？他们把用户提交的任务写到数据库的task表中，我们后台的DBA去写一些脚本，去把前端提交的任务拉出来，拉出来之后如果有日志，会反写到task表里，这就是我们1.0版的架构，非常的简单，但是也是非常的实用，右边这个图是我们1.0版的效果，其实我后来加了DML，一开始只有DDL，业务他只需要选择他所需要变更的SQL类型之后，提交到后端DB的task表。后台会有一个常驻内存的进程，扫描这个DB，去发现当前有没有需要我去执行的任务，如果有就拉出去执行，执行的过程中会有一些日志，会回填到这个DB中，前端从DB拉去日志信息，就可以展示了。当时的效果，日均的订单是1840，2015年初，公司正是快速增长期的时候，现在应该比这个稍微少一点，当时使用人数大概600人，虽然是很简单的一套架构，但是使用的人数还是非常多。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_5.png\" alt=\"构建中的坎坷和思考——1.0版系统架构设计&amp;使用情况\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-1-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——1.0版的反思</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">1.0版的系统做完了之后为什么做2.0版的系统呢？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">不是说1.0版的系统不好，或者使用的人少，随着美团的发展你的标准化程度就慢慢得满足不了要求，所以我们会反思1.0版的一些问题，开始去做2.0版的系统。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">1.0版有什么问题呢？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先是前瞻模块重，开发人员很多，因为我们当时都是公用开发人员，开发人员很多，依赖也非常多，其实我开发习惯不太喜欢依赖什么太多的框架、组建，这样的话感觉很重，可能导致你代码的迁移、扩展性差。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个是没有接口化，RD不方便接入，很深刻的一个例子就是，有一个业务，他可能到某天的凌晨需要建跟时间相关的表，需要删表、建表，他每次都等到凌晨的时候去平台提交去做，他觉得很辛苦，于是就问我：“你们有没有接口让我去调，我写个脚本到那个时间就把我的表建上，因为每个时间表结构都是一样的”。如果你的平台没有接口化很不方便，特别有一些需要定期跑的业务。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个就是开发周期长、成本高，得跟他们沟通，需求调整复杂。当然它主要在高并发、高性能上很差，原因是什么？因为后台是一个常驻内存的进程，我当时只起了大概可能是6个线程就跑了，并发的话只能跑6个，我们2.0版的系统你想跑多少个就跑多少个，我一会儿给大家介绍一下怎么做的，不易扩展，这个也不方便扩展，后台的任务就一个，挂了就挂了，图象化做的也不好，毕竟是找人家帮我们做的，效果也不是太好。这个是我们为什么做2.0下定决心的一个原因吧！</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最后就是任务的不可干预性，有一个改表操作，改到一半不想改了，这时候需要DBA上去手动操作，且不能暂停、回滚，2.0版的支持。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_6.png\" alt=\"构建中的坎坷和思考——1.0版的反思\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着业务的发展，1.0版系统已经不能满足我们现在的需求，我们就做了2.0版。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">2.0版需要遵循三个方面：标准化、自助化、自动化。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第一个标准化，指的是：接口标准、数据标准、流程标准。接口标准。你不能说，我的平台（WEB前端）提交的是一种方式，API接口提交是另一种方式，这是不行的。数据标准，就是CMDB，一定要准，一定要实时得更新，不然整个上层，它是基石，整个上面的框架搭起来都是白费的。流程标准，你需要制定ABCD各种各样的流程，很多DBA，他有自己的方式、方法。比如说对于拆分来说，A有它的方法，B有它的方法，可能都能达到目的，但是标准化，只能用一种方式。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个自助化，操作自助，只要能放给RD自主操作的就自主操作。问题定位的自助，RD碰到了数据库相关的问题，不是第一时间找DBA，而是第一时间在你平台上可以看到现在数据库的状况，定位到现在数据库的问题，去操作相关业务逻辑解决问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个自动化，高可用和报警自动处理。高可用，从库宕机你可以把它剔掉；报警自动处理，对于收到报警看一眼，后台有报警自动处理的程序就给它处掉了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这是我们需要遵循的三个化，标准化、自助化和自动化。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_7.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">介绍2.0版系统整体的架构之前，我先给大家介绍一下两个开源的组件，第一个是RabbitMQ，这是一种应用程序对应用程序的通讯方法，这个端对于另一个端的通讯，它是通过这个端来发消息，另一个端接消息，从而连接了两个端，很简单，其实他的作用就是连接消息的桥梁，美团点评现在做的O2O，就是连接人和服务，你不需要自己找，你只需要在APP上操作就行了。对于消息队列，你只需要提交到对应的队列中去就行了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_8.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个就是Celery，这个Rabbit的中文翻译是兔子，Celery翻译成中文就是芹菜，兔子和芹菜构建了我们2.0版系统。大家可以这么理解，Celery其实就是封装在消息队列上面一个非常好用的任务调度者，是基于Python开发的，他可以帮你干什么呢？可以帮你发任务，可以帮接任务，可以帮你定时的起任务，我今天凌晨2点拆分，可以白天提交，凌晨Celery帮你调度。它是对于消息中间件上面很好用的封装。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_9.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">说完了以上两个开源的组建，我们接下来说整个2.0版系统的架构，一点点的放出来，首先是用户，通过前端的Web，他的所有的操作全部打到我们的API层，业务模块：脚本也好，系统也好，也是打到我们的API层，这样做到了接口的统一，后端的处理都是一样的，不管是任何人，对于我来说都是我的一个端。<br style=\"padding: 0px; margin: 0px;\"/>API层它可以做两个事情，比如我想查询当前数据库的主从架构情况，当前服务里的数据库列表，那么API层直接跟CMDB交互获取数据并返回。第二种是需要后台做任务的，比如搭建，扩容，拆分这些都是任务，它们需要到后台的任务管理模块去做。任务管理模块会把任务分发下去。这中间会有CMDB。任务管理模块可以详细讲一下，这个就是刚才我所说的MQ的消息管道，这里是Celery，这里有两个Celery，你可以理解为它是MQ的封装，你只需要给Celery通信就可以了。TaskControl是挂载到整个消息中间件上面的一个任务处理者。它会生成父子进程去处理任务。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_10.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我刚才说的为什么任务是可以无限地增加，前提是在机器可以承载的情况下无限增加。第一步，TaskControl先fork出一个子进程，第二步，子进程1再fork出一个子进程，这个子进程2，是真正得做任务的进程，这个进程再调用任务执行脚本或者模块去进行任务操作。子进程1，它会把子进程2的一些信息，比如进程PID，回填到数据库里，子进程一1就退出了，子进程1退出之后，它跟子进程2的关系就断开了，这里要说一点，子进程1得忽略回收子进程，这时候子进程2就托管给了init进程，这样的话就生成了这么一个任务执行单元。任务执行单元只是需要自己去做任务，比如说它去做DDL，这个子进程2是父进程，会去做子进程的回收操作，任务日志的回填工作等。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_11.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最后的效果大家可以看到，就是右下角这样的，这个TaskControl，每次生成父子进程完成之后，它就回去从消息队列去拿新的任务，一台机器上，好多个父子进程，并发高的时候，这些任务会有一百多个，这样的话，大大提升了整个系统的并发性，正常的话，这里起6个子进程就够了，用来监听任务，生成任务执行单元。我看有些公司会起很多很多模块去处理，用这种技巧的话，就可以让任务的执行脱离整个任务系统。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这么做还有什么好处呢？在做升级或者整个系统挂了的时候：我们直接升级好了，系统挂了也没事，任务还是不受影响。机器挂了怎么办？这个就没办法了，机器挂了确实就挂掉了，上面的任务需要重新发起，可能需要人工的干预。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_12.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">说完了上面的整体架构之后我会给大家讲三个案例：<br style=\"padding: 0px; margin: 0px;\"/>第一个案例是我们现有的集群的搭建过程，我先说一下我们线上跑的整体数据库的四层架构：第一层是业务层，业务层，访问我们都是通过DNS，DNS下面挂的是虚IP层，虚IP层下面会挂我们的中间件，atlas，每个机房会有并行得部署多个，最下面挂的是数据库主从架构，这个是现在美团用的线上数据库主流架构。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_13.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">现在开始说搭建流程，我说了这么多，大家没看到我们系统的庐山真面目，这个是我们2.0版本系统的页面。对于搭建，DBA需要先点击一下服务组初始化，首先需要去创建一个服务，我们每一个DB集群在数据库里面都是有一个标识的，被称做服务组。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_14.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">接着，需要选择你要搭建的类型，我刚才说的四层的架构是这里的A套餐，但是如果说是一些统计、运营类的库，我们可能会用到BCD套餐，后面三个套餐用的比较少。当然因为这里有四个，可能涉及到的情况非常多：有没有atlas、有没有MGW、有无DNS……可能至少得有八种情况。有时候大家做自动化的时候，就会遇到矛盾，这种情况怎么办？现在给DBA的四个套餐其实就是制定标准，就是你搭建的数据库集群，都是按照我的标准来的，只有这四种，DBA就说了：你有时候不满足我的情况，DBA就要手动去做，怎么办？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_15.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">你的系统不能够兼容DBA的需求的时候怎么办呢？这个时候确实很麻烦，它手动运维在后面搞一搞，很有可能造成你的CMDB信息缺失等问题，这个就很麻烦。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">遇到这种情况，我就告诉他们：“OK，我整个平台兼容你所有的操作”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">很简单，他说了：“我想mysql上面不挂中间件，我想直接挂MGW。”</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可以。但是你得分两步做：第一步你是在平台，你先把D套餐给它搭起来，你到我们MGW和DNS里面去申请。你在这个管理功能就可以做。也就是说，做流程化或者是标准化的时候，你把流程制定出来的时候，也要考虑到灵活性，你要兼容它可能存在的所有情况，我们把线上相关的所有组件都做了管理，MGW有管理，DNS有管理，包括其他的日志都有管理，细分的管理都有，你正常情况下按我的标准、按我的流程去走，你万一涉及到特殊情况的话，你也可以在各个分组件的管理里把你想做的事情做完。这样的话，就把整个DBA或者整个ID用户都圈到你的整个平台里面来了，而不是我的平台今天只兼容一部分。这样的话，大家做自动化起来会很费劲。 因为原来也是，原来我线上会有报警校验线上CMDB的准确性，如果线上CMDB的错的话，可能非常麻烦。所以说，DBA在应对RD的时候很苦恼，我们做自动化运维开发在应对DBA的时候，也很苦恼，用这种方式就可以满足他们了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_16.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在大家选完套餐之后就可以到这个界面了，做数据库运维自动化系统有很多流程性的东西，你接下来需要走哪一步，选完套餐之后让他选机器，你的监控是什么，buffer pool多大，下面会给他展示一个实时的拓扑；你要把你的用户当小白鼠，你得告诉他现在长什么样子了，不然的话他提交出错了，又回来找你。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_17.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个我们去选择atlas，根据分组选择atlas，就是数据库中间件，选择完之后就可以形成这样的图。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_18.png\" alt=\"构建中的坎坷和思考-—2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三步就是你去申请这个虚IP和域名了，这个虚IP层正常一个机房会有一个。一个虚IP上会挂多个atlas。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_19.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">到最后一步可能就是你需要新搭建集群的时候，需要给RD申请一个DB，申请一个帐号，让他可以访问。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_20.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这样形成最后一个大的JSON，让DBA去做确认，你申请的服务名称、你当前数据库的机器、中间件的机器、你的虚IP层和域名，包括你的DB，会有一个整体的拓扑图，这样的话。然后把整个的参数，所有的需要你完成这个数据库集群搭建的参数合成一个大的JSON。发到API层，API层会做参数校验，你当前搭建的参数是否满足系统的要求，如果满足要求，就会发到后台的流程引擎中，就是后台系统去做任务。做任务的时候，大家可能说，我需不需要有什么高深的语言，这个无所谓了，你可以是脚本，也可以是程序。我们现在线上，搭建的话用的还是DBA他们一开始写的搭建脚本，只需要把脚本改造一下，输入，输出标准化一下，你能够识别脚本的输出输入就行了。</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">大家说自动化很艰辛，很艰难。其实身边有很多的资源就是DBA手中平时做的一些脚本，有一些脚本可能DBA自己用，写的不太好。但是他本身，他是有非常大的价值的，因为他是长年累月改过的，可能第一版不行改第二版、第二版不行改第三版，他可能改了一年，他的整个脚本跑起来还是非常流利的，我们脚本搭建很稳定得跑了10个月的时间，主要的原因是因为我们DBA很靠谱，积累的很多实用的脚本。有些纯开发的人去做DBA的自动化系统，他很难理解DBA的需求，有时候DBA也讲不清楚，所以通过你做系统，他做脚本的方式去合作，真的很靠谱。因为做出来的系统是非常稳定的。</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_21.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">说完了数据库集群搭建这个案例，我们说第二个案例：在线表变更是怎么做的。首先批量的DDL或者DML打造我们的API层，我们API层会做两个事情，第一个是语法检测，语法检测有两种方式，一种是测试库，一种是sqlparser；比如，对于autoddl的create操作，你可以在测试库上建一下这个表，你就知道语法对不。或者是说alter操作，你可能先从线上把表结构拉到测试环境，在测试库上先建上，再把alter语句用到这个表上，你看alter能不能通过，这样很方便就绕过了sqlparser。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">但是，在这个时候，因为在做在线的DML的时候，你是需要给用户备份的，方便用户，万一我误操作了，可以去恢复，就必须进行sqlparser。第一步：你必须把update或者delete语句改写成select，然后会去线上做查询计划，看一下explain的结果是否满足我的要求，如果不满足的话，就提示选择，不是直接拒绝掉，没有那么暴力，这个后面会说。所以说这个sqlparser，应该也是一个比较基础的难题，大家可以尝试一下在源码把这个sqlparser抽离出来，或者大家可以考虑去找一些已经开源的sqlparser。第二个就是语义的检测，是什么呢？也是标准化，就是RD提交的SQL是否满足你的要求，比如命名的要求、必须要有主键索引，而且不能有重复的索引，对于DML来说，因为对于互联网应用来说会有很多的比如说客服给我们运营人员说，我的什么什么错了，这个时候运营的人都会改这个数据库，改动一般都是一两行这种，所以我们设定一千行基本上能够满足大部分人的需求。然后在语法、语义提交通过之会到后台的提交任务，刚才所说的2.0的系统，由后台的任务执行者去执行，然后做在线的DDL。我们选择的是开源的pt-online-schema-change，这个是一个开源工具，它做操作的时候，可以做到在线改表的时候不锁表，当然还会有一些其他的问题，这里不是我们今天所说的重点，大家如果以后有遇到这个工具有什么相关的问题都可以找我们，美团还是踩了非常多的坑，有比较多的经验。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_22.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大家可以看看这是我们现在的在线表变更的提交页面。这里也是先选业务，选完相关的业务，你选库，选操作类型，我们这里会有一个业务高峰的描述，比如对于pt-online-schema-change在做表变更的时候，他会有一个数据拷贝的过程，所以说我们会有一个业务高峰，在业务高峰的时候RD发起的任务是不能被执行的。还有任务操作时间区间，RD也可以选，比如我选今天晚上凌晨变更或者什么时候变更都是OK的，RD把他的SQL批量粘到这里。对于在线的分表，粘一个母表就行了，下面我们自动生成带数字的语句会给他操作。这样也方便我们后台的处理，对于512的分表，我们只校验第一个语法语义就行了，不然的话，会产生很多性能问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_23.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">讲到这里大家肯定会有疑问，如果你在语法检测或者语义检测出问题的时候应该怎么办？我们不是非常暴力的把RD的请求直接拒绝掉。而是在这里，给了RD一个选择：也就是说我们现在，大部分在线的表变更都是自动的，当然有一些不满足语法语义的单子，语法当然不用说了，直接报错给RD让修改，对于语义来说，有些RD说，你帮我删或者帮我改，我们可以接受延迟，这个时候我们让RD选择，你可以点继续，把这个单子发给DBA，如果DBA说能执行就可以执行了，我们的在线表变更是手自一体的。我们要把RD所有的操作，都得圈到我们的平台里去做，而不是说我语义不支持了，就找DBA手动去做。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_24.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这里可以看到，遇到了语法或者语义检测失败之后，我们的平台会给他报错，并会给他一个详细原因的解释，你不能说错了，而且你要直白得告诉RD为什么错了；这样的话可以提升RD的DBA能力。比如说这里长度，SQL语法问题，都会告诉他；这样的话，他可能用问一次两次，后面如果用多了，他就不会问了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_25.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这个就是我们整个任务执行的一个详情的单子，就是RD在提交完任务之后在这个页面看到他任务执行的详细的信息，这上面是一些元信息，包括他提交的时间，他服务的信息，下面会有一个详细的执行日志发给他，你在做任务操作的时候，你把你的任务相关的数据实时回填到任务表里，前端只需要读这个任务表就行了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_26.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-mha-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例三：高可用解决方案（MHA）</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个案例是什么呢？就是我们的高可用的解决方案，上面已经列了，美团现在用的是开源的MHA，一个很牛的日本人写的。我这里大概介绍一下切换的过程，原理大家可以回去自己看，左边是我们四层的架构，我们现在整个MHA只运用于这四层的架构，如果你不是这四层的架构切换过程是不满足的。对于主从的结构这里会有监控的哨兵，比如这个哨兵他发现现在主库连不上了，这个时候，他不是说我就切换了，他是先联系其他哨兵，不能相信谣言嘛，也要先打听打听我自己的判断是不是对的，他会去联系其他几个哨兵，你们帮我看看当前主库是不是挂了，其他几个哨兵跑回来跟他说主库确实挂了，他便开始切换。<br style=\"padding: 0px; margin: 0px;\"/>到了第2步，调MHA去做主从切换。切换完之后呢，他会通过API去改CMDB的信息，CMDB里面会描述数据库的主从的架构，描述完之后，他会去调接口，通知中间件变更主从信息，那么到3.2为止服务就恢复了。我们现在自动和手动做切换，时间都在10秒左右，如果RD程序有数据库重试的话应该是没有影响的。切换完之后会到第4步，其实这里很简单，就是告诉哨兵主从结构变了，告诉他重新监听新的主从结构就OK，这是我们现在平台去做切换的过程，大家可以借鉴一下。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_27.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例三：高可用解决方案（MHA）\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建之后的效果和后期计划——构建之后的效果</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">说完我们整体的1.0版的数据库自动化运维系统、2.0版的系统，以及三个案例之后我们来看一下现在整个线上构建之后的效果，以及我们后期的计划。这个统计图是一个开源组件统计的，他可以分析每天我们的一个用户量，我们每天在这个平台上跑的RD的用户量大概是在三百多。每天会有三百多RD在我们的平台上做操作，累计的RD数目大概是1461个，这些是需要跟DB打交道的RD数量。这个是我们整体平台跑的效果，你的自动化运维系统做出来之后做的怎么样？不是嘴说的，还是要有质量运营的数据。我们做质量运营，包括用户数，任务的成功率，平台的接入率，功能的覆盖率去衡量整个平台的指标。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_28.png\" alt=\"构建之后的效果和后期计划——构建之后的效果\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建之后的效果和后期计划——后期计划</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这个图，也是我们，我刚才前面已经讲过了，这个架构。我们在使用这个架构的过程中，很好用，非常好。但是也会存在一些问题，存在什么问题呢？首先这个API层，随着前端的功能越来越多，我们API会有200多个，很多很多，维护起来比较麻烦。第二个是CMDB，谁都可以去写。<br style=\"padding: 0px; margin: 0px;\"/>第三个这个任务执行者现在用不着重，因为他现在需要处理后端的各种各样的任务，他会越来越重，DBA可能想要加一个功能，也只能找我加或者我们组内的人去加这个功能，这里能不能让DBA也参与进来</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_29.png\" alt=\"构建之后的效果和后期计划——后期计划\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-wew-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建之后的效果和后期计划——wew后期计划</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在这个做完之后我们会有一个后期的计划，我们需要把整个的架构改造成这样的，加入两个东西，一个是核心功能库和核心组件库，这两个东西包含了API基础的核心功能，包括日志，包括统计，包括权限校验都放在核心功能里，核心组件包括一些DNS组件，Atlas组件、监控都放在这里操作，API层只需要负责他的逻辑就行了。<br style=\"padding: 0px; margin: 0px;\"/>任务执行者也是只做通用，我只帮你分发任务，帮你做任务的子进程生成，具体谁去做，去调任务执行平台去做，这样的话，我只要任务平台做的足够好，DBA或者RD只需要把你的脚本放在这个平台的下面的目录里，就能调用整个系统，这样的话非常方便，让更多的人参与你整个平台的建设、开发和改造的过程中来。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_30.png\" alt=\"构建之后的效果和后期计划——后期计划\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('91', '美团外卖订单中心的演进', '前言美团外卖从2013年9月成交第一单以来，已走过了三个年头。期间，业务飞速发展，美团外卖由日均几单发展为日均500万单（9月11日已突破600万）的大型O2O互联网外卖服务平台。平台支持的品类也由最初外卖单品拓展为全品类。随着订单量的增长、业务复杂度的提升，外卖订单系统也在不断演变进化，从早期一个订单业务模', '2016-10-27 19:20:59', '0', '0', '<h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">前言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">美团外卖从2013年9月成交第一单以来，已走过了三个年头。期间，业务飞速发展，美团外卖由日均几单发展为日均500万单（9月11日已突破600万）的大型O2O互联网外卖服务平台。平台支持的品类也由最初外卖单品拓展为全品类。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着订单量的增长、业务复杂度的提升，外卖订单系统也在不断演变进化，从早期一个订单业务模块到现在分布式可扩展的高性能、高可用、高稳定订单系统。整个发展过程中，订单系统经历了几个明显的阶段，下面本篇文章将为大家介绍一下订单系统的演进过程，重点关注各阶段的业务特征、挑战及应对之道。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为方便大家更好地了解整个演进过程，我们首先看一下外卖业务。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">外卖订单业务</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">外卖订单业务是一个需要即时送的业务，对实时性要求很高。从用户订餐到最终送达用户，一般在1小时内。如果最终送达用户时间变长，会带来槽糕的用户体验。在1小时内，订单会快速经过多个阶段，直到最终送达用户。各个阶段需要紧密配合，确保订单顺利完成。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下图是一个用户视角的订单流程图。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E8%AE%A2%E5%8D%95%E6%B5%81%E7%A8%8B%E5%9B%BE.png\" alt=\"订单流程图\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">从普通用户的角度来看，一个外卖订单从下单后，会经历支付、商家接单、配送、用户收货、售后及订单完成多个阶段。以技术的视角来分解的话，每个阶段依赖于多个子服务来共同完成，比如下单会依赖于购物车、订单预览、确认订单服务，这些子服务又会依赖于底层基础系统来完成其功能。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">外卖业务另一个重要特征是一天内订单量会规律变化，订单会集中在中午、晚上两个“饭点”附近，而其它时间的订单量较少。这样，饭点附近系统压力会相对较大。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下图是一天内的外卖订单量分布图</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E8%AE%A2%E5%8D%95%E9%87%8F%E5%88%86%E5%B8%83%E5%9B%BE.png\" alt=\"订单量分布图\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">总结而言，外卖业务具有如下特征：</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>流程较长且实时性要求高；</li><li>订单量高且集中。</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面将按时间脉络为大家讲解订单系统经历的各个阶段、各阶段业务特征、挑战以及应对之道。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">订单系统雏型</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">外卖业务发展早期，第一目标是要能够快速验证业务的可行性。技术上，我们需要保证架构足够灵活、快速迭代从而满足业务快速试错的需求。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在这个阶段，我们将订单相关功能组织成模块，与其它模块（门店模块等）一起形成公用jar包，然后各个系统通过引入jar包来使用订单功能。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期系统的整体架构图如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F%E9%9B%8F%E5%9E%8B.png\" alt=\"订单系统雏型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期，外卖整体架构简单、灵活，公共业务逻辑通过jar包实现后集成到各端应用，应用开发部署相对简单。比较适合业务早期逻辑简单、业务量较小、需要快速迭代的情况。但是，随着业务逻辑的复杂、业务量的增长，单应用架构的弊端逐步暴露出来。系统复杂后，大家共用一个大项目进行开发部署，协调的成本变高；业务之间相互影响的问题也逐渐增多。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期业务处于不断试错、快速变化、快速迭代阶段，通过上述架构，我们能紧跟业务，快速满足业务需求。随着业务的发展以及业务的逐步成熟，我们对系统进行逐步升级，从而更好地支持业务。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">独立的订单系统</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">2014年4月，外卖订单量达到了10万单/日，而且订单量还在持续增长。这时候，业务大框架基本成型，业务在大框架基础上快速迭代。大家共用一个大项目进行开发部署，相互影响，协调成本变高；多个业务部署于同一VM，相互影响的情况也在增多。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为解决开发、部署、运行时相互影响的问题。我们将订单系统进行独立拆分，从而独立开发、部署、运行，避免受其它业务影响。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">系统拆分主要有如下几个原则：</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>相关业务拆分独立系统；</li><li>优先级一致的业务拆分独立系统；</li><li>拆分系统包括业务服务和数据。</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">基于以上原则，我们将订单系统进行独立拆分，所有订单服务通过RPC接口提供给外部使用。订单系统内部，我们将功能按优先级拆分为不同子系统，避免相互影响。订单系统通过MQ（队列）消息，通知外部订单状态变更。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">独立拆分后的订单系统架构如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E6%8B%86%E5%88%86%E5%90%8E%E7%9A%84%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84.png\" alt=\"独立拆分后的订单系统\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">其中，最底层是数据存储层，订单相关数据独立存储。订单服务层，我们按照优先级将订单服务划分为三个系统，分别为交易系统、查询系统、异步处理系统。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">独立拆分后，可以避免业务间的相互影响。快速支持业务迭代需求的同时，保障系统稳定性。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">高性能、高可用、高稳定的订单系统</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统经过上述独立拆分后，有效地避免了业务间的相互干扰，保障迭代速度的同时，保证了系统稳定性。这时，我们的订单量突破百万，而且还在持续增长。之前的一些小问题，在订单量增加后，被放大，进而影响用户体验。比如，用户支付成功后，极端情况下（比如网络、数据库问题）会导致支付成功消息处理失败，用户支付成功后依然显示未支付。订单量变大后，问题订单相应增多。我们需要提高系统的可靠性，保证订单功能稳定可用。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">另外，随着订单量的增长、订单业务的复杂，对订单系统的性能、稳定性、可用性等提出了更高的要求。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了提供更加稳定、可靠的订单服务，我们对拆分后的订单系统进行进一步升级。下面将分别介绍升级涉及的主要内容。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">性能优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">系统独立拆分后，可以方便地对订单系统进行优化升级。我们对独立拆分后的订单系统进行了很多的性能优化工作，提升服务整体性能，优化工作主要涉及如下几个方面。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">异步化</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">服务所需要处理的工作越少，其性能自然越高。可以通过将部分操作异步化来减少需要同步进行的操作，进而提升服务的性能。异步化有两种方案。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>线程或线程池：将异步操作放在单独线程中处理，避免阻塞服务线程；</li><li>消息异步：异步操作通过接收消息完成。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">异步化带来一个隐患，如何保障异步操作的执行。这个场景主要发生在应用重启时，对于通过线程或线程池进行的异步化，JVM重启时，后台执行的异步操作可能尚未完成。这时，需要通过JVM优雅关闭来保证异步操作进行完成后，JVM再关闭。通过消息来进行的，消息本身已提供持久化，不受应用重启影响。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">具体到订单系统，我们通过将部分不必同步进行的操作异步化，来提升对外服务接口的性能。不需要立即生效的操作即可以异步进行，比如发放红包、PUSH推送、统计等。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以订单配送PUSH推送为例，将PUSH推送异步化后的处理流程变更如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E5%BC%82%E6%AD%A5%E5%8C%96.png\" alt=\"异步化\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">PUSH异步化后，线程#1在更新订单状态、发送消息后立即返回，而不用同步等待PUSH推送完成。而PUSH推送异步在线程#2中完成。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">并行化</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">操作并行化也是提升性能的一大利器，并行化将原本串行的工作并行执行，降低整体处理时间。我们对所有订单服务进行分析，将其中非相互依赖的操作并行化，从而提升整体的响应时间。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以用户下单为例，第一步是从各个依赖服务获取信息，包括门店、菜品、用户信息等。获取这些信息并不需要相互依赖，故可以将其并行化，并行后的处理流程变更如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E5%B9%B6%E8%A1%8C%E5%8C%96.png\" alt=\"并行化\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过将获取信息并行化，可有效缩短下单时间，提升下单接口性能。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">缓存</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过将统计信息进行提前计算后缓存，避免获取数据时进行实时计算，从而提升获取统计数据的服务性能。比如对于首单、用户已减免配送费等，通过提前计算后缓存，可以简化实时获取数据逻辑，节约时间。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以用户已减免配送费为例，如果需要实时计算，则需要取到用户所有订单后，再进行计算，这样实时计算成本较高。我们通过提前计算，缓存用户已减免配送费。需要取用户已减免配送费时，从缓存中取即可，不必实时计算。具体来说，包括如下几点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>通过缓存保存用户已减免配送费；</li><li>用户下单时，如果订单有减免配送费，增加缓存中用户减免配送费金额（异步进行）；</li><li>订单取消时，如果订单有减免配送费，减少缓存中用户减免配送费金额（异步进行）；</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">一致性优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统涉及交易，需要保证数据的一致性。否则，一旦出现问题，可能会导致订单不能及时配送、交易金额不对等。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">交易一个很重要的特征是其操作具有事务性，订单系统是一个复杂的分布式系统，比如支付涉及订单系统、支付平台、支付宝/网银等第三方。仅通过传统的数据库事务来保障不太可行。对于订单交易系统的事务性，并不要求严格满足传统数据库事务的ACID性质，只需要最终结果一致即可。针对订单系统的特征，我们通过如下种方式来保障最终结果的一致性。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">重试/幂等</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过延时重试，保证操作最终会最执行。比如退款操作，如退款时遇到网络或支付平台故障等问题，会延时进行重试，保证退款最终会被完成。重试又会带来另一个问题，即部分操作重复进行，需要对操作进行幂等处理，保证重试的正确性。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以退款操作为例，加入重试/幂等后的处理流程如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E9%80%80%E6%AC%BE%E6%B5%81%E7%A8%8B.png\" alt=\"引入重试的退款流程\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">退款操作首先会检查是否已经退款，如果已经退款，直接返回。否则，向支付平台发起退款，从而保证操作幂等，避免重复操作带来问题。如果发起退款失败（比如网络或支付平台故障），会将任务放入延时队列，稍后重试。否则，直接返回。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过重试+幂等，可以保证退款操作最终一定会完成。</p><h4 id=\"2pc\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">2PC</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">2PC是指分布式事务的两阶段提交，通过2PC来保证多个系统的数据一致性。比如下单过程中，涉及库存、优惠资格等多个资源，下单时会首先预占资源（对应2PC的第一阶段），下单失败后会释放资源（对应2PC的回滚阶段），成功后会使用资源（对应2PC的提交阶段）。对于2PC，网上有大量的说明，这里不再继续展开。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">高可用</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式系统的可用性由其各个组件的可用性共同决定，要提升分布式系统的可用性，需要综合提升组成分布式系统的各个组件的可用性。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对订单系统而言，其主要组成组件包括三类：存储层、中间件层、服务层。下面将分层说明订单系统的可用性。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">存储层</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">存储层的组件如MySQL、ES等本身已经实现了高可用，比如MySQL通过主从集群、ES通过分片复制来实现高可用。存储层的高可用依赖各个存储组件即可。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">中间件层</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式系统会大量用到各类中间件，比如服务调用框架等，这类中间件一般使用开源产品或由公司基础平台提供，本身已具备高可用。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">服务层</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在分布式系统中，服务间通过相互调用来完成业务功能，一旦某个服务出现问题，会级联影响调用方服务，进而导致系统崩溃。分布式系统中的依赖容灾是影响服务高可用的一个重要方面。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">依赖容灾主要有如下几个思路：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>依赖超时设置；</li><li>依赖灾备；</li><li>依赖降级；</li><li>限制依赖使用资源；</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统会依赖多个其它服务，也存在这个问题。当前订单系统通过同时采用上述四种方法，来避免底层服务出现问题时，影响整体服务。具体实现上，我们采用Hystrix框架来完成依赖容灾功能。Hystrix框架采用上述四种方法，有效实现依赖容灾。订单系统依赖容灾示意图如下所示</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E8%BD%AF%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB.png\" alt=\"资源软隔离\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过为每个依赖服务设置独立的线程池、合理的超时时间及出错时回退方法，有效避免服务出现问题时，级联影响，导致整体服务不可用，从而实现服务高可用。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">另外，订单系统服务层都是无状态服务，通过集群+多机房部署，可以避免单点问题及机房故障，实现高可用。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">小结</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">上面都是通过架构、技术实现层面来保障订单系统的性能、稳定性、可用性。实际中，有很多的事故是人为原因导致的，除了好的架构、技术实现外，通过规范、制度来规避人为事故也是保障性能、稳定性、可用性的重要方面。订单系统通过完善需求review、方案评审、代码review、测试上线、后续跟进流程来避免人为因素影响订单系统稳定性。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过以上措施，我们将订单系统建设成了一个高性能、高稳定、高可用的分布式系统。其中，交易系统tp99为150ms、查询系统tp99时间为40ms。整体系统可用性为6个9。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">可扩展的订单系统</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统经过上面介绍的整体升级后，已经是一个高性能、高稳定、高可用的分布式系统。但是系统的的可扩展性还存在一定问题，部分服务只能通过垂直扩展（增加服务器配置）而不能通过水平扩展（加机器）来进行扩容。但是，服务器配置有上限，导致服务整体容量受到限制。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">到2015年5月的时候，这个问题就比较突出了。当时，数据库服务器写接近单机上限。业务预期还会继续快速增长。为保障业务的快速增长，我们对订单系统开始进行第二次升级。目标是保证系统有足够的扩展性，从而支撑业务的快速发展。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式系统的扩展性依赖于分布式系统中各个组件的可扩展性，针对订单系统而言，其主要组成组件包括三类：存储层、中间件层、服务层。下面将分层说明如何提高各层的可扩展性。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">存储层</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统存储层主要依赖于MySQL持久化、tair/redis cluster缓存。tair/redis cluster缓存本身即提供了很好的扩展性。MySQL可以通过增加从库来解决读扩展问题。但是，对于写MySQL存在单机容量的限制。另外，数据库的整体容量受限于单机硬盘的限制。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">存储层的可扩展性改造主要是对MySQL扩展性改造。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">分库分表</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">写容量限制是受限于MySQL数据库单机处理能力限制。如果能将数据拆为多份，不同数据放在不同机器上，就可以方便对容量进行扩展。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对数据进行拆分一般分为两步，第一步是分库，即将不同表放不同库不同机器上。经过第一步分库后，容量得到一定提升。但是，分库并不能解决单表容量超过单机限制的问题，随着业务的发展，订单系统中的订单表即遇到了这个问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对订单表超过单库容量的问题，需要进行分表操作，即将订单表数据进行拆分。单表数据拆分后，解决了写的问题，但是如果查询数据不在同一个分片，会带来查询效率的问题（需要聚合多张表）。由于外卖在线业务对实时性、性能要求较高。我们针对每个主要的查询维度均保存一份数据（每份数据按查询维度进行分片），方便查询。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">具体来说，外卖主要涉及三个查询维度：订单ID、用户ID、门店ID。对订单表分表时，对于一个订单，我们存三份，分别按照订单ID、用户ID、 门店ID以一定规则存储在每个维度不同分片中。这样，可以分散写压力，同时，按照订单ID、用户ID、门店ID三个维度查询时，数据均在一个分片，保证较高的查询效率。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单表分表后，订单表的存储架构如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E5%88%86%E8%A1%A8.png\" alt=\"分库分表\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可以看到，分表后，每个维度共有100张表，分别放在4个库上面。对于同一个订单，冗余存储了三份。未来，随着业务发展，还可以继续通过将表分到不同机器上来持续获得容量的提升。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分库分表后，订单数据存储到多个库多个表中，为应用层查询带来一定麻烦，解决分库分表后的查询主要有三种方案：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>MySQL服务器端支持：目前不支持。</li><li>中间件。</li><li>应用层。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">由于MySQL服务器端不能支持，我们只剩下中间件和应用层两个方案。中间件方案对应用透明，但是开发难度相对较大，当时这块没有资源去支持。于是，我们采用应用层方案来快速支持。结合应用开发框架（SPRING+MYBATIS），我们实现了一个轻量级的分库分表访问插件，避免将分库分表逻辑嵌入到业务代码。分库分表插件的实现包括如下几个要点。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>配置文件管理分库分表配置信息；</li><li>JAVA注解说明SQL语句分库分表信息；</li><li>JAVA AOP解析注解+查询配置文件，获取数据源及表名；</li><li>MYBATIS动态替换表名；</li><li>SPRING动态替换数据源。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过分库分表，解决了写容量扩展问题。但是分表后，会给查询带来一定的限制，只能支持主要维度的查询，其它维度的查询效率存在问题。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">ES搜索</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单表分表之后，对于ID、用户ID、门店ID外的查询（比如按照手机号前缀查询）存在效率问题。这部分通常是复杂查询，可以通过全文搜索来支持。在订单系统中，我们通过ES来解决分表后非分表维度的复杂查询效率问题。具体来说，使用ES，主要涉及如下几点。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>通过databus将订单数据同步到ES。</li><li>同步数据时，通过批量写入来降低ES写入压力。</li><li>通过ES的分片机制来支持扩展性。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">小结</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过对存储层的可扩展性改造，使得订单系统存储层具有较好的可扩展性。对于中间层的可扩展性与上面提到的中间层可用性一样，中间层本身已提供解决方案，直接复用即可。对于服务层，订单系统服务层提供的都是无状态服务，对于无状态服务，通过增加机器，即可获得更高的容量，完成扩容。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过对订单系统各层可扩展性改造，使得订单系统具备了较好的可扩展性，能够支持业务的持续发展，当前，订单系统已具体千万单/日的容量。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">上面几部分都是在介绍如何通过架构、技术实现等手段来搭建一个可靠、完善的订单系统。但是，要保障系统的持续健康运行，光搭建系统还不够，运维也是很重要的一环。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">智能运维的订单系统</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期，对系统及业务的运维主要是采用人肉的方式，即外部反馈问题，RD通过排查日志等来定位问题。随着系统的复杂、业务的增长，问题排查难度不断加大，同时反馈问题的数量也在逐步增多。通过人肉方式效率偏低，并不能很好的满足业务的需求。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为提升运维效率、降低人力成本，我们对系统及业务运维进行自动化、智能化改进，改进包括事前、事中、事后措施。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">事前措施</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事前措施的目的是为提前发现隐患，提前解决，避免问题恶化。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在事前措施这块，我们主要采取如下几个手段：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>定期线上压测：通过线上压测，准确评估系统容量，提前发现系统隐患；</li><li>周期性系统健康体检：通过周期检测CPU利用率、内存利用率、接口QPS、接口TP95、异常数，取消订单数等指标是否异常，可以提前发现提前发现潜在问题、提前解决；</li><li>全链路关键日志：通过记录全链路关键日志，根据日志，自动分析反馈订单问题原因，给出处理结果，有效提高反馈处理效率。</li></ol><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">事中措施</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事中措施的目的是为及时发现问题、快速解决问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事中这块，我们采取的手段包括：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>订单监控大盘：实时监控订单业务指标，异常时报警；</li><li>系统监控大盘：实时监控订单系统指标，异常时报警；</li><li>完善的SOP：报警后，通过标准流程，快速定位问题、解决问题。</li></ol><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">事后措施</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事后措施是指问题发生后，分析问题原因，彻底解决。并将相关经验教训反哺给事前、事中措施，不断加强事先、事中措施，争取尽量提前发现问题，将问题扼杀在萌芽阶段。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过将之前人肉进行的运维操作自动化、智能化，提升了处理效率、减少了运维的人力投入</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('92', '分布式队列编程优化篇', '前言“分布式队列编程”是一个系列文，之前我们已经发布了《分布式队列编程模型、实战》，主要剖析了分布式队列编程模型的需求来源、定义、结构以及其变化多样性；根据作者在新美大实际工作经验，给出了队列式编程在分布式环境下的一些具体应用。本文将重点阐述工程师运用分布式队列编程构架的时候，在生产者、分布式队列以及消费者这', '2016-10-27 19:21:57', '0', '0', '<h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">前言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">“分布式队列编程”是一个系列文，之前我们已经发布了《分布式队列编程模型、实战》，主要剖析了分布式队列编程模型的需求来源、定义、结构以及其变化多样性；根据作者在新美大实际工作经验，给出了队列式编程在分布式环境下的一些具体应用。本文将重点阐述工程师运用分布式队列编程构架的时候，在生产者、分布式队列以及消费者这三个环节的注意点以及优化建议。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">确定采用分布式队列编程模型之后，主体架构就算完成了，但工程师的工作还远远未结束。天下事必做于细，细节是一个不错的架构向一个优秀的系统进阶的关键因素。优化篇选取了作者以及其同事在运用分布式队列编程模型架构时所碰到的典型问题和解决方案。这里些问题出现的频率较高，如果你经验不够，很可能会“踩坑”。希望通过这些讲解，帮助读者降低分布式队列编程模型的使用门槛。本文将对分布式队列编程模型的三种角色：生产者（Producer），分布式队列（Queue），消费者（Consumer）分别进行优化讨论。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">生产者优化</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在分布式队列编程中，生产者往往并非真正的生产源头，只是整个数据流中的一个节点，这种生产者的操作是处理－转发（Process-Forward）模式。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这种模式给工程师们带来的第一个问题是吞吐量问题。这种模式下运行的生产者，一边接收上游的数据，一边将处理完的数据发送给下游。本质上，它是一个非常经典的数学问题，其抽象模型是一些没有盖子的水箱，每个水箱接收来自上一个水箱的水，进行处理之后，再将水发送到下一个水箱。工程师需要预测水源的流量、每个环节水箱的处理能力、水龙头的排水速度，最终目的是避免水溢出水箱，或者尽可能地减小溢出事件的概率。实际上流式编程框架以及其开发者花了大量的精力去处理和优化这个问题。下文的缓存优化和批量写入优化都是针对该问题的解决方案。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个需要考虑的问题是持久化。由于各种原因，系统总是会宕机。如果信息比较敏感，例如计费信息、火车票订单信息等，工程师们需要考虑系统宕机所带来的损失，找到让损失最小化的解决方案。持久化优化重点解决这一类问题。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">缓存优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">处于“处理－转发”模式下运行的生产者往往被设计成请求驱动型的服务，即每个请求都会触发一个处理线程，线程处理完后将结果写入分布式队列。如果由于某种原因队列服务不可用，或者性能恶化，随着新请求的到来，生产者的处理线程就会产生堆积。这可能会导致如下两个问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>系统可用性降低。由于每个线程都需要一定的内存开销，线程过多会使系统内存耗尽，甚至可能产生雪崩效应导致最终完全不可用。</li><li>信息丢失。为了避免系统崩溃，工程师可能会给请求驱动型服务设置一个处理线程池，设置最大处理线程数量。这是一种典型的降级策略，目的是为了系统崩溃。但是，后续的请求会因为没有处理线程而被迫阻塞，最终可能产生信息丢失。例如：对于广告计费采集，如果采集系统因为线程耗尽而不接收客户端的计费行为，这些计费行为就会丢失。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">缓解这类问题的思路来自于CAP理论，即通过降低一致性来提高可用性。生产者接收线程在收到请求之后第一时间不去处理，直接将请求缓存在内存中（牺牲一致性），而在后台启动多个处理线程从缓存中读取请求、进行处理并写入分布式队列。与线程所占用的内存开销相比，大部分的请求所占内存几乎可以忽略。通过在接收请求和处理请求之间增加一层内存缓存，可以大大提高系统的处理吞吐量和可扩展性。这个方案本质上是一个内存生产者消费者模型。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">批量写入优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果生产者的请求过大，写分布式队列可能成为性能瓶颈，有如下几个因素：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>队列自身性能不高。</li><li>分布式队列编程模型往往被应用在跨机房的系统里面，跨机房的网络开销往往容易成为系统瓶颈。</li><li>消息确认机制往往会大大降低队列的吞吐量以及响应时间。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果在处理请求和写队列之间添加一层缓存，消息写入程序批量将消息写入队列，可以大大提高系统的吞吐量。原因如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>批量写队列可以大大减少生产者和分布式队列的交互次数和消息传输量。特别是对于高吞吐小载荷的消息实体，批量写可以显著降低网络传输量。</li><li>对于需要确认机制的消息，确认机制往往会大大降低队列的吞吐量以及响应时间，某些高敏感的消息需要多个消息中间件代理同时确认，这近一步恶化性能。在生产者的应用层将多条消息批量组合成一个消息体，消息中间件就只需要对批量消息进行一次确认，这可能会数量级的提高消息传输性能。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">持久化优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过添加缓存，消费者服务的吞吐量和可用性都得到了提升。但缓存引入了一个新问题——内存数据丢失。对于敏感数据，工程师需要考虑如下两个潜在问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>如果内存中存在未处理完的请求，而某些原因导致生产者服务宕机，内存数据就会丢失而可能无法恢复。</li><li>如果分布式队列长时间不可用，随着请求数量的不断增加，最终系统内存可能会耗尽而崩溃，内存的消息也可能丢失。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">所以缓存中的数据需要定期被持久化到磁盘等持久层设备中，典型的持久化触发策略主要有两种：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>定期触发，即每隔一段时间进行一次持久化。</li><li>定量触发，即每当缓存中的请求数量达到一定阈值后进行持久化。<br style=\"padding: 0px; margin: 0px;\"/>是否需要持久化优化，以及持久化策略应该由请求数据的敏感度、请求量、持久化性能等因素共同决定。</li></ul><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">中间件选型</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式队列不等同于各种开源的或者收费的消息中间件，甚至在一些场景下完全不需要使用消息中间件。但是，消息中间件产生的目的就是解决消息传递问题，这为分布式队列编程架构提供了很多的便利。在实际工作中，工程师们应该将成熟的消息中间件作为队列的首要备选方案。<br style=\"padding: 0px; margin: 0px;\"/>本小节对消息中间件的功能、模型进行阐述，并给出一些消息中间件选型、部署的具体建议。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">中间件的功能</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">明白一个系统的每个具体功能是设计和架构一个系统的基础。典型的消息中间件主要包含如下几个功能：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>消息接收</li><li>消息分发</li><li>消息存储</li><li>消息读取</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">概念模型</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">抽象的消息中间件模型包含如下几个角色：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>发送者和接收者客户端（Sender/Receiver Client），在具体实施过程中，它们一般以库的形式嵌入到应用程序代码中。</li><li>代理服务器（Broker Server），它们是与客户端代码直接交互的服务端代码。</li><li>消息交换机（Exchanger），接收到的消息一般需要通过消息交换机（Exchanger）分发到具体的消息队列中。</li><li>消息队列，一般是一块内存数据结构或持久化数据。<br style=\"padding: 0px; margin: 0px;\"/>概念模型如下图：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/messagequeue.png\" alt=\"消息队列中间件\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>为了提高分发性能，很多消息中间件把消息代理服务器的拓扑图发送到发送者和接收者客户端（Sender/Receiver Client），如此一来，发送源可以直接进行消息分发。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">选型标准</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">要完整的描述消息中间件各个方面非常困难，大部分良好的消息中间件都有完善的文档，这些文档的长度远远超过本文的总长度。但如下几个标准是工程师们在进行消息中间件选型时经常需要考虑和权衡的。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">性能</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">性能主要有两个方面需要考虑：吞吐量（Throughput）和响应时间（Latency）。<br style=\"padding: 0px; margin: 0px;\"/>不同的消息队列中间件的吞吐量和响应时间相差甚远，在选型时可以去网上查看一些性能对比报告。<br style=\"padding: 0px; margin: 0px;\"/>对于同一种中间件，不同的配置方式也会影响性能。主要有如下几方面的配置：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>是否需要确认机制，即写入队列后，或从队列读取后，是否需要进行确认。确认机制对响应时间的影响往往很大。</li><li>能否批处理，即消息能否批量读取或者写入。批量操作可以大大减少应用程序与消息中间件的交互次数和消息传递量，大大提高吞吐量。</li><li>能否进行分区（Partition）。将某一主题消息队列进行分区，同一主题消息可以有多台机器并行处理。这不仅仅能影响消息中间件的吞吐量，还决定着消息中间件是否具备良好的可伸缩性（Scalability）。</li><li>是否需要进行持久化。将消息进行持久化往往会同时影响吞吐量和响应时间。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">可靠性</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可靠性主要包含：可用性、持久化、确认机制等。<br style=\"padding: 0px; margin: 0px;\"/>高可用性的消息中间件应该具备如下特征：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>消息中间件代理服务器（Broker）具有主从备份。即当一台代理服务宕机之后，备用服务器能接管相关的服务。</li><li>消息中间件中缓存的消息是否有备份、并持久化。<br style=\"padding: 0px; margin: 0px;\"/>根据CAP理论，高可用、高一致性以及网络分裂不可兼得。根据作者的观察，大部分的消息中间件在面临网络分裂的情况下下，都很难保证数据的一致性以及可用性。 很多消息中间件都会提供一些可配置策略，让使用者在可用性和一致性之间做权衡。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">高可靠的消息中间件应该确保从发送者接收到的消息不会丢失。中间件代理服务器的宕机并不是小概率事件，所以保存在内存中的消息很容易发生丢失。大部分的消息中间件都依赖于消息的持久化去降低消息丢失损失，即将接收到的消息写入磁盘。即使提供持久化，仍有两个问题需要考虑：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>磁盘损坏问题。长时间来看，磁盘出问题的概率仍然存在。</li><li>性能问题。与操作内存相比，磁盘I/O的操作性能要慢几个数量级。频繁持久化不仅会增加响应时间，也会降低吞吐量。<br style=\"padding: 0px; margin: 0px;\"/>解决这两个问题的一个解决方案就是：多机确认，定期持久化。即消息被缓存在多台机器的内存中，只有每台机器都确认收到消息，才跟发送者确认（很多消息中间件都会提供相应的配置选项，让用户设置最少需要多少台机器接收到消息）。由于多台独立机器同时出故障的概率遵循乘法法则，指数级降低，这会大大提高消息中间件的可靠性。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">确认机制本质上是通讯的握手机制（Handshaking）。如果没有该机制，消息在传输过程中丢失将不会被发现。高敏感的消息要求选取具备确认机制的消息中间件。当然如果没有接收到消息中间件确认完成的指令，应用程序需要决定如何处理。典型的做法有两个：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>多次重试。</li><li>暂存到本地磁盘或其它持久化媒介。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">客户端接口所支持语言</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采用现存消息中间件就意味着避免重复造轮子。如果某个消息中间件未能提供对应语言的客户端接口，则意味着极大的成本和兼容性问题。</p><h3 id=\"-delivery-policies-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">投递策略（Delivery policies）</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">投递策略指的是一个消息会被发送几次。主要包含三种策略：最多一次（At most Once ）、最少一次（At least Once）、仅有一次（Exactly Once）。<br style=\"padding: 0px; margin: 0px;\"/>在实际应用中，只考虑消息中间件的投递策略并不能保证业务的投递策略，因为接收者在确认收到消息和处理完消息并持久化之间存在一个时间窗口。例如，即使消息中间件保证仅有一次（Exactly Once），如果接收者先确认消息，在持久化之前宕机，则该消息并未被处理。从应用的角度，这就是最多一次（At most Once）。反之，接收者先处理消息并完成持久化，但在确认之前宕机，消息就要被再次发送，这就是最少一次（At least Once）。 如果消息投递策略非常重要，应用程序自身也需要仔细设计。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">消费者优化</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">消费者是分布式队列编程中真正的数据处理方，数据处理方最常见的挑战包括：有序性、串行化（Serializability）、频次控制、完整性和一致性等。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">挑战</h2><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">有序性</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在很多场景下，如何保证队列信息的有序处理是一个棘手的问题。如下图，假定分布式队列保证请求严格有序，请求ri2和ri1都是针对同一数据记录的不同状态，ri2的状态比ri1的状态新。T1、T2、T3和T4代表各个操作发生的时间，并且 T1 &lt; T2 &lt; T3 &lt; T4（&quot;&lt;&quot;代表早于）。<br style=\"padding: 0px; margin: 0px;\"/>采用多消费者架构，这两条记录被两个消费者（Consumer1和Consumer2）处理后更新到数据库里面。Consumer1虽然先读取ri1但是却后写入数据库，这就导致，新的状态被老的状态覆盖，所以多消费者不保证数据的有序性。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/sequence.png\" alt=\"有序性\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">串行化</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">很多场景下，串行化是数据处理的一个基本需求，这是保证数据完整性、可恢复性、事务原子性等的基础。为了在并行计算系统里实现串行化，一系列的相关理论和实践算法被提出。对于分布式队列编程架构，要在在多台消费者实现串行化非常复杂，无异于重复造轮子。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">频次控制</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">有时候，消费者的消费频次需要被控制，可能的原因包括：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>费用问题。如果每次消费所引起的操作都需要收费，而同一个请求消息在队列中保存多份，不进行频次控制，就会导致无谓的浪费。</li><li>性能问题。每次消费可能会引起对其他服务的调用，被调用服务希望对调用量有所控制，对同一个请求消息的多次访问就需要有所控制。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">完整性和一致性</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">完整性和一致性是所有多线程和多进程的代码都面临的问题。在多线程或者多进程的系统中考虑完整性和一致性往往会大大地增加代码的复杂度和系统出错的概率。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">单例服务优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">几乎所有串行化理论真正解决的问题只有一个：性能。 所以，在性能允许的前提下，对于消费者角色，建议采用单实例部署。通过单实例部署，有序性、串行化、完整性和一致性问题自动获得了解决。另外，单实例部署的消费者拥有全部所需信息，它可以在频次控制上采取很多优化策略。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">天下没有免费的午餐。同样，单实例部署并非没有代价，它意味着系统可用性的降低，很多时候，这是无法接受的。解决可用性问题的最直接的思路就是冗余（Redundancy）。最常用的冗余方案是Master-slave架构，不过大部分的Master-slave架构都是Active/active模式，即主从服务器都提供服务。例如，数据库的Master-slave架构就是主从服务器都提供读服务，只有主服务器提供写服务。大部分基于负载均衡设计的Master-slave集群中，主服务器和从服务器同时提供相同的服务。这显然不满足单例服务优化需求。有序性和串行化需要Active/passive架构，即在某一时刻只有主实例提供服务，其他的从服务等待主实例失效。这是典型的领导人选举架构，即只有获得领导权的实例才能充当实际消费者，其他实例都在等待下一次选举。采用领导人选举的Active/passive架构可以大大缓解纯粹的单实例部署所带来的可用性问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">令人遗憾的是，除非工程师们自己在消费者实例里面实现Paxos等算法，并在每次消息处理之前都执行领导人选举。否则，理论上讲，没有方法可以保障在同一个时刻只有一个领导者。而对每个消息都执行一次领导人选举，显然性能不可行。实际工作中，最容易出现的问题时机发生在领导人交接过程中，即前任领导人实例变成辅助实例，新部署实例开始承担领导人角色。为了平稳过渡，这两者之间需要有一定的通讯机制，但是，无论是网络分区（Network partition）还是原领导人服务崩溃都会使这种通讯机制变的不可能。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对于完整性和一致性要求很高的系统，我们需要在选举制度和交接制度这两块进行优化。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">领导人选举架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">典型的领导人选举算法有Paxos、ZAB（ ZooKeeper Atomic Broadcast protocol）。为了避免重复造轮子，建议采用ZooKeeper的分布式锁来实现领导人选举。典型的ZooKeeper实现算法如下（摘自参考资料[4]）：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><em style=\"padding: 0px; margin: 0px;\">Let ELECTION be a path of choice of the application. To volunteer to be a leader:</em></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><em style=\"padding: 0px; margin: 0px;\">1.Create znode z with path &quot;ELECTION/guid-n_&quot; with both SEQUENCE and EPHEMERAL flags;</em><br style=\"padding: 0px; margin: 0px;\"/><em style=\"padding: 0px; margin: 0px;\">2.Let C be the children of &quot;ELECTION&quot;, and i be the sequence number of z;</em><br style=\"padding: 0px; margin: 0px;\"/><em style=\"padding: 0px; margin: 0px;\">3.Watch for changes on &quot;ELECTION/guid-n_j&quot;, where j is the largest sequence number such that j &lt; i and n_j is a znode in C;</em></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><em style=\"padding: 0px; margin: 0px;\">Upon receiving a notification of znode deletion:</em></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><em style=\"padding: 0px; margin: 0px;\">1.Let C be the new set of children of ELECTION;</em><br style=\"padding: 0px; margin: 0px;\"/><em style=\"padding: 0px; margin: 0px;\">2.If z is the smallest node in C, then execute leader procedure;</em><br style=\"padding: 0px; margin: 0px;\"/><em style=\"padding: 0px; margin: 0px;\">3.Otherwise, watch for changes on &quot;ELECTION/guid-n_j&quot;, where j is the largest sequence number such that j &lt; i and n_j is a znode in C;</em></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">领导人交接架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">领导人选举的整个过程发生在ZooKeeper集群中，各个消费者实例在这场选举中只充当被告知者角色（Learner）。领导人选举算法，只能保证最终只有一个Leader被选举出来，并不保障被告知者对Leader的理解是完全一致的。本质上，上文的架构里，选举的结果是作为令牌（Token）传递给消费者实例，消费者将自身的ID与令牌进行对比，如果相等，则开始执行消费操作。所以当发生领导人换届的情况，不同的Learner获知新Leader的时间并不同。例如，前任Leader如果因为网络问题与ZooKeeper集群断开，前任Leader只能在超时后才能判断自己是否不再承担Leader角色了，而新的Leader可能在这之前已经产生。另一方面，即使前任Leader和新Leader同时接收到新Leader选举结果，某些业务的完整性要求迫使前任Leader仍然完成当前未完成的工作。以上的讲解非常抽象，生活中却给了一些更加具体的例子。众所周知，美国总统候选人在选举结束后并不直接担任美国总统，从选举到最终承担总统角色需要一个过渡期。对于新当选Leader的候选人而言，过渡期间称之为加冕阶段（Inauguration）。对于即将卸任的Leader，过渡期称为交接阶段（HandOver）。所以一个基于领导人选举的消费者从加冕到卸任经历三个阶段：Inauguration、Execution、HandOver。在加冕阶段，新领导需要进行一些初始化操作。Execution阶段是真正的队列消息处理阶段。在交接阶段，前任领导需要进行一些清理操作。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">类似的，为了解决领导人交接问题，所有的消费者从代码实现的角度都需要实现类似ILeaderCareer接口。这个接口包含三个方发inaugurate()，handOver()和execute（）。某个部署实例（Learner）在得知自己承担领导人角色后，需要调用inaugurate()方法，进行加冕。主要的消费逻辑通过不停的执行execute（）实现，当确认自己不再承担领导人之后，执行handOver()进行交接。</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"class\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">interface</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">ILeaderCareer</span> </span>{ &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">void</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">inaugurate</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">()</span></span>; &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">void</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">handOver</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">()</span></span>; &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">execute</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">()</span></span>;\r\n}</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果承担领导人角色的消费者，在执行execute（）阶段得知自己将要下台，根据消息处理的原子性，该领导人可以决定是否提前终止操作。如果整个消息处理是一个原子性事务，直接终止该操作可以快速实现领导人换届。否则，前任领导必须完成当前消息处理后，才进入交接阶段。这意味着新的领导人，在inaugurate()阶段需要进行一定时间的等待。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">排重优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">频次控制是一个经典问题。对于分布式队列编程架构，相同请求重复出现在队列的情况并不少见。如果相同请求在队列中重复太多，排重优化就显得很必要。分布式缓存更新是一个典型例子，所有请求都被发送到队列中用于缓存更新。如果请求符合典型的高斯分布，在一段时间内会出现大量重复的请求，而同时多线程更新同一请求缓存显然没有太大的意义。<br style=\"padding: 0px; margin: 0px;\"/>排重优化是一个算法，其本质是基于状态机的编程，整个讲解通过模型、构思和实施三个步骤完成。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">模型</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">进行排重优化的前提是大量重复的请求。在模型这一小节，我们首先阐述重复度模型、以及不同重复度所导致的消费模型，最后基于这两个模型去讲解排重状态机。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">重复度模型</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先我们给出最小重复长度的概念。同一请求最小重复长度：同一请求在队列中的重复出现的最小间距。例如，请求ri第一次出现在位置3，第二次出现在10，最小重复长度等于7。<br style=\"padding: 0px; margin: 0px;\"/>是否需要进行排重优化取决于队列中请求的重复度。由于不同请求之间并不存在重复的问题，不失一般性，这里的模型只考了单个请求的重复度，重复度分为三个类：无重复、稀疏重复、高重复。<br style=\"padding: 0px; margin: 0px;\"/>无重复：在整个请求过程，没有任何一个请求出现一次以上。<br style=\"padding: 0px; margin: 0px;\"/>稀疏重复：主要的请求最小重复长度大于消费队列长度。<br style=\"padding: 0px; margin: 0px;\"/>高重复：大量请求最小重复长度小于消费队列长度。<br style=\"padding: 0px; margin: 0px;\"/>对于不同的重复度，会有不同的消费模型。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">无重复消费模型</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在整个队列处理过程中，所有的请求都不相同，如下图：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/nondup.png\" alt=\"无重复消费模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">稀疏重复消费模型</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">当同一请求最小重复长度大于消费者队列长度，如下图。假定有3个消费者，Consumer1将会处理r1，Consumer2将会处理r2，Consumer3将会处理r3，如果每个请求处理的时间严格相等，Consumer1在处理完r1之后，接着处理r4，Consumer2将会处理r2之后会处理r1。虽然r1被再次处理，但是任何时刻，只有这一个消费者在处理r1，不会出现多个消费者同时处理同一请求的场景。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/sparsedup.png\" alt=\"稀疏重复消费模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">高重复消费模型</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如下图，仍然假定有3个消费者，队列中前面4个请求都是r1，它会同时被3个消费者线程处理：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/highdup.png\" alt=\"高重复消费模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>显然，对于无重复和稀疏重复的分布式队列，排重优化并不会带来额外的好处。排重优化所针对的对象是高重复消费模型，特别是对于并行处理消费者比较多的情况，重复处理同一请求，资源消耗极大。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">排重状态机</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">排重优化的主要对象是高重复的队列，多个消费者线程或进程同时处理同一个幂等请求只会浪费计算资源并延迟其他待请求处理。所以，排重状态机的一个目标是处理唯一性，即：同一时刻，同一个请求只有一个消费者处理。如果消费者获取一条请求消息，但发现其他消费者正在处理该消息，则当前消费者应该处于等待状态。如果对同一请求，有一个消费者在处理，一个消费者在等待，而同一请求再次被消费者读取，再次等待则没有意义。所以，状态机的第二个目标是等待唯一性，即：同一时刻，同一个请求最多只有一个消费者处于等待状态。总上述，状态机的目标是：处理唯一性和等待唯一性。我们把正在处理的请求称为头部请求，正在等待的请求称为尾部请求。<br style=\"padding: 0px; margin: 0px;\"/>由于状态机的处理单元是请求，所以需要针对每一个请求建立一个排重状态机。基于以上要求，我们设计的排重状态机包含4个状态Init，Process，Block，Decline。各个状态之间转化过程如下图：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/dedup-automate.png\" alt=\"排重状态机\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>状态机创建时处于Init状态。</li><li>对Init状态进行Enqueue操作，即接收一个请求，开始处理（称为头部请求），状态机进入Process状态。</li><li>状态机处于Process状态，表明当前有消费者正在处理头部请求。此时，如果进行Dequeue操作，即头部请求处理完成，返回Init状态。如果进行Enqueue操作，即另一个消费者准备处理同一个请求，状态机进入Block状态（该请求称为尾部请求）。</li><li>状态机处于Block状态，表明头部请求正在处理，尾部请求处于阻塞状态。此时，进行Dequeue操作，即头部请求处理完成，返回Process状态，并且尾部请求变成头部请求，原尾部请求消费者结束阻塞状态，开始处理。进行Enqueue操作，表明一个新的消费者准备处理同一个请求，状态机进入Decline状态。</li><li>状态机进入Decline状态，根据等待唯一性目标，处理最新请求的消费者将被抛弃该消息，状态机自动转换回Block状态。</li></ol><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构思</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">状态机描述的是针对单个请求操作所引起状态变化，排重优化需要解决队列中所有请求的排重问题，需要对所有请求的状态机进行管理。这里只考虑单虚拟机内部对所有请求状态机的管理，对于跨虚拟机的管理可以采用类似的方法。对于多状态机管理主要包含三个方面：一致性问题、完整性问题和请求缓存驱逐问题。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">一致性问题</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">一致性在这里要求同一请求的不同消费者只会操作一个状态机。由于每个请求都产生一个状态机，系统将会包含大量的状态机。为了兼顾性能和一致性，我们采用ConcurrentHashMap保存所有的状态机。用ConcurrentHashMap而不是对整个状态机队列进行加锁，可以提高并行处理能力，使得系统可以同时操作不同状态机。为了避免处理同一请求的多消费者线程同时对ConcurrentHashMap进行插入所导致状态机不一致问题，我们利用了ConcurrentHashMap的putIfAbsent（）方法。代码方案如下，key2Status用于存储所有的状态机。消费者在处理请求之前，从状态机队列中读取排重状态机TrafficAutomate。如果没有找到，则创建一个新的状态机，并通过putIfAbsent（）方法插入到状态机队列中。</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">private</span> ConcurrentHashMap&lt;T, TrafficAutomate&gt; key2Status = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">new</span> ConcurrentHashMap();\r\nTrafficAutomate trafficAutomate = key2Status.get(key);<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(trafficAutomate == <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n{\r\n &nbsp; &nbsp;trafficAutomate = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">new</span> TrafficAutomate();\r\n &nbsp; &nbsp;TrafficAutomate oldAutomate = key2Status.putIfAbsent(key, trafficAutomate); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(oldAutomate != <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;trafficAutomate = oldAutomate;\r\n &nbsp; &nbsp;}\r\n}</code></pre><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">完整性问题</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">完整性要求保障状态机Init，Process，Block，Decline四种状态正确、状态之间的转换也正确。由于状态机的操作非常轻量级，兼顾完整性和降低代码复杂度，我们对状态机的所有方法进行加锁。</p><h4 id=\"-cache-eviction-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">请求缓存驱逐问题（Cache Eviction）</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果不同请求的数量太多，内存永久保存所有请求的状态机的内存开销太大。所以，某些状态机需要在恰当的时候被驱逐出内存。这里有两个思路：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>当状态机返回Init状态时，清除出队列。</li><li>启动一个后台线程，定时扫描状态机队列，采用LRU等标准缓存清除机制。</li></ul><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">标识问题</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">每个请求对应于一个状态机，不同的状态机采用不同的请求进行识别。<br style=\"padding: 0px; margin: 0px;\"/>对于同一状态机的不同消费者，在单虚拟机方案中，我们采用线程id进行标识。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实施</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">排重优化的主要功能都是通过排重状态机（TrafficAutomate）和状态机队列（QueueCoordinator）来实施的。排重状态机描述的是针对单个请求的排重问题，状态机队列解决所有请求状态机的排重问题。</p><h4 id=\"-trafficautomate-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">状态机实施（TrafficAutomate）</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据状态机模型，其主要操作为enQueue和deQueue，其状态由头部请求和尾部请求的状态共同决定，所以需要定义两个变量为head和tail，用于表示头部请求和尾部请求。为了确保多线程操作下状态机的完整性（Integraty），所有的操作都将加上锁。</p><h5 id=\"enqueue-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">enQueue操作</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">当一个消费者执行enQueue操作时：如果此时尾部请求不为空，根据等待唯一性要求，返回DECLINE，当前消费者应该抛弃该请求；如果头部请求为空，返回ACCPET，当前消费者应该立刻处理该消息；否则，返回BLOCK，该消费者应该等待，并不停的查看状态机的状态，一直到头部请求处理完成。enQueue代码如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">synchronized</span> ActionEnum <span class=\"title\" style=\"padding: 0px; margin: 0px;\">enQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> id)</span></span>{ \r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(tail != INIT_QUEUE_ID)\r\n &nbsp; &nbsp;{ &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> DECLINE;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(head == INIT_QUEUE_ID)\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;head = id; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> ACCEPT;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">else</span>\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;tail = id; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> BLOCK;\r\n &nbsp; &nbsp;}\r\n｝</code></pre><h5 id=\"dequeue-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">deQueue操作</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对于deQueue操作，首先将尾部请求赋值给头部请求，并将尾部请求置为无效。deQueue代码如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">synchronized</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">deQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> id)</span></span>{\r\n &nbsp; &nbsp; &nbsp; &nbsp;head = tail;\r\n &nbsp; &nbsp; &nbsp; &nbsp;tail = INIT_QUEUE_ID; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n}</code></pre><h4 id=\"-queuecoordinator-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">状态机队列实施(QueueCoordinator)</h4><h5 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">接口定义</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">状态机队列集中管理所有请求的排重状态机，所以其操作和单个状态机一样，即enQueue和deQueuqe接口。这两个接口的实现需要识别特定请求的状态机，所以它们的入参应该是请求。为了兼容不同类型的请求消息，我们采用了Java泛型编程。接口定义如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"class\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">interface</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">QueueCoordinator</span>&lt;<span class=\"title\" style=\"padding: 0px; margin: 0px;\">T</span>&gt; </span>{ &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">enQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(T key)</span></span>; &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">void</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">deQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(T key)</span></span>;\r\n\r\n}</code></pre><h5 id=\"enqueue-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">enQueue操作</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">enQueue操作过程如下：<br style=\"padding: 0px; margin: 0px;\"/>首先，根据传入的请求key值，获取状态机， 如果不存在则创建一个新的状态机，并保存在ConcurrentHashMap中。<br style=\"padding: 0px; margin: 0px;\"/>接下来，获取线程id作为该消费者的唯一标识，并对对应状态机进行enQueue操作。<br style=\"padding: 0px; margin: 0px;\"/>如果状态机返回值为ACCEPT或者DECLINE，返回业务层处理代码，ACCEPT意味着业务层需要处理该消息，DECLINE表示业务层可以抛弃当前消息。如果状态机返回值为Block，则该线程保持等待状态。<br style=\"padding: 0px; margin: 0px;\"/>异常处理。在某些情况下，头部请求线程可能由于异常，未能对状态机进行deQueue操作（作为组件提供方，不能假定所有的规范被使用方实施）。为了避免处于阻塞状态的消费者无期限地等待，建议对状态机设置安全超时时限。超过了一定时间后，状态机强制清空头部请求，返回到业务层，业务层开始处理该请求。<br style=\"padding: 0px; margin: 0px;\"/>代码如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">enQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(T key)</span> </span>{\r\n &nbsp; &nbsp;_loggingStastic();\r\n\r\n &nbsp; &nbsp;TrafficAutomate trafficAutomate = key2Status.get(key); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(trafficAutomate == <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;trafficAutomate = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">new</span> TrafficAutomate();\r\n &nbsp; &nbsp; &nbsp; &nbsp;TrafficAutomate oldAutomate = key2Status.putIfAbsent(key, trafficAutomate); &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(oldAutomate != <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n &nbsp; &nbsp; &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;trafficAutomate = oldAutomate;\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> threadId = Thread.currentThread().getId();\r\n\r\n &nbsp; &nbsp;ActionEnum action = trafficAutomate.enQueue(threadId); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(action == DECLINE)\r\n &nbsp; &nbsp;{ &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">false</span>;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">else</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (action == ACCEPT)\r\n &nbsp; &nbsp;{ &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"comment\" style=\"padding: 0px; margin: 0px;\">//Blocking status means some other thread are working on this key, so just wait till timeout</span>\r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> start = System.currentTimeMillis(); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> span = <span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>;\r\n &nbsp; &nbsp;do {\r\n &nbsp; &nbsp; &nbsp; &nbsp;_nonExceptionSleep(NAP_TIME_IN_MILL); &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(trafficAutomate.isHead(threadId))\r\n &nbsp; &nbsp; &nbsp; &nbsp;{ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;span = System.currentTimeMillis() - start;\r\n &nbsp; &nbsp;}<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">while</span>(span &lt;= timeout); &nbsp; &nbsp;<span class=\"comment\" style=\"padding: 0px; margin: 0px;\">//remove head so that it won&#39;t block the queue for too long</span>\r\n &nbsp; &nbsp;trafficAutomate.evictHeadByForce(threadId); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n}</code></pre><h5 id=\"dequeue-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">deQueue操作</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">deQueue操作首先从ConcurrentHashMap获取改请求所对应的状态机，接着获取该线程的线程id，对状态机进行deQueue操作。<br style=\"padding: 0px; margin: 0px;\"/>enQueue代码如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">void</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">deQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(T key)</span> </span>{\r\n &nbsp; &nbsp;TrafficAutomate trafficAutomate = key2Status.get(key); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(trafficAutomate == <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;logger.error(<span class=\"string\" style=\"padding: 0px; margin: 0px;\">&quot;key {} doesn&#39;t exist &quot;</span>, key); &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span>;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> threadId = Thread.currentThread().getId();\r\n\r\n &nbsp; &nbsp;trafficAutomate.deQueue(threadId)；\r\n}</code></pre><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">源代码</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">完整源代码可以在<a href=\"https://github.com/dinglau2008/QueueCoordinator/tree/master/src\" title=\"QueueCoordinator\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">QueueCoordinator</a>获取。</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('93', '分布式队列编程：模型、实战', '介绍作为一种基础的抽象数据结构，队列被广泛应用在各类编程中。大数据时代对跨进程、跨机器的通讯提出了更高的要求，和以往相比，分布式队列编程的运用几乎已无处不在。但是，这种常见的基础性的事物往往容易被忽视，使用者往往会忽视两点：使用分布式队列的时候，没有意识到它是队列。有具体需求的时候，忘记了分布式队列的存在。文', '2016-10-27 19:22:21', '0', '0', '<h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">介绍</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">作为一种基础的抽象数据结构，队列被广泛应用在各类编程中。大数据时代对跨进程、跨机器的通讯提出了更高的要求，和以往相比，分布式队列编程的运用几乎已无处不在。但是，这种常见的基础性的事物往往容易被忽视，使用者往往会忽视两点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>使用分布式队列的时候，没有意识到它是队列。</li><li>有具体需求的时候，忘记了分布式队列的存在。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">文章首先从最基础的需求出发，详细剖析分布式队列编程模型的需求来源、定义、结构以及其变化多样性。通过这一部分的讲解，作者期望能在两方面帮助读者：一方面，提供一个系统性的思考方法，使读者能够将具体需求关联到分布式队列编程模型，具备进行分布式队列架构的能力；另一方面，通过全方位的讲解，让读者能够快速识别工作中碰到的各种分布式队列编程模型。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">文章的第二部分实战篇。根据作者在新美大实际工作经验，给出了队列式编程在分布式环境下的一些具体应用。这些例子的基础模型并非首次出现在互联网的文档中，但是所有的例子都是按照挑战、构思、架构三个步骤进行讲解的。这种讲解方式能给读者一个“从需求出发去构架分布式队列编程”的旅程。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列编程模型</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">模型篇从基础的需求出发，去思考何时以及如何使用分布式队列编程模型。建模环节非常重要，因为大部分中高级工程师面临的都是具体的需求，接到需求后的第一个步骤就是建模。通过本篇的讲解，希望读者能够建立起从需求到分布式队列编程模型之间的桥梁。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">何时选择分布式队列</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通讯是人们最基本的需求，同样也是计算机最基本的需求。对于工程师而言，在编程和技术选型的时候，更容易进入大脑的概念是RPC、RESTful、Ajax、Kafka。在这些具体的概念后面，最本质的东西是“通讯”。所以，大部分建模和架构都需要从“通讯”这个基本概念开始。当确定系统之间有通讯需求的时候，工程师们需要做很多的决策和平衡，这直接影响工程师们是否会选择分布式队列编程模型作为架构。从这个角度出发，影响建模的因素有四个：When、Who、Where、How。</p><h3 id=\"when-vs-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">When：同步VS异步</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通讯的一个基本问题是：发出去的消息什么时候需要被接收到？这个问题引出了两个基础概念：“同步通讯”和“异步通讯”。根据理论抽象模型，同步通讯和异步通讯最本质的差别来自于时钟机制的有无。同步通讯的双方需要一个校准的时钟，异步通讯的双方不需要时钟。现实的情况是，没有完全校准的时钟，所以没有绝对的同步通讯。同样，绝对异步通讯意味着无法控制一个发出去的消息被接收到的时间点，无期限的等待一个消息显然毫无实际意义。所以，实际编程中所有的通讯既不是“同步通讯”也不是“异步通讯”；或者说，既是“同步通讯”也是“异步通讯”。特别是对于应用层的通讯，其底层架构可能既包含“同步机制”也包含“异步机制”。判断“同步”和“异步”消息的标准问题太深，而不适合继续展开。作者这里给一些启发式的建议：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>发出去的消息是否需要确认，如果不需要确认，更像是异步通讯，这种通讯有时候也称为单向通讯（One-Way Communication）。</li><li>如果需要确认，可以根据需要确认的时间长短进行判断。时间长的更像是异步通讯，时间短的更像是同步通讯。当然时间长短的概念是纯粹的主观概念，不是客观标准。</li><li>发出去的消息是否阻塞下一个指令的执行，如果阻塞，更像是同步，否则，更像是异步。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">无论如何，工程师们不能生活在混沌之中，不做决定往往是最坏的决定。当分析一个通讯需求或者进行通讯构架的时候，工程师们被迫作出“同步”还是“异步”的决定。当决策的结论是“异步通讯”的时候，分布式队列编程模型就是一个备选项。</p><h3 id=\"who-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Who：发送者接收者解耦</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在进行通讯需求分析的时候，需要回答的另外一个基本问题是：消息的发送方是否关心谁来接收消息，或者反过来，消息接收方是否关心谁来发送消息。如果工程师的结论是：消息的发送方和接收方不关心对方是谁、以及在哪里，分布式队列编程模型就是一个备选项。因为在这种场景下，分布式队列架构所带来的解耦能给系统架构带来这些好处：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>无论是发送方还是接收方，只需要跟消息中间件通讯，接口统一。统一意味着降低开发成本。</li><li>在不影响性能的前提下，同一套消息中间件部署，可以被不同业务共享。共享意味着降低运维成本。</li><li>发送方或者接收方单方面的部署拓扑的变化不影响对应的另一方。解藕意味着灵活和可扩展。</li></ul><h3 id=\"where-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Where：消息暂存机制</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在进行通讯发送方设计的时候，令工程师们苦恼的问题是：如果消息无法被迅速处理掉而产生堆积怎么办、能否被直接抛弃？如果根据需求分析，确认存在消息积存，并且消息不应该被抛弃，就应该考虑分布式队列编程模型构架，因为队列可以暂存消息。</p><h3 id=\"how-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">How：如何传递</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对通讯需求进行架构，一系列的基础挑战会迎面而来，这包括：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>可用性，如何保障通讯的高可用。</li><li>可靠性，如何保证消息被可靠地传递。</li><li>持久化，如何保证消息不会丢失。</li><li>吞吐量和响应时间。</li><li>跨平台兼容性。<br style=\"padding: 0px; margin: 0px;\"/>除非工程师对造轮子有足够的兴趣，并且有充足的时间，采用一个满足各项指标的分布式队列编程模型就是一个简单的选择。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列编程定义</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">很难给出分布式队列编程模型的精确定义，由于本文偏重于应用，作者并不打算完全参照某个标准的模型。总体而言：分布式队列编程模型包含三类角色：发送者（Sender）、分布式队列（Queue）、接收者（Receiver）。发送者和接收者分别指的是生产消息和接收消息的应用程序或服务。<br style=\"padding: 0px; margin: 0px;\"/>需要重点明确的概念是分布式队列，它是提供以下功能的应用程序或服务：1. 接收“发送者”产生的消息实体；2. 传输、暂存该实体；3. 为“接收者”提供读取该消息实体的功能。特定的场景下，它当然可以是Kafka、RabbitMQ等消息中间件。但它的展现形式并不限于此，例如：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>队列可以是一张数据库的表，发送者将消息写入表，接收者从数据表里读消息。</li><li>如果一个程序把数据写入Redis等内存Cache里面，另一个程序从Cache里面读取，缓存在这里就是一种分布式队列。</li><li>流式编程里面的的数据流传输也是一种队列。</li><li>典型的MVC（Model–view–controller）设计模式里面，如果Model的变化需要导致View的变化，也可以通过队列进行传输。这里的分布式队列可以是数据库，也可以是某台服务器上的一块内存。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">抽象模型</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最基础的分布式队列编程抽象模型是点对点模型，其他抽象构架模型居于改基本模型上各角色的数量和交互变化所导致的不同拓扑图。具体而言，不同数量的发送者、分布式队列以及接收者组合形成了不同的分布式队列编程模型。记住并理解典型的抽象模型结构对需求分析和建模而言至关重要，同时也会有助于学习和深入理解开源框架以及别人的代码。</p><h3 id=\"-point-to-point-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">点对点模型（Point-to-point）</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">基础模型中，只有一个发送者、一个接收者和一个分布式队列。如下图所示：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/point2point.png\" alt=\"点对点模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-producer-consumer-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">生产者消费者模型（Producer–consumer）</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果发送者和接收者都可以有多个部署实例，甚至不同的类型；但是共用同一个队列，这就变成了标准的生产者消费者模型。在该模型，三个角色一般称之为生产者（Producer）、分布式队列（Queue）、消费者（Consumer）。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/producer-consumer.png\" alt=\"生产者消费者模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-pubsub-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">发布订阅模型（PubSub）</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果只有一类发送者，发送者将产生的消息实体按照不同的主题（Topic）分发到不同的逻辑队列。每种主题队列对应于一类接收者。这就变成了典型的发布订阅模型。在该模型，三个角色一般称之为发布者（Publisher），分布式队列（Queue），订阅者（Subscriber）。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/pubsub.png\" alt=\"发布订阅模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"mvc-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">MVC模型</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果发送者和接收者存在于同一个实体中，但是共享一个分布式队列。这就很像经典的MVC模型。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/dist_queue_program/mvc.png\" alt=\"MVC模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">编程模型</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了让读者更好地理解分布式队列编程模式概念，这里将其与一些容易混淆的概念做一些对比 。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列模型编程和异步编程</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式队列编程模型的通讯机制一般是采用异步机制，但是它并不等同于异步编程。<br style=\"padding: 0px; margin: 0px;\"/>首先，并非所有的异步编程都需要引入队列的概念，例如：大部分的操作系统异步I/O操作都是通过硬件中断（ Hardware Interrupts）来实现的。<br style=\"padding: 0px; margin: 0px;\"/>其次，异步编程并不一定需要跨进程，所以其应用场景并不一定是分布式环境。<br style=\"padding: 0px; margin: 0px;\"/>最后，分布式队列编程模型强调发送者、接收者和分布式队列这三个角色共同组成的架构。这三种角色与异步编程没有太多关联。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列模式编程和流式编程</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着Spark Streaming，Apache Storm等流式框架的广泛应用，流式编程成了当前非常流行的编程模式。但是本文所阐述的分布式队列编程模型和流式编程并非同一概念。<br style=\"padding: 0px; margin: 0px;\"/>首先，本文的队列编程模式不依赖于任何框架，而流式编程是在具体的流式框架内的编程。<br style=\"padding: 0px; margin: 0px;\"/>其次，分布式队列编程模型是一个需求解决方案，关注如何根据实际需求进行分布式队列编程建模。流式框架里的数据流一般都通过队列传递，不过，流式编程的关注点比较聚焦，它关注如何从流式框架里获取消息流，进行map、reduce、 join等转型（Transformation）操作、生成新的数据流，最终进行汇总、统计。</p><hr style=\"padding: 0px; margin: 1em 0px; height: 2px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(170, 170, 170); border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"/><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列编程实战篇</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这里所有的项目都是作者在新美大工作的真实案例。实战篇的关注点是训练建模思路，所以这些例子都按照挑战、构思、架构三个步骤进行讲解。受限于保密性要求，有些细节并未给出，但这些细节并不影响讲解的完整性。另一方面，特别具体的需求容易让人费解，为了使讲解更加顺畅，作者也会采用一些更通俗易懂的例子。通过本篇的讲解，希望和读者一起去实践“如何从需求出发去构架分布式队列编程模型”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">需要声明的是，这里的解决方案并不是所处场景的最优方案。但是，任何一个稍微复杂的问题，都没有最优解决方案，更谈不上唯一的解决方案。实际上，工程师每天所追寻的只是在满足一定约束条件下的可行方案。当然不同的约束会导致不同的方案，约束的松弛度决定了工程师的可选方案的宽广度。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">信息采集处理</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">信息采集处理应用广泛，例如：广告计费、用户行为收集等。作者碰到的具体项目是为广告系统设计一套高可用的采集计费系统。<br style=\"padding: 0px; margin: 0px;\"/>典型的广告CPC、CPM计费原理是：收集用户在客户端或者网页上的点击和浏览行为，按照点击和浏览进行计费。计费业务有如下典型特征：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>采集者和处理者解耦，采集发生在客户端，而计费发生在服务端。</li><li>计费与钱息息相关。</li><li>重复计费意味着灾难。</li><li>计费是动态实时行为，需要接受预算约束，如果消耗超过预算，则广告投放需要停止。</li><li>用户的浏览和点击量非常大。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">挑战</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">计费业务的典型特征给我们带来了如下挑战：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>高吞吐量－－广告的浏览和点击量非常巨大，我们需要设计一个高吞吐量的采集架构。</li><li>高可用性－－计费信息的丢失意味着直接的金钱损失。任何处理服务器的崩溃不应该导致系统不可用。</li><li>高一致性要求－－计费是一个实时动态处理过程，但要受到预算的约束。收集到的浏览和点击行为如果不能快速处理，可能会导致预算花超，或者点击率预估不准确。所以采集到的信息应该在最短的时间内传输到计费中心进行计费。</li><li>完整性约束－－这包括反作弊规则，单个用户行为不能重复计费等。这要求计费是一个集中行为而非分布式行为。</li><li>持久化要求－－计费信息需要持久化，避免因为机器崩溃而导致收集到的数据产生丢失。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构思</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采集的高可用性意味着我们需要多台服务器同时采集，为了避免单IDC故障，采集服务器需要部署在多IDC里面。<br style=\"padding: 0px; margin: 0px;\"/>实现一个高可用、高吞吐量、高一致性的信息传递系统显然是一个挑战，为了控制项目开发成本，采用开源的消息中间件进行消息传输就成了必然选择。<br style=\"padding: 0px; margin: 0px;\"/>完整性约束要求集中进行计费，所以计费系统发生在核心IDC。<br style=\"padding: 0px; margin: 0px;\"/>计费服务并不关心采集点在哪里，采集服务也并不关心谁进行计费。<br style=\"padding: 0px; margin: 0px;\"/>根据以上构思，我们认为采集计费符合典型的“生产者消费者模型”。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采集计费系统架构图如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>用户点击浏览收集服务（Click/View Collector）作为生产者部署在多个机房里，以提高收集服务可用性。</li><li>每个机房里采集到的数据通过消息队列中间件发送到核心机房IDC_Master。</li><li>Billing服务作为消费者部署在核心机房集中计费。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/infomation-collector.png\" alt=\"计费采集架构\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采用此架构，我们可以在如下方面做进一步优化：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>提高可扩展性，如果一个Billing部署实例在性能上无法满足要求，可以对采集的数据进行主题分区（Topic Partition）计费，即采用发布订阅模式以提高可扩展性（Scalability）。</li><li>全局排重和反作弊。采用集中计费架构解决了点击浏览排重的问题，另一方面，这也给反作弊提供了全局信息。</li><li>提高计费系统的可用性。采用下文单例服务优化策略，在保障计费系统集中性的同时，提高计费系统可用性。</li></ul><h2 id=\"-distributed-cache-replacement-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式缓存更新（Distributed Cache Replacement）</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">缓存是一个非常宽泛的概念，几乎存在于系统各个层级。典型的缓存访问流程如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>接收到请求后，先读取缓存，如果命中则返回结果。</li><li>如果缓存不命中，读取DB或其它持久层服务，更新缓存并返回结果。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/cache-replacement.png\" alt=\"缓存更新\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>对于已经存入缓存的数据，其更新时机和更新频率是一个经典问题，即缓存更新机制（Cache Replacement Algorithms ）。典型的缓存更新机制包括：近期最少使用算法（LRU）、最不经常使用算法（LFU）。这两种缓存更新机制的典型实现是：启动一个后台进程，定期清理最近没有使用的，或者在一段时间内最少使用的数据。由于存在缓存驱逐机制，当一个请求在没有命中缓存时，业务层需要从持久层中获取信息并更新缓存，提高一致性。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">挑战</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式缓存给缓存更新机制带来了新的问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>数据一致性低。分布式缓存中键值数量巨大，从而导致LRU或者LFU算法更新周期很长。在分布式缓存中，拿LRU算法举例，其典型做法是为每个Key值设置一个生存时间（TTL），生存时间到期后将该键值从缓存中驱逐除去。考虑到分布式缓存中庞大的键值数量，生存时间往往会设置的比较长，这就导致缓存和持久层数据不一致时间很长。如果生存时间设置过短，大量请求无法命中缓存被迫读取持久层，系统响应时间会急剧恶化。</li><li>新数据不可用。在很多场景下，由于分布式缓存和持久层的访问性能相差太大，在缓存不命中的情况下，一些应用层服务不会尝试读取持久层，而直接返回空结果。漫长的缓存更新周期意味着新数据的可用性就被牺牲了。从统计的角度来讲，新键值需要等待半个更新周期才会可用。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构思</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据上面的分析，分布式缓存需要解决的问题是：在保证读取性能的前提下，尽可能地提高老数据的一致性和新数据的可用性。如果仍然假定最近被访问的键值最有可能被再次访问（这是LRU或者LFU成立的前提），键值每次被访问后触发一次异步更新就是提高可用性和一致性最早的时机。无论是高性能要求还是业务解耦都要求缓存读取和缓存更新分开，所以我们应该构建一个单独的集中的缓存更新服务。集中进行缓存更新的另外一个好处来自于频率控制。由于在一段时间内，很多类型访问键值的数量满足高斯分布，短时间内重复对同一个键值进行更新Cache并不会带来明显的好处，甚至造成缓存性能的下降。通过控制同一键值的更新频率可以大大缓解该问题，同时有利于提高整体数据的一致性，参见“排重优化”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">综上所述，业务访问方需要把请求键值快速传输给缓存更新方，它们之间不关心对方的业务。要快速、高性能地实现大量请求键值消息的传输，高性能分布式消息中间件就是一个可选项。这三方一起组成了一个典型的分布式队列编程模型。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如下图，所有的业务请求方作为生产者，在返回业务代码处理之前将请求键值写入高性能队列。Cache Updater作为消费者从队列中读取请求键值，将持久层中数据更新到缓存中。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/distributed-cache-replacement.png\" alt=\"分布式缓存更新\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>采用此架构，我们可以在如下方面做进一步优化：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>提高可扩展性，如果一个Cache Updater在性能上无法满足要求，可以对键值进行主题分区（Topic Partition）进行并行缓存更新，即采用发布订阅模式以提高可扩展性（Scalability）。</li><li>更新频率控制。缓存更新都集中处理，对于发布订阅模式，同一类主题（Topic）的键值集中处理。Cache Updater可以控制对同一键值的在短期内的更新频率（参见下文排重优化）。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">后台任务处理</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">典型的后台任务处理应用包括工单处理、火车票预订系统、机票选座等。我们所面对的问题是为运营人员创建工单。一次可以为多个运营人员创建多个工单。这个应用场景和火车票购买非常类似。工单相对来说更加抽象，所以，下文会结合火车票购买和运营人员工单分配这两种场景同时讲解。典型的工单创建要经历两个阶段：数据筛选阶段、工单创建阶段。例如，在火车票预订场景，数据筛选阶段用户选择特定时间、特定类型的火车，而在工单创建阶段，用户下单购买火车票。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">挑战</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">工单创建往往会面临如下挑战：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>数据一致性问题。以火车票预订为例，用户筛选火车票和最终购买之间往往有一定的时延，意味着两个操作之间数据是不一致的。在筛选阶段，工程师们需决定是否进行车票锁定，如果不锁定，则无法保证出票成功。反之，如果在筛选地时候锁定车票，则会大大降低系统效率和出票吞吐量。</li><li>约束问题。工单创建需要满足很多约束，主要包含两种类型：动态约束，与操作者的操作行为有关，例如购买几张火车票的决定往往发生在筛选最后阶段。隐性约束，这种约束很难通过界面进行展示，例如一个用户购买了5张火车票，这些票应该是在同一个车厢的临近位置。</li><li>优化问题。工单创建往往是约束下的优化，这是典型的统筹优化问题，而统筹优化往往需要比较长的时间。</li><li>响应时间问题。对于多任务工单，一个请求意味着多个任务产生。这些任务的创建往往需要遵循事务性原则，即All or Nothing。在数据层面，这意味着工单之间需要满足串行化需求（Serializability）。大数据量的串行化往往意味着锁冲突延迟甚至失败。无论是延迟机制所导致的长时延，还是高创建失败率，都会大大伤害用户体验。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构思</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果将用户筛选的最终规则做为消息存储下来，并发送给工单创建系统。此时，工单创建系统将具备创建工单所需的全局信息，具备在满足各种约束的条件下进行统筹优化的能力。如果工单创建阶段采用单实例部署，就可以避免数据锁定问题，同时也意味着没有锁冲突，所以也不会有死锁或任务延迟问题。<br style=\"padding: 0px; margin: 0px;\"/>居于以上思路，在多工单处理系统的模型中，筛选阶段的规则创建系统将充当生产者角色，工单创建系统将充当消费者角色，筛选规则将作为消息在两者之间进行传递。这就是典型的分布式队列编程架构。根据工单创建量的不同，可以采用数据库或开源的分布式消息中间件作为分布式队列。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">该架构流程如下图：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>用户首选进行规则创建，这个过程主要是一些搜索筛选操作；</li><li>用户点击工单创建，TicketRule Generator将把所有的筛选性组装成规则消息并发送到队列里面去；</li><li>Ticket Generator作为一个消费者，实时从队列中读取工单创建请求，开始真正创建工单。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/ticket-generation.png\" alt=\"工单创建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>采用该架构，我们在数据锁定、运筹优化、原子性问题都能得到比较好成果：</li><li>数据锁定推迟到工单创建阶段，可以减少数据锁定范围，最大程度的降低工单创建对其他在线操作的影响范围。</li><li>如果需要进行统筹优化，可以将Ticket Generator以单例模式进行部署（参见单例服务优化）。这样，Ticket Generator可以读取一段时间内的工单请求，进行全局优化。例如，在我们的项目中，在某种条件下，运营人员需要满足分级公平原则，即相同级别的运营人员的工单数量应该接近，不同级别的运营人员工单数量应该有所区分。如果不集中进行统筹优化，实现这种优化规则将会很困难。</li><li>保障了约束完整性。例如，在我们的场景里面，每个运营人员每天能够处理的工单是有数量限制的，如果采用并行处理的方式，这种完整性约束将会很难实施。</li></ul><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">预告</h1><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('94', 'Spring Boot快速入门', '简介在您第1次接触和学习Spring框架的时候，是否因为其繁杂的配置而退却了？在你第n次使用Spring框架的时候，是否觉得一堆反复黏贴的配置有一些厌烦？那么您就不妨来试试使用Spring Boot来让你更易上手，更简单快捷地构建Spring应用！Spring Boot让我们的Spring应用变的更轻量化。比', '2016-10-27 19:25:43', '0', '0', '<h1 id=\"简介\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">简介</h1><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在您第1次接触和学习Spring框架的时候，是否因为其繁杂的配置而退却了？在你第n次使用Spring框架的时候，是否觉得一堆反复黏贴的配置有一些厌烦？那么您就不妨来试试使用Spring Boot来让你更易上手，更简单快捷地构建Spring应用！</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot让我们的Spring应用变的更轻量化。比如：你可以仅仅依靠一个Java类来运行一个Spring引用。你也可以打包你的应用为jar并通过使用java -jar来运行你的Spring Web应用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot的主要优点：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>为所有Spring开发者更快的入门</li><li>开箱即用，提供各种默认配置来简化项目配置</li><li>内嵌式容器简化Web项目</li><li>没有冗余代码生成和XML配置的要求</li></ul><hr style=\"border-style: dashed; border-color: rgb(236, 239, 242); color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><h1 id=\"快速入门\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#快速入门\" class=\"headerlink\" title=\"快速入门\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速入门</h1><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本章主要目标完成Spring Boot基础项目的构建，并且实现一个简单的Http请求处理，通过这个例子对Spring Boot有一个初步的了解，并体验其结构简单、开发快速的特性。</p><h2 id=\"系统要求：\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#系统要求：\" class=\"headerlink\" title=\"系统要求：\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>系统要求：</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Java 7及以上</li><li>Spring Framework 4.1.5及以上</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">本文采用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">Java 1.8.0_73</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">Spring Boot 1.3.2</code>调试通过。</strong></p><h2 id=\"使用Maven构建项目\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#使用Maven构建项目\" class=\"headerlink\" title=\"使用Maven构建项目\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用Maven构建项目</h2><ol style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">SPRING INITIALIZR</code>工具产生基础项目</li><ol style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em;\"><li>访问：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://start.spring.io/</code></li><li>选择构建工具<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Maven Project</code>、Spring Boot版本<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">1.3.2</code>以及一些工程基本信息，可参考下图所示<a href=\"http://blog.didispace.com/content/images/2016/02/chapter1-1.png\" title=\"SPRING INITIALIZR\" class=\"gallery-item\" lg-event-uid=\"&amp;1\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/02/chapter1-1.png\" alt=\"SPRING INITIALIZR\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">SPRING INITIALIZR</span></li><li>点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Generate Project</code>下载项目压缩包</li></ol><li>解压项目包，并用IDE以<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Maven</code>项目导入，以<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">IntelliJ IDEA 14</code>为例：</li><ol style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em;\"><li>菜单中选择<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">File</code>–&gt;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">New</code>–&gt;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Project from Existing Sources...</code></li><li>选择解压后的项目文件夹，点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">OK</code></li><li>点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Import project from external model</code>并选择<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Maven</code>，点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Next</code>到底为止。</li><li>若你的环境有多个版本的JDK，注意到选择<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Java SDK</code>的时候请选择<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Java 7</code>以上的版本</li></ol></ol><h2 id=\"项目结构解析\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#项目结构解析\" class=\"headerlink\" title=\"项目结构解析\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>项目结构解析</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/02/chapter1-2.png\" title=\"项目结构\" class=\"gallery-item\" lg-event-uid=\"&amp;2\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/02/chapter1-2.png\" alt=\"项目结构\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">项目结构</span></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面步骤完成了基础项目的创建，如上图所示，Spring Boot的基础结构共三个文件（具体路径根据用户生成项目时填写的Group所有差异）：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/java</code>下的程序入口：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1Application</code></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources</code>下的配置文件：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/test/</code>下的测试入口：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1ApplicationTests</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">生成的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1Application</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1ApplicationTests</code>类都可以直接运行来启动当前创建的项目，由于目前该项目未配合任何数据访问或Web模块，程序会在加载完Spring之后结束运行。</p><h2 id=\"引入Web模块\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#引入Web模块\" class=\"headerlink\" title=\"引入Web模块\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入Web模块</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">当前的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>内容如下，仅引入了两个模块：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter</code>：核心模块，包括自动配置支持、日志和YAML</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-test</code>：测试模块，包括JUnit、Hamcrest、Mockito</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span>test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">引入Web模块，需添加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-web</code>模块：</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h2 id=\"编写HelloWorld服务\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#编写HelloWorld服务\" class=\"headerlink\" title=\"编写HelloWorld服务\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>编写HelloWorld服务</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">package</code>命名为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.web</code>（根据实际情况修改）</li><li>创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">HelloController</code>类，内容如下</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RestController</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">index</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Hello World&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>启动主程序，打开浏览器访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/hello</code>，可以看到页面输出<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Hello World</code></li></ul><h2 id=\"编写单元测试用例\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#编写单元测试用例\" class=\"headerlink\" title=\"编写单元测试用例\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>编写单元测试用例</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">打开的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/test/</code>下的测试入口<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1ApplicationTests</code>类。下面编写一个简单的单元测试来模拟http请求，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = MockServletContext.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@WebAppConfiguration</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Chapter1ApplicationTests</span> </span>{</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> MockMvc mvc;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		mvc = MockMvcBuilders.standaloneSetup(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> HelloController()).build();</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getHello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		mvc.perform(MockMvcRequestBuilders.get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>).accept(MediaType.APPLICATION_JSON))</p><p>				.andExpect(status().isOk())</p><p>				.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Hello World&quot;</span>)));</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MockServletContext</code>来构建一个空的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">WebApplicationContext</code>，这样我们创建的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">HelloController</code>就可以在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Before</code>函数中创建并传递到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MockMvcBuilders.standaloneSetup（）</code>函数中。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>注意引入下面内容，让<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">status</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">content</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">equalTo</code>函数可用</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">import</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> org.hamcrest.Matchers.equalTo;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">import</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">import</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至此已完成目标，通过Maven构建了一个空白Spring Boot项目，再通过引入web模块实现了一个简单的请求处理。</p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('95', 'Spring Boot开发Web应用', 'Spring Boot快速入门中我们完成了一个简单的RESTful Service，体验了快速开发的特性。在留言中也有朋友提到如何把处理结果渲染到页面上。那么本篇就在上篇基础上介绍一下如何进行Web应用的开发。静态资源访问在我们开发Web应用的时候，需要引用大量的js、css、图片等静态资源。默认配置Spri', '2016-10-27 19:26:11', '0', '0', '<blockquote style=\"margin: 0px -20px; padding: 10px 20px 10px 54px; border-width: 0px 0px 0px 4px; border-left-style: solid; border-left-color: rgb(238, 238, 238); outline: 0px; font-family: Georgia, &#39;Times New Roman&#39;, &#39;Microsoft Yahei&#39;, serif; font-size: 1.1em; vertical-align: baseline; position: relative; color: rgb(86, 90, 95); line-height: 32px; white-space: normal; widows: 1; background-color: rgb(252, 252, 252); background-position: initial initial; background-repeat: initial initial;\"><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 17.6px; vertical-align: baseline; line-height: 1.6em;\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 17.6px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot快速入门</a>中我们完成了一个简单的RESTful Service，体验了快速开发的特性。在留言中也有朋友提到如何把处理结果渲染到页面上。那么本篇就在上篇基础上介绍一下如何进行Web应用的开发。</p></blockquote><h2 id=\"静态资源访问\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#静态资源访问\" class=\"headerlink\" title=\"静态资源访问\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>静态资源访问</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在我们开发Web应用的时候，需要引用大量的js、css、图片等静态资源。</p><h3 id=\"默认配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#默认配置\" class=\"headerlink\" title=\"默认配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>默认配置</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot默认提供静态资源目录位置需置于classpath下，目录名需符合如下规则：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>/static</li><li>/public</li><li>/resources</li><li>/META-INF/resources</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">举例：我们可以在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/</code>目录下创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">static</code>，在该位置放置一个图片文件。启动程序后，尝试访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/D.jpg</code>。如能显示图片，配置成功。</p><h2 id=\"渲染Web页面\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#渲染Web页面\" class=\"headerlink\" title=\"渲染Web页面\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>渲染Web页面</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在之前的示例中，我们都是通过@RestController来处理请求，所以返回的内容为json对象。那么如果需要渲染html页面的时候，要如何实现呢？</p><h3 id=\"模板引擎\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#模板引擎\" class=\"headerlink\" title=\"模板引擎\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>模板引擎</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在动态HTML实现上Spring Boot依然可以完美胜任，并且提供了多种模板引擎的默认配置支持，所以在推荐的模板引擎下，我们可以很快的上手开发动态网站。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot提供了默认配置的模板引擎主要有以下几种：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Thymeleaf</li><li>FreeMarker</li><li>Velocity</li><li>Groovy</li><li>Mustache</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Spring Boot建议使用这些模板引擎，避免使用JSP，若一定要使用JSP将无法实现Spring Boot的多种特性，具体可见后文：支持JSP的配置</strong></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">当你使用上述模板引擎中的任何一个，它们默认的模板配置路径为：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/templates</code>。当然也可以修改这个路径，具体如何修改，可在后续各模板引擎的配置属性中查询并修改。</p><h4 id=\"Thymeleaf\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#Thymeleaf\" class=\"headerlink\" title=\"Thymeleaf\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Thymeleaf</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Thymeleaf是一个XML/XHTML/HTML5模板引擎，可用于Web与非Web环境中的应用开发。它是一个开源的Java库，基于Apache License 2.0许可，由Daniel Fernández创建，该作者还是Java加密库Jasypt的作者。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Thymeleaf提供了一个用于整合Spring MVC的可选模块，在应用开发中，你可以使用Thymeleaf来完全代替JSP或其他模板引擎，如Velocity、FreeMarker等。Thymeleaf的主要目标在于提供一种可被浏览器正确显示的、格式良好的模板创建方式，因此也可以用作静态建模。你可以使用它创建经过验证的XML与HTML模板。相对于编写逻辑或代码，开发者只需将标签属性添加到模板中即可。接下来，这些标签属性就会在DOM（文档对象模型）上执行预先制定好的逻辑。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">示例模板：</p><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">table</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">thead</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tr</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;#{msgs.headers.name}&quot;</span>&gt;</span>Name<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;#{msgs.headers.price}&quot;</span>&gt;</span>Price<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tr</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">thead</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tbody</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tr</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:each</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;prod : ${allProducts}&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${prod.name}&quot;</span>&gt;</span>Oranges<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${#numbers.formatDecimal(prod.price,1,2)}&quot;</span>&gt;</span>0.99<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tr</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tbody</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">table</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到Thymeleaf主要以属性的方式加入到html标签中，浏览器在解析html时，当检查到没有的属性时候会忽略，所以Thymeleaf的模板可以通过浏览器直接打开展现，这样非常有利于前后端的分离。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中使用Thymeleaf，只需要引入下面依赖，并在默认的模板路径<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/templates</code>下编写模板文件即可完成。</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成配置之后，举一个简单的例子，在快速入门工程的基础上，举一个简单的示例来通过Thymeleaf渲染一个页面。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Controller</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">index</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(ModelMap map)</span> </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 加入一个属性，用来在模板中读取</span></p><p>map.addAttribute(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;host&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://blog.didispace.com&quot;</span>);</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// return模板文件的名称，对应src/main/resources/templates/index.html</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;index&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">lang</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;en&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">meta</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">charset</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;UTF-8&quot;</span> /&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${host}&quot;</span>&gt;</span>Hello World<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如上页面，直接打开html页面展现Hello World，但是启动程序后，访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/</code>，则是展示Controller中host的值：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://blog.didispace.com</code>，做到了不破坏HTML自身内容的数据逻辑分离。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">更多Thymeleaf的页面语法，还请访问Thymeleaf的官方文档查询使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Thymeleaf的默认参数配置</strong></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如有需要修改默认配置的时候，只需复制下面要修改的属性到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中，并修改成需要的值，如修改模板文件的扩展名，修改默认的模板路径等。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Enable template caching.</span></p><p>spring.thymeleaf.cache=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span> </p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Check that the templates location exists.</span></p><p>spring.thymeleaf.check-template-location=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span> </p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Content-Type value.</span></p><p>spring.thymeleaf.content-type=text/html</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Enable MVC Thymeleaf view resolution.</span></p><p>spring.thymeleaf.enabled=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span> </p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Template encoding.</span></p><p>spring.thymeleaf.encoding=UTF-8</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Comma-separated list of view names that should be excluded from resolution.</span></p><p>spring.thymeleaf.excluded-view-names=</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Template mode to be applied to templates. See also StandardTemplateModeHandlers.</span></p><p>spring.thymeleaf.mode=HTML5</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Prefix that gets prepended to view names when building a URL.</span></p><p>spring.thymeleaf.prefix=classpath:/templates/</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Suffix that gets appended to view names when building a URL.</span></p><p>spring.thymeleaf.suffix=.html &nbsp;spring.thymeleaf.template-resolver-order= <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Order of the template resolver in the chain. spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.</span></p></pre></td></tr></tbody></table></figure></p><h3 id=\"支持JSP的配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#支持JSP的配置\" class=\"headerlink\" title=\"支持JSP的配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>支持JSP的配置</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot并不建议使用，但如果一定要使用，可以参考此工程作为脚手架：<a href=\"https://github.com/spring-projects/spring-boot/tree/v1.3.2.RELEASE/spring-boot-samples/spring-boot-sample-web-jsp\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">JSP支持</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot教程完整案例</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('96', 'Spring Boot工程结构推荐', '今天看了一位简书上朋友发来的工程，于是想到应该要写这么一篇。前人总结的最佳实践案例可以帮助我们免去很多不必要的麻烦。花点时间来看一下本文，绝对物超所值。工程结构（最佳实践）Spring Boot框架本身并没有对工程结构有特别的要求，但是按照最佳实践的工程结构可以帮助我们减少可能会遇见的坑，尤其是Spring包', '2016-10-27 19:26:30', '0', '0', '<blockquote style=\"margin: 0px -20px; padding: 10px 20px 10px 54px; border-width: 0px 0px 0px 4px; border-left-style: solid; border-left-color: rgb(238, 238, 238); outline: 0px; font-family: Georgia, &#39;Times New Roman&#39;, &#39;Microsoft Yahei&#39;, serif; font-size: 1.1em; vertical-align: baseline; position: relative; color: rgb(86, 90, 95); line-height: 32px; white-space: normal; widows: 1; background-color: rgb(252, 252, 252); background-position: initial initial; background-repeat: initial initial;\"><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 17.6px; vertical-align: baseline; line-height: 1.6em;\">今天看了一位简书上朋友发来的工程，于是想到应该要写这么一篇。前人总结的最佳实践案例可以帮助我们免去很多不必要的麻烦。花点时间来看一下本文，绝对物超所值。</p></blockquote><h2 id=\"工程结构（最佳实践）\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproject/#工程结构（最佳实践）\" class=\"headerlink\" title=\"工程结构（最佳实践）\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>工程结构（最佳实践）</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot框架本身并没有对工程结构有特别的要求，但是按照最佳实践的工程结构可以帮助我们减少可能会遇见的坑，尤其是Spring包扫描机制的存在，如果您使用最佳实践的工程结构，可以免去不少特殊的配置工作。</p><h3 id=\"典型示例\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproject/#典型示例\" class=\"headerlink\" title=\"典型示例\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>典型示例</h3><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>root package结构：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.example.myproject</code></li><li>应用主类<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Application.java</code>置于root package下，通常我们会在应用主类中做一些框架配置扫描等配置，我们放在root package下可以帮助程序减少手工配置来加载到我们希望被Spring加载的内容</li><li>实体（Entity）与数据访问层（Repository）置于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.example.myproject.domain</code>包下</li><li>逻辑层（Service）置于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.example.myproject.service</code>包下</li><li>Web层（web）置于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.example.myproject.web</code>包下</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>com</p><p>+- example</p><p>+- myproject</p><p>+- Application.java</p><p>|</p><p>+- domain</p><p>| &nbsp;+- Customer.java</p><p>| &nbsp;+- CustomerRepository.java</p><p>|</p><p>+- service</p><p>| &nbsp;+- CustomerService.java</p><p>|</p><p>+- web</p><p>| &nbsp;+- CustomerController.java</p><p>|</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">看看您现在的功能是否这样配置，如果不是，不妨尝试改变一下，看看是否可以去掉一些@Configuration配置？</strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('97', 'Spring Boot构建RESTful API与单元测试', '首先，回顾并详细说明一下在快速入门中使用的@Controller、@RestController、@RequestMapping注解。如果您对Spring MVC不熟悉并且还没有尝试过快速入门案例，建议先看一下快速入门的内容。@Controller：修饰class，用来创建处理http请求的对象@RestCo', '2016-10-27 19:26:55', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，回顾并详细说明一下在<a href=\"http://blog.didispace.com/spring-boot-learning-1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">快速入门</a>中使用的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RestController</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RequestMapping</code>注解。如果您对Spring MVC不熟悉并且还没有尝试过快速入门案例，建议先看一下<a href=\"http://blog.didispace.com/spring-boot-learning-1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">快速入门</a>的内容。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>：修饰class，用来创建处理http请求的对象</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RestController</code>：Spring4之后加入的注解，原来在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>中返回json需要<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ResponseBody</code>来配合，如果直接用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RestController</code>替代<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>就不需要再配置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ResponseBody</code>，默认返回json格式。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RequestMapping</code>：配置url映射</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面我们尝试使用Spring MVC来实现一组对User对象操作的RESTful API，配合注释详细说明在Spring MVC中如何映射HTTP请求、如何传参、如何编写单元测试。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">RESTful API具体设计如下：</strong></p><p><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/></p><table width=\"568\"><thead style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><th style=\"margin: 0px; padding: 0px 0px 0.5em; border-width: 0px 0px 3px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">请求类型</th><th style=\"margin: 0px; padding: 0px 0px 0.5em; border-width: 0px 0px 3px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">URL</th><th style=\"margin: 0px; padding: 0px 0px 0.5em; border-width: 0px 0px 3px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">功能说明</th></tr></thead><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">GET</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">查询用户列表</td></tr><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">POST</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">创建一个用户</td></tr><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">GET</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users/id</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">根据id查询一个用户</td></tr><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">PUT</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users/id</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">根据id更新一个用户</td></tr><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">DELETE</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users/id</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">根据id删除一个用户</td></tr></tbody></table><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">User实体定义：</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline; color: rgb(86, 90, 95); line-height: 32px; widows: 1; background-color: rgb(255, 255, 255);\"><code class=\"java\" style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User</span> </span>{ \r\n\r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">private</span> Long id; \r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">private</span> String name; \r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">private</span> Integer age; \r\n\r\n &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 省略setter和getter </span>}</code></pre><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">实现对User对象的操作接口</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline; color: rgb(86, 90, 95); line-height: 32px; widows: 1; background-color: rgb(255, 255, 255);\"><code class=\"java\" style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\"><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RestController</span> <span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users&quot;</span>) &nbsp; &nbsp; <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 通过这里配置使下面的映射都在/users下 </span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">UserController</span> </span>{ \r\n\r\n &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 创建线程安全的Map </span>\r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">static</span> Map&lt;Long, User&gt; users = Collections.synchronizedMap(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">new</span> HashMap&lt;Long, User&gt;()); \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/&quot;</span>, method=RequestMethod.GET) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> List&lt;User&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">getUserList</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/&quot;的GET请求，用来获取用户列表 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 还可以通过@RequestParam从页面中传递参数来进行查询条件或者翻页信息的传递 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;List&lt;User&gt; r = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">new</span> ArrayList&lt;User&gt;(users.values()); \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> r; \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/&quot;</span>, method=RequestMethod.POST) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">postUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@ModelAttribute User user)</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/&quot;的POST请求，用来创建User </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 除了@ModelAttribute绑定参数之外，还可以通过@RequestParam从页面中传递参数 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;users.put(user.getId(), user); \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>; \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/{id}&quot;</span>, method=RequestMethod.GET) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">getUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id)</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/{id}&quot;的GET请求，用来获取url中id值的User信息 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// url中的id可通过@PathVariable绑定到函数的参数中 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> users.get(id); \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/{id}&quot;</span>, method=RequestMethod.PUT) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">putUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id, @ModelAttribute User user)</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/{id}&quot;的PUT请求，用来更新User信息 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;User u = users.get(id); \r\n &nbsp; &nbsp; &nbsp; &nbsp;u.setName(user.getName()); \r\n &nbsp; &nbsp; &nbsp; &nbsp;u.setAge(user.getAge()); \r\n &nbsp; &nbsp; &nbsp; &nbsp;users.put(id, u); \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>; \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/{id}&quot;</span>, method=RequestMethod.DELETE) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">deleteUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id)</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/{id}&quot;的DELETE请求，用来删除User </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;users.remove(id); \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>; \r\n &nbsp; &nbsp;} \r\n\r\n}</code></pre><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面针对该Controller编写测试用例验证正确性，具体如下。当然也可以通过浏览器插件等进行请求提交验证。</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline; color: rgb(86, 90, 95); line-height: 32px; widows: 1; background-color: rgb(255, 255, 255);\"><code class=\"java\" style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\"><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RunWith</span>(SpringJUnit4ClassRunner.class) \r\n<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@SpringApplicationConfiguration</span>(classes = MockServletContext.class) \r\n<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@WebAppConfiguration</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ApplicationTests</span> </span>{ \r\n\r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">private</span> MockMvc mvc; \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@Before</span> \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">throws</span> Exception </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc = MockMvcBuilders.standaloneSetup(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">new</span> UserController()).build(); \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@Test</span> \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">testUserController</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">throws</span> Exception </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 测试UserController </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;RequestBuilder request = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">null</span>; \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 1、get查一下user列表，应该为空 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(status().isOk()) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;[]&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 2、post提交一个user </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = post(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;id&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;1&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;name&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;测试大师&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;age&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;20&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 3、get获取user列表，应该有刚才插入的数据 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(status().isOk()) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;[{\\&quot;id\\&quot;:1,\\&quot;name\\&quot;:\\&quot;测试大师\\&quot;,\\&quot;age\\&quot;:20}]&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 4、put修改id为1的user </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = put(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/1&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;name&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;测试终极大师&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;age&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;30&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 5、get一个id为1的user </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/1&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;{\\&quot;id\\&quot;:1,\\&quot;name\\&quot;:\\&quot;测试终极大师\\&quot;,\\&quot;age\\&quot;:30}&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 6、del删除id为1的user </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = delete(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/1&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 7、get查一下user列表，应该为空 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(status().isOk()) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;[]&quot;</span>))); \r\n\r\n &nbsp; &nbsp;} \r\n\r\n}</code></pre><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至此，我们通过引入web模块（没有做其他的任何配置），就可以轻松利用Spring MVC的功能，以非常简洁的代码完成了对User对象的RESTful API的创建以及单元测试的编写。其中同时介绍了Spring MVC中最为常用的几个核心注解：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RestController</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RequestMapping</code>以及一些参数绑定的注解：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@PathVariable</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ModelAttribute</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RequestParam</code>等。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot教程完整案例</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('98', 'Spring Boot中使用Swagger2构建强大的RESTful API文档', '由于Spring Boot能够快速开发、便捷部署等特性，相信有很大一部分Spring Boot的用户会用来构建RESTful API。而我们构建RESTful API的目的通常都是由于多终端的原因，这些终端会共用很多底层业务逻辑，因此我们会抽象出这样一层来同时服务于多个移动端或者Web前端。这样一来，我们的R', '2016-10-27 19:27:20', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于Spring Boot能够快速开发、便捷部署等特性，相信有很大一部分Spring Boot的用户会用来构建RESTful API。而我们构建RESTful API的目的通常都是由于多终端的原因，这些终端会共用很多底层业务逻辑，因此我们会抽象出这样一层来同时服务于多个移动端或者Web前端。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这样一来，我们的RESTful API就有可能要面对多个开发人员或多个开发团队：IOS开发、Android开发或是Web开发等。为了减少与其他团队平时开发期间的频繁沟通成本，传统做法我们会创建一份RESTful API文档来记录所有接口细节，然而这样的做法有以下几个问题：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>由于接口众多，并且细节复杂（需要考虑不同的HTTP请求类型、HTTP头部信息、HTTP请求内容等），高质量地创建这份文档本身就是件非常吃力的事，下游的抱怨声不绝于耳。</li><li>随着时间推移，不断修改接口实现的时候都必须同步修改接口文档，而文档与代码又处于两个不同的媒介，除非有严格的管理机制，不然很容易导致不一致现象。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了解决上面这样的问题，本文将介绍RESTful API的重磅好伙伴Swagger2，它可以轻松的整合到Spring Boot中，并与Spring MVC程序配合组织出强大RESTful API文档。它既可以减少我们创建文档的工作量，同时说明内容又整合入实现代码中，让维护文档和修改代码整合为一体，可以让我们在修改代码逻辑的同时方便的修改文档说明。另外Swagger2也提供了强大的页面测试功能来调试每个RESTful API。具体效果如下图所示：</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/04/swagger2_1.png\" title=\"alt=\" class=\"gallery-item\" lg-event-uid=\"&amp;1\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/04/swagger2_1.png\" alt=\"alt=\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">alt=</span></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面来具体介绍，如果在Spring Boot中使用Swagger2。首先，我们需要一个Spring Boot实现的RESTful API工程，若您没有做过这类内容，建议先阅读<br/><a href=\"http://blog.didispace.com/springbootrestfulapi/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot构建一个较为复杂的RESTful APIs和单元测试</a>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面的内容我们会以<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">教程样例</a>中的Chapter3-1-1进行下面的实验（Chpater3-1-5是我们的结果工程，亦可参考）。</p><h4 id=\"添加Swagger2依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#添加Swagger2依赖\" class=\"headerlink\" title=\"添加Swagger2依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>添加Swagger2依赖</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入Swagger2的依赖</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>io.springfox<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>springfox-swagger2<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>2.2.2<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>io.springfox<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>springfox-swagger-ui<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>2.2.2<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"创建Swagger2配置类\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#创建Swagger2配置类\" class=\"headerlink\" title=\"创建Swagger2配置类\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>创建Swagger2配置类</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Application.java</code>同级创建Swagger2的配置类<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Swagger2</code>。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableSwagger</span>2</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Swagger2</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Docket <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">createRestApi</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Docket(DocumentationType.SWAGGER_2)</p><p>.apiInfo(apiInfo())</p><p>.select()</p><p>.apis(RequestHandlerSelectors.basePackage(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.web&quot;</span>))</p><p>.paths(PathSelectors.any())</p><p>.build();</p><p>}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> ApiInfo <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">apiInfo</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ApiInfoBuilder()</p><p>.title(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Spring Boot中使用Swagger2构建RESTful APIs&quot;</span>)</p><p>.description(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;更多Spring Boot相关文章请关注：http://blog.didispace.com/&quot;</span>)</p><p>.termsOfServiceUrl(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://blog.didispace.com/&quot;</span>)</p><p>.contact(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;程序猿DD&quot;</span>)</p><p>.version(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;1.0&quot;</span>)</p><p>.build();</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如上代码所示，通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Configuration</code>注解，让Spring来加载该类配置。再通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableSwagger2</code>注解来启用Swagger2。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">再通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">createRestApi</code>函数创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Docket</code>的Bean之后，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">apiInfo()</code>用来创建该Api的基本信息（这些基本信息会展现在文档页面中）。<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">select()</code>函数返回一个<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ApiSelectorBuilder</code>实例用来控制哪些接口暴露给Swagger来展现，本例采用指定扫描的包路径来定义，Swagger会扫描该包下所有Controller定义的API，并产生文档内容（除了被<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ApiIgnore</code>指定的请求）。</p><h4 id=\"添加文档内容\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#添加文档内容\" class=\"headerlink\" title=\"添加文档内容\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>添加文档内容</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了上述配置后，其实已经可以生产文档内容，但是这样的文档主要针对请求本身，而描述主要来源于函数等命名产生，对用户并不友好，我们通常需要自己增加一些说明来丰富文档内容。如下所示，我们通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ApiOperation</code>注解来给API增加说明、通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ApiImplicitParams</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ApiImplicitParam</code>注解来给参数增加说明。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p><p>43</p><p>44</p><p>45</p><p>46</p><p>47</p><p>48</p><p>49</p><p>50</p><p>51</p><p>52</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RestController</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/users&quot;</span>) &nbsp; &nbsp; <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 通过这里配置使下面的映射都在/users下，可去除</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserController</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> Map&lt;Long, User&gt; users = Collections.synchronizedMap(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> HashMap&lt;Long, User&gt;());</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;获取用户列表&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value={<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;&quot;</span>}, method=RequestMethod.GET)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> List&lt;User&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getUserList</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>List&lt;User&gt; r = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ArrayList&lt;User&gt;(users.values());</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> r;</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;创建用户&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;根据User对象创建用户&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;user&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户详细实体user&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;User&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;&quot;</span>, method=RequestMethod.POST)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">postUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@RequestBody User user)</span> </span>{</p><p>users.put(user.getId(), user);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;success&quot;</span>;</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;获取用户详细信息&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;根据url的id来获取用户详细信息&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;id&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户ID&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Long&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/{id}&quot;</span>, method=RequestMethod.GET)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> users.get(id);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;更新用户详细信息&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;根据url的id来指定更新对象，并根据传过来的user信息来更新用户详细信息&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParams</span>({</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;id&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户ID&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Long&quot;</span>),</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;user&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户详细实体user&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;User&quot;</span>)</p><p>})</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/{id}&quot;</span>, method=RequestMethod.PUT)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">putUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id, @RequestBody User user)</span> </span>{</p><p>User u = users.get(id);</p><p>u.setName(user.getName());</p><p>u.setAge(user.getAge());</p><p>users.put(id, u);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;success&quot;</span>;</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;删除用户&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;根据url的id来指定删除对象&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;id&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户ID&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Long&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/{id}&quot;</span>, method=RequestMethod.DELETE)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id)</span> </span>{</p><p>users.remove(id);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;success&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成上述代码添加上，启动Spring Boot程序，访问：<a href=\"http://localhost:8080/swagger-ui.html\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://localhost:8080/swagger-ui.html</a><br/>。就能看到前文所展示的RESTful API的页面。我们可以再点开具体的API请求，以POST类型的/users请求为例，可找到上述代码中我们配置的Notes信息以及参数user的描述信息，如下图所示。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/04/swagger2_2.png\" title=\"alt\" class=\"gallery-item\" lg-event-uid=\"&amp;2\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/04/swagger2_2.png\" alt=\"alt\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">alt</span></p><h4 id=\"API文档访问与调试\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#API文档访问与调试\" class=\"headerlink\" title=\"API文档访问与调试\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>API文档访问与调试</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上图请求的页面中，我们看到user的Value是个输入框？是的，Swagger除了查看接口功能外，还提供了调试测试功能，我们可以点击上图中右侧的Model Schema（黄色区域：它指明了User的数据结构），此时Value中就有了user对象的模板，我们只需要稍适修改，点击下方<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">“Try it out！”</code>按钮，即可完成了一次请求调用！</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">此时，你也可以通过几个GET请求来验证之前的POST请求是否正确。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">相比为这些接口编写文档的工作，我们增加的配置内容是非常少而且精简的，对于原有代码的侵入也在忍受范围之内。因此，在构建RESTful API的同时，加入swagger来对API文档进行管理，是个不错的选择。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整结果示例可查看<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-1-5</a>。</p><h4 id=\"参考信息\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#参考信息\" class=\"headerlink\" title=\"参考信息\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>参考信息</h4><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><a href=\"http://swagger.io/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Swagger官方网站</a></li></ul><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('99', 'Spring Boot中使用JdbcTemplate访问数据库', '之前介绍了很多Web层的例子，包括构建RESTful API、使用Thymeleaf模板引擎渲染Web视图，但是这些内容还不足以构建一个动态的应用。通常我们做App也好，做Web应用也好，都需要内容，而内容通常存储于各种类型的数据库，服务端在接收到访问请求之后需要访问数据库获取并处理成展现给用户使用的数据形式', '2016-10-27 19:27:42', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">之前介绍了很多Web层的例子，包括<a href=\"http://blog.didispace.com/springbootrestfulapi/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">构建RESTful API</a>、<a href=\"http://blog.didispace.com/springbootweb/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">使用Thymeleaf模板引擎渲染Web视图</a>，但是这些内容还不足以构建一个动态的应用。通常我们做App也好，做Web应用也好，都需要内容，而内容通常存储于各种类型的数据库，服务端在接收到访问请求之后需要访问数据库获取并处理成展现给用户使用的数据形式。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文介绍在Spring Boot基础下配置数据源和通过JdbcTemplate编写数据访问的示例。</p><h2 id=\"数据源配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#数据源配置\" class=\"headerlink\" title=\"数据源配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>数据源配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在我们访问数据库的时候，需要先配置一个数据源，下面分别介绍一下几种不同的数据库配置方式。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，为了连接数据库需要引入jdbc支持，在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入如下配置：</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"嵌入式数据库支持\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#嵌入式数据库支持\" class=\"headerlink\" title=\"嵌入式数据库支持\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>嵌入式数据库支持</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">嵌入式数据库通常用于开发和测试环境，不推荐用于生产环境。Spring Boot提供自动配置的嵌入式数据库有H2、HSQL、Derby，你不需要提供任何连接配置就能使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">比如，我们可以在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入如下配置使用HSQL</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.hsqldb<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>hsqldb<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span>runtime<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"连接生产数据源\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#连接生产数据源\" class=\"headerlink\" title=\"连接生产数据源\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>连接生产数据源</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">以MySQL数据库为例，先引入MySQL连接的依赖包，在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入：</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>mysql<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>5.1.21<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/application.properties</code>中配置数据源信息</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span></p><p>spring.datasource.username=dbuser</p><p>spring.datasource.password=dbpass</p><p>spring.datasource.driver-class-name=com.mysql.jdbc.Driver</p></pre></td></tr></tbody></table></figure></p><h4 id=\"连接JNDI数据源\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#连接JNDI数据源\" class=\"headerlink\" title=\"连接JNDI数据源\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>连接JNDI数据源</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">当你将应用部署于应用服务器上的时候想让数据源由应用服务器管理，那么可以使用如下配置方式引入JNDI数据源。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.jndi-name=java:jboss/datasources/customers</p></pre></td></tr></tbody></table></figure></p><h2 id=\"使用JdbcTemplate操作数据库\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#使用JdbcTemplate操作数据库\" class=\"headerlink\" title=\"使用JdbcTemplate操作数据库\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用JdbcTemplate操作数据库</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring的JdbcTemplate是自动配置的，你可以直接使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Autowired</code>来注入到你自己的bean中来使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">举例：我们在创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User</code>表，包含属性<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">age</code>，下面来编写数据访问对象和单元测试用例。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>定义包含有插入、删除、查询的抽象接口UserService</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserService</span> </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">/**</span></p><p>* 新增一个用户</p><p>* <span class=\"doctag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@param</span> name</p><p>* <span class=\"doctag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@param</span> age</p><p>*/</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">create</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, Integer age)</span></span>;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">/**</span></p><p>* 根据name删除一个用户高</p><p>* <span class=\"doctag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@param</span> name</p><p>*/</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">/**</span></p><p>* 获取用户总量</p><p>*/</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Integer <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getAllUsers</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">/**</span></p><p>* 删除所有用户</p><p>*/</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteAllUsers</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>通过JdbcTemplate实现UserService中定义的数据访问操作</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Service</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserServiceImpl</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">implements</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserService</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> JdbcTemplate jdbcTemplate;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">create</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, Integer age)</span> </span>{</p><p>jdbcTemplate.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;insert into USER(NAME, AGE) values(?, ?)&quot;</span>, name, age);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span> </span>{</p><p>jdbcTemplate.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;delete from USER where NAME = ?&quot;</span>, name);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Integer <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getAllUsers</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> jdbcTemplate.queryForObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;select count(1) from USER&quot;</span>, Integer.class);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteAllUsers</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>jdbcTemplate.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;delete from USER&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建对UserService的单元测试用例，通过创建、删除和查询来验证数据库操作的正确性。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserService userSerivce;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 准备，清空user表</span></p><p>		userSerivce.deleteAllUsers();</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 插入5个用户</span></p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;a&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>);</p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;b&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>);</p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;c&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>);</p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;d&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">4</span>);</p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;e&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>);</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 查数据库，应该有5个用户</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>, userSerivce.getAllUsers().intValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 删除两个用户</span></p><p>		userSerivce.deleteByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;a&quot;</span>);</p><p>		userSerivce.deleteByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;e&quot;</span>);</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 查数据库，应该有5个用户</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>, userSerivce.getAllUsers().intValue());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">上面介绍的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JdbcTemplate</code>只是最基本的几个操作，更多其他数据访问操作的使用请参考：<a href=\"https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/jdbc/core/JdbcTemplate.html\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">JdbcTemplate API</a></em></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面这个简单的例子，我们可以看到在Spring Boot下访问数据库的配置依然秉承了框架的初衷：简单。我们只需要在pom.xml中加入数据库依赖，再到application.properties中配置连接信息，不需要像Spring应用中创建JdbcTemplate的Bean，就可以直接在自己的对象中注入使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">本文完整示例</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('100', 'Spring Boot中使用Spring-data-jpa让数据访问更简单、更优雅', '在上一篇Spring中使用JdbcTemplate访问数据库 中介绍了一种基本的数据访问方式，结合构建RESTful API和使用Thymeleaf模板引擎渲染Web视图的内容就已经可以完成App服务端和Web站点的开发任务了。然而，在实际开发过程中，对数据库的操作无非就“增删改查”。就最为普遍的单表操作而言', '2016-10-27 19:28:08', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上一篇<a href=\"http://blog.didispace.com/springbootdata1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring中使用JdbcTemplate访问数据库&nbsp;</a>中介绍了一种基本的数据访问方式，结合<a href=\"http://blog.didispace.com/springbootrestfulapi/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">构建RESTful API</a>和<a href=\"http://blog.didispace.com/springbootweb/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">使用Thymeleaf模板引擎渲染Web视图</a>的内容就已经可以完成App服务端和Web站点的开发任务了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">然而，在实际开发过程中，对数据库的操作无非就“增删改查”。就最为普遍的单表操作而言，除了表和字段不同外，语句都是类似的，开发人员需要写大量类似而枯燥的语句来完成业务逻辑。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了解决这些大量枯燥的数据操作语句，我们第一个想到的是使用ORM框架，比如：Hibernate。通过整合Hibernate之后，我们以操作Java实体的方式最终将数据改变映射到数据库表中。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了解决抽象各个Java实体基本的“增删改查”操作，我们通常会以泛型的方式封装一个模板Dao来进行抽象简化，但是这样依然不是很方便，我们需要针对每个实体编写一个继承自泛型模板Dao的接口，再编写该接口的实现。虽然一些基础的数据访问已经可以得到很好的复用，但是在代码结构上针对每个实体都会有一堆Dao的接口和实现。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于模板Dao的实现，使得这些具体实体的Dao层已经变的非常“薄”，有一些具体实体的Dao实现可能完全就是对模板Dao的简单代理，并且往往这样的实现类可能会出现在很多实体上。Spring-data-jpa的出现正可以让这样一个已经很“薄”的数据访问层变成只是一层接口的编写方式。比如，下面的例子：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Query</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;from User u where u.name=:name&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name)</span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们只需要通过编写一个继承自<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JpaRepository</code>的接口就能完成数据访问，下面以一个具体实例来体验Spring-data-jpa给我们带来的强大功能。</p><h2 id=\"使用示例\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#使用示例\" class=\"headerlink\" title=\"使用示例\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用示例</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于Spring-data-jpa依赖于Hibernate。如果您对Hibernate有一定了解，下面内容可以毫不费力的看懂并上手使用Spring-data-jpa。如果您还是Hibernate新手，您可以先按如下方式入门，再建议回头学习一下Hibernate以帮助这部分的理解和进一步使用。</p><h4 id=\"工程配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#工程配置\" class=\"headerlink\" title=\"工程配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>工程配置</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中添加相关依赖，加入以下内容：</p><p><figure class=\"highlight\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>&lt;dependency</p><p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p><p>&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</p><p>&lt;/dependency&gt;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.xml</code>中配置：数据库连接信息（如使用嵌入式数据库则不需要）、自动创建表结构的设置，例如使用mysql的情况如下：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span></p><p>spring.datasource.username=root</p><p>spring.datasource.password=root</p><p>spring.datasource.driver-class-name=com.mysql.jdbc.Driver</p><p>spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.jpa.properties.hibernate.hbm2ddl.auto</code>是hibernate的配置属性，其主要作用是：自动创建、更新、验证数据库表结构。该参数的几种配置如下：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">create</code>：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">create-drop</code>：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">update</code>：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">validate</code>：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至此已经完成基础配置，如果您有在Spring下整合使用过它的话，相信你已经感受到Spring Boot的便利之处：JPA的传统配置在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">persistence.xml</code>文件中，但是这里我们不需要。当然，最好在构建项目时候按照之前提过的<a href=\"http://blog.didispace.com/springbootproject/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">最佳实践的工程结构</a>来组织，这样以确保各种配置都能被框架扫描到。</p><h4 id=\"创建实体\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#创建实体\" class=\"headerlink\" title=\"创建实体\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>创建实体</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">创建一个User实体，包含id（主键）、name（姓名）、age（年龄）属性，通过ORM框架其会被映射到数据库表中，由于配置了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hibernate.hbm2ddl.auto</code>，在应用启动的时候框架会自动去数据库中创建对应的表。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Entity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@GeneratedValue</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略构造函数</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><h4 id=\"创建数据访问接口\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#创建数据访问接口\" class=\"headerlink\" title=\"创建数据访问接口\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>创建数据访问接口</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面针对User实体创建对应的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Repository</code>接口实现对该实体的数据访问，如下代码：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByNameAndAge</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, Integer age)</span></span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Query</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;from User u where u.name=:name&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name)</span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring-data-jpa中，只需要编写类似上面这样的接口就可实现数据访问。不再像我们以往编写了接口时候还需要自己编写接口实现类，直接减少了我们的文件清单。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面对上面的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">UserRepository</code>做一些解释，该接口继承自<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JpaRepository</code>，通过查看<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JpaRepository</code>接口的<a href=\"http://docs.spring.io/spring-data/data-jpa/docs/current/api/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">API文档</a>，可以看到该接口本身已经实现了创建（save）、更新（save）、删除（delete）、查询（findAll、findOne）等基本操作的函数，因此对于这些基础操作的数据访问就不需要开发者再自己定义。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在我们实际开发中，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JpaRepository</code>接口定义的接口往往还不够或者性能不够优化，我们需要进一步实现更复杂一些的查询或操作。由于本文重点在spring boot中整合spring-data-jpa，在这里先抛砖引玉简单介绍一下spring-data-jpa中让我们兴奋的功能，后续再单独开篇讲一下spring-data-jpa中的常见使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上例中，我们可以看到下面两个函数：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User findByName(String name)</code></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User findByNameAndAge(String name, Integer age)</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">它们分别实现了按name查询User实体和按name和age查询User实体，可以看到我们这里没有任何类SQL语句就完成了两个条件查询方法。这就是Spring-data-jpa的一大特性：<strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">通过解析方法名创建查询</strong>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了通过解析方法名来创建查询外，它也提供通过使用@Query 注解来创建查询，您只需要编写JPQL语句，并通过类似“:name”来映射@Param指定的参数，就像例子中的第三个findUser函数一样。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Spring-data-jpa的能力远不止本文提到的这些，由于本文主要以整合介绍为主，对于Spring-data-jpa的使用只是介绍了常见的使用方式。诸如@Modifying操作、分页排序、原生SQL支持以及与Spring MVC的结合使用等等内容就不在本文中详细展开，这里先挖个坑，后续再补文章填坑，如您对这些感兴趣可以关注我博客或简书，同样欢迎大家留言交流想法。</strong></p><h4 id=\"单元测试\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#单元测试\" class=\"headerlink\" title=\"单元测试\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>单元测试</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了上面的数据访问接口之后，按照惯例就是编写对应的单元测试来验证编写的内容是否正确。这里就不多做介绍，主要通过数据操作和查询来反复验证操作的正确性。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p><p>43</p><p>44</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 创建10条记录</span></p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;BBB&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CCC&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DDD&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;EEE&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;GGG&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">70</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;HHH&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">80</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;III&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">90</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;JJJ&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>));</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findAll, 查询所有记录</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>, userRepository.findAll().size());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findByName, 查询姓名为FFF的User</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>, userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>).getAge().longValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findUser, 查询姓名为FFF的User</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>, userRepository.findUser(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>).getAge().longValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findByNameAndAge, 查询姓名为FFF并且年龄为60的User</span></p><p>		Assert.assertEquals(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, userRepository.findByNameAndAge(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>).getName());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试删除姓名为AAA的User</span></p><p>		userRepository.delete(userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>));</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findAll, 查询所有记录, 验证上面的删除是否成功</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">9</span>, userRepository.findAll().size());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234);\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('101', 'Spring Boot多数据源配置与使用', '之前在介绍使用JdbcTemplate和Spring-data-jpa时，都使用了单数据源。在单数据源的情况下，Spring Boot的配置非常简单，只需要在application.properties文件中配置连接参数即可。但是往往随着业务量发展，我们通常会进行数据库拆分或是引入其他数据库，从而我们需要配置', '2016-10-27 19:30:35', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">之前在介绍使用JdbcTemplate和Spring-data-jpa时，都使用了单数据源。在单数据源的情况下，Spring Boot的配置非常简单，只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中配置连接参数即可。但是往往随着业务量发展，我们通常会进行数据库拆分或是引入其他数据库，从而我们需要配置多个数据源，下面基于之前的JdbcTemplate和Spring-data-jpa例子分别介绍两种多数据源的配置方式。</p><h3 id=\"多数据源配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmultidatasource/#多数据源配置\" class=\"headerlink\" title=\"多数据源配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>多数据源配置</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">创建一个Spring配置类，定义两个DataSource用来读取<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中的不同配置。如下例子中，主数据源配置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.datasource.primary</code>开头的配置，第二数据源配置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.datasource.secondary</code>开头的配置。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">DataSourceConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryDataSource&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryDataSource&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ConfigurationProperties</span>(prefix=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;spring.datasource.primary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> DataSource <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">primaryDataSource</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> DataSourceBuilder.create().build();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryDataSource&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryDataSource&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Primary</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ConfigurationProperties</span>(prefix=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;spring.datasource.secondary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> DataSource <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">secondaryDataSource</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> DataSourceBuilder.create().build();</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对应的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>配置如下：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.primary.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>1</p><p>spring.datasource.primary.username=root</p><p>spring.datasource.primary.password=root</p><p>spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver</p><p>spring.datasource.secondary.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>2</p><p>spring.datasource.secondary.username=root</p><p>spring.datasource.secondary.password=root</p><p>spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver</p></pre></td></tr></tbody></table></figure></p><h3 id=\"JdbcTemplate支持\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmultidatasource/#JdbcTemplate支持\" class=\"headerlink\" title=\"JdbcTemplate支持\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>JdbcTemplate支持</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对JdbcTemplate的支持比较简单，只需要为其注入对应的datasource即可，如下例子，在创建JdbcTemplate的时候分别注入名为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">primaryDataSource</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">secondaryDataSource</code>的数据源来区分不同的JdbcTemplate。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryJdbcTemplate&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> JdbcTemplate <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">primaryJdbcTemplate</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(</span></span></p><p>@Qualifier(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryDataSource&quot;</span>) DataSource dataSource) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JdbcTemplate(dataSource);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryJdbcTemplate&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> JdbcTemplate <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">secondaryJdbcTemplate</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(</span></span></p><p>@Qualifier(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryDataSource&quot;</span>) DataSource dataSource) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JdbcTemplate(dataSource);</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">接下来通过测试用例来演示如何使用这两个针对不同数据源的JdbcTemplate。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryJdbcTemplate&quot;</span>)</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">protected</span> JdbcTemplate jdbcTemplate1;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryJdbcTemplate&quot;</span>)</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">protected</span> JdbcTemplate jdbcTemplate2;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		jdbcTemplate1.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DELETE &nbsp;FROM &nbsp;USER &quot;</span>);</p><p>		jdbcTemplate2.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DELETE &nbsp;FROM &nbsp;USER &quot;</span>);</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 往第一个数据源中插入两条数据</span></p><p>		jdbcTemplate1.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;insert into user(id,name,age) values(?, ?, ?)&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		jdbcTemplate1.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;insert into user(id,name,age) values(?, ?, ?)&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;bbb&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>);</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 往第二个数据源中插入一条数据，若插入的是第一个数据源，则会主键冲突报错</span></p><p>		jdbcTemplate2.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;insert into user(id,name,age) values(?, ?, ?)&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 查一下第一个数据源中是否有两条数据，验证插入是否成功</span></p><p>		Assert.assertEquals(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;2&quot;</span>, jdbcTemplate1.queryForObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;select count(1) from user&quot;</span>, String.class));</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 查一下第一个数据源中是否有两条数据，验证插入是否成功</span></p><p>		Assert.assertEquals(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;1&quot;</span>, jdbcTemplate2.queryForObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;select count(1) from user&quot;</span>, String.class));</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例:Chapter3-2-3</a></p><h3 id=\"Spring-data-jpa支持\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmultidatasource/#Spring-data-jpa支持\" class=\"headerlink\" title=\"Spring-data-jpa支持\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Spring-data-jpa支持</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于数据源的配置可以沿用上例中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">DataSourceConfig</code>的实现。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">新增对第一数据源的JPA配置，注意两处注释的地方，用于指定数据源对应的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Entity</code>实体和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Repository</code>定义位置，用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Primary</code>区分主数据源。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableTransactionManagement</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableJpaRepositories</span>(</p><p>entityManagerFactoryRef=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerFactoryPrimary&quot;</span>,</p><p>transactionManagerRef=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;transactionManagerPrimary&quot;</span>,</p><p>basePackages= { <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.domain.p&quot;</span> }) <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">//设置Repository所在位置</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">PrimaryConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span> <span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryDataSource&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> DataSource primaryDataSource;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Primary</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerPrimary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> EntityManager <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">entityManager</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> entityManagerFactoryPrimary(builder).getObject().createEntityManager();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Primary</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerFactoryPrimary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> LocalContainerEntityManagerFactoryBean <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">entityManagerFactoryPrimary</span> <span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> builder</p><p>.dataSource(primaryDataSource)</p><p>.properties(getVendorProperties(primaryDataSource))</p><p>.packages(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.domain.p&quot;</span>) <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">//设置实体类所在位置</span></p><p>.persistenceUnit(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryPersistenceUnit&quot;</span>)</p><p>.build();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> JpaProperties jpaProperties;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Map&lt;String, String&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getVendorProperties</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(DataSource dataSource)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> jpaProperties.getHibernateProperties(dataSource);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Primary</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;transactionManagerPrimary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> PlatformTransactionManager <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">transactionManagerPrimary</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JpaTransactionManager(entityManagerFactoryPrimary(builder).getObject());</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">新增对第二数据源的JPA配置，内容与第一数据源类似，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableTransactionManagement</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableJpaRepositories</span>(</p><p>entityManagerFactoryRef=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerFactorySecondary&quot;</span>,</p><p>transactionManagerRef=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;transactionManagerSecondary&quot;</span>,</p><p>basePackages= { <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.domain.s&quot;</span> }) <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">//设置Repository所在位置</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">SecondaryConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span> <span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryDataSource&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> DataSource secondaryDataSource;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerSecondary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> EntityManager <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">entityManager</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> entityManagerFactorySecondary(builder).getObject().createEntityManager();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerFactorySecondary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> LocalContainerEntityManagerFactoryBean <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">entityManagerFactorySecondary</span> <span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> builder</p><p>.dataSource(secondaryDataSource)</p><p>.properties(getVendorProperties(secondaryDataSource))</p><p>.packages(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.domain.s&quot;</span>) <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">//设置实体类所在位置</span></p><p>.persistenceUnit(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryPersistenceUnit&quot;</span>)</p><p>.build();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> JpaProperties jpaProperties;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Map&lt;String, String&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getVendorProperties</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(DataSource dataSource)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> jpaProperties.getHibernateProperties(dataSource);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;transactionManagerSecondary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">PlatformTransactionManager <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">transactionManagerSecondary</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JpaTransactionManager(entityManagerFactorySecondary(builder).getObject());</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成了以上配置之后，主数据源的实体和数据访问对象位于：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.domain.p</code>，次数据源的实体和数据访问接口位于：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.domain.s</code>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">分别在这两个package下创建各自的实体和数据访问接口</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>主数据源下，创建User实体和对应的Repository接口</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Entity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@GeneratedValue</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">User</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>{}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">User</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, Integer age)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.name = name;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.age = age;</p><p>}</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter、setter</span></p><p>}</p></pre></td></tr></tbody></table></figure><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>从数据源下，创建Message实体和对应的Repository接口</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Entity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Message</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@GeneratedValue</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String content;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Message</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>{}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Message</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, String content)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.name = name;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.content = content;</p><p>}</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter、setter</span></p><p>}</p></pre></td></tr></tbody></table></figure><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">MessageRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Message</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">接下来通过测试用例来验证使用这两个针对不同数据源的配置进行数据操作。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> MessageRepository messageRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;bbb&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ccc&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ddd&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;eee&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>, userRepository.findAll().size());</p><p>		messageRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Message(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;o1&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaaaaaaaaa&quot;</span>));</p><p>		messageRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Message(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;o2&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;bbbbbbbbbb&quot;</span>));</p><p>		messageRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Message(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;o3&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;cccccccccc&quot;</span>));</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>, messageRepository.findAll().size());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例:Chapter3-2-4</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('102', 'Spring Boot日志管理', 'Spring Boot在所有内部日志中使用Commons Logging，但是默认配置也提供了对常用日志的支持，如：Java Util Logging，Log4J, Log4J2和Logback。每种Logger都可以通过配置使用控制台或者文件输出日志内容。格式化日志默认的日志输出如下：12016-04-13', '2016-10-27 19:30:55', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot在所有内部日志中使用<a href=\"http://commons.apache.org/proper/commons-logging/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Commons Logging</a>，但是默认配置也提供了对常用日志的支持，如：<a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/logging/package-summary.html\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Java Util Logging</a>，<a href=\"http://logging.apache.org/log4j/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Log4J</a>,&nbsp;<a href=\"http://logging.apache.org/log4j/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Log4J2</a>和<a href=\"http://logback.qos.ch/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Logback</a>。每种Logger都可以通过配置使用控制台或者文件输出日志内容。</p><h2 id=\"格式化日志\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#格式化日志\" class=\"headerlink\" title=\"格式化日志\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>格式化日志</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">默认的日志输出如下：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>2016-04-13 08:23:50.120 &nbsp;INFO 37397 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] org.hibernate.Version &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: HHH000412: Hibernate Core {4.3.11.Final}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">输出内容元素具体如下：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>时间日期 — 精确到毫秒</li><li>日志级别 — ERROR, WARN, INFO, DEBUG or TRACE</li><li>进程ID</li><li>分隔符 —&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">---</code>&nbsp;标识实际日志的开始</li><li>线程名 — 方括号括起来（可能会截断控制台输出）</li><li>Logger名 — 通常使用源代码的类名</li><li>日志内容</li></ul><h2 id=\"控制台输出\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#控制台输出\" class=\"headerlink\" title=\"控制台输出\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>控制台输出</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中默认配置了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ERROR</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">WARN</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">INFO</code>级别的日志输出到控制台。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们可以通过两种方式切换至<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">DEBUG</code>级别：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在运行命令后加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">--debug</code>标志，如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">$ java -jar myapp.jar --debug</code></li><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">debug=true</code>，该属性置为true的时候，核心Logger（包含嵌入式容器、hibernate、spring）会输出更多内容，但是你自己应用的日志并不会输出为DEBUG级别。</li></ul><h4 id=\"多彩输出\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#多彩输出\" class=\"headerlink\" title=\"多彩输出\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>多彩输出</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如果你的终端支持ANSI，设置彩色输出会让日志更具可读性。通过在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中设置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.output.ansi.enabled</code>参数来支持。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>NEVER：禁用ANSI-colored输出（默认项）</li><li>DETECT：会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项）</li><li>ALWAYS：总是使用ANSI-colored格式输出，若终端不支持的时候，会有很多干扰信息，不推荐使用</li></ul><h2 id=\"文件输出\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#文件输出\" class=\"headerlink\" title=\"文件输出\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>文件输出</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot默认配置只会输出到控制台，并不会记录到文件中，但是我们通常生产环境使用时都需要以文件方式记录。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">若要增加文件输出，需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.file</code>或<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.path</code>属性。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>logging.file，设置文件，可以是绝对路径，也可以是相对路径。如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.file=my.log</code></li><li>logging.path，设置目录，会在该目录下创建spring.log文件，并写入日志内容，如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.path=/var/log</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">日志文件会在10Mb大小的时候被截断，产生新的日志文件，默认级别为：ERROR、WARN、INFO</strong></p><h2 id=\"级别控制\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#级别控制\" class=\"headerlink\" title=\"级别控制\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>级别控制</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中进行配置完成日志记录的级别控制。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">配置格式：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.*=LEVEL</code></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level</code>：日志级别控制前缀，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">*</code>为包名或Logger名</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">LEVEL</code>：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">举例：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace=DEBUG</code>：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace</code>包下所有class以DEBUG级别输出</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.root=WARN</code>：root日志以WARN级别输出</li></ul><h2 id=\"自定义日志配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#自定义日志配置\" class=\"headerlink\" title=\"自定义日志配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>自定义日志配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于日志服务一般都在ApplicationContext创建前就初始化了，它并不是必须通过Spring的配置文件控制。因此通过系统属性和传统的Spring Boot外部配置文件依然可以很好的支持日志控制和管理。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">根据不同的日志系统，你可以按如下规则组织配置文件名，就能被正确加载：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Logback：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logback-spring.xml</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logback-spring.groovy</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logback.xml</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logback.groovy</code></li><li>Log4j：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j-spring.properties</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j-spring.xml</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j.properties</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j.xml</code></li><li>Log4j2：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j2-spring.xml</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j2.xml</code></li><li>JDK (Java Util Logging)：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.properties</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Spring Boot官方推荐优先使用带有<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">-spring</code>的文件名作为你的日志配置（如使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">logback-spring.xml</code>，而不是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">logback.xml</code>）</strong></p><h2 id=\"自定义输出格式\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#自定义输出格式\" class=\"headerlink\" title=\"自定义输出格式\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>自定义输出格式</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中可以通过在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>配置如下参数控制输出格式：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>logging.pattern.console：定义输出到控制台的样式（不支持JDK Logger）</li><li>logging.pattern.file：定义输出到文件的样式（不支持JDK Logger）</li></ul><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('103', 'Spring Boot中使用Redis数据库', 'Spring Boot中除了对常用的关系型数据库提供了优秀的自动化支持之外，对于很多NoSQL数据库一样提供了自动化配置的支持，包括：Redis, MongoDB, Elasticsearch, Solr和Cassandra。使用RedisRedis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦', '2016-10-27 19:31:21', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot中除了对常用的关系型数据库提供了优秀的自动化支持之外，对于很多NoSQL数据库一样提供了自动化配置的支持，包括：Redis, MongoDB, Elasticsearch, Solr和Cassandra。</p><h2 id=\"使用Redis\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootredis/#使用Redis\" class=\"headerlink\" title=\"使用Redis\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用Redis</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><a href=\"http://redis.io/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Redis官网</a></li><li><a href=\"http://www.redis.cn/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Redis中文社区</a></li></ul><h4 id=\"引入依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootredis/#引入依赖\" class=\"headerlink\" title=\"引入依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入依赖</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot提供的数据访问框架Spring Data Redis基于Jedis。可以通过引入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-redis</code>来配置依赖关系。</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-redis<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"参数配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootredis/#参数配置\" class=\"headerlink\" title=\"参数配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>参数配置</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">按照惯例在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中加入Redis服务端的相关配置，具体说明如下：</p><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p># REDIS (RedisProperties)</p><p># Redis数据库索引（默认为0）</p><p>spring.redis.database=0</p><p># Redis服务器地址</p><p>spring.redis.host=localhost</p><p># Redis服务器连接端口</p><p>spring.redis.port=6379</p><p># Redis服务器连接密码（默认为空）</p><p>spring.redis.password=</p><p># 连接池最大连接数（使用负值表示没有限制）</p><p>spring.redis.pool.max-active=8</p><p># 连接池最大阻塞等待时间（使用负值表示没有限制）</p><p>spring.redis.pool.max-wait=-1</p><p># 连接池中的最大空闲连接</p><p>spring.redis.pool.max-idle=8</p><p># 连接池中的最小空闲连接</p><p>spring.redis.pool.min-idle=0</p><p># 连接超时时间（毫秒）</p><p>spring.redis.timeout=0</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">其中spring.redis.database的配置通常使用0即可，Redis在配置的时候可以设置数据库数量，默认为16，可以理解为数据库的schema</strong></p><h4 id=\"测试访问\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootredis/#测试访问\" class=\"headerlink\" title=\"测试访问\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>测试访问</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过编写测试用例，举例说明如何访问Redis。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> StringRedisTemplate stringRedisTemplate;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 保存字符串</span></p><p>		stringRedisTemplate.opsForValue().set(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;111&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;111&quot;</span>, stringRedisTemplate.opsForValue().get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>));</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面这段极为简单的测试案例演示了如何通过自动配置的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">StringRedisTemplate</code>对象进行Redis的读写操作，该对象从命名中就可注意到支持的是String类型。如果有使用过spring-data-redis的开发者一定熟悉<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisTemplate&lt;K, V&gt;</code>接口，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">StringRedisTemplate</code>就相当于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisTemplate&lt;String, String&gt;</code>的实现。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了String类型，实战中我们还经常会在Redis中存储对象，这时候我们就会想是否可以使用类似<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisTemplate&lt;String, User&gt;</code>来初始化并进行操作。但是Spring Boot并支持直接使用，需要我们自己实现<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisSerializer&lt;T&gt;</code>接口来对传入对象进行序列化和反序列化，下面我们通过一个实例来完成对象的读写操作。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建要存储的对象：User</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">implements</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Serializable</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> serialVersionUID = -<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1L</span>;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String username;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">User</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String username, Integer age)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.username = username;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.age = age;</p><p>}</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>实现对象的序列化接口</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">RedisObjectSerializer</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">implements</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">RedisSerializer</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Object</span>&gt; </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Converter&lt;Object, <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[]&gt; serializer = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> SerializingConverter();</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Converter&lt;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[], Object&gt; deserializer = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> DeserializingConverter();</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[] EMPTY_ARRAY = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">0</span>];</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Object <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deserialize</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[] bytes)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">if</span> (isEmpty(bytes)) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>;</p><p>}</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">try</span> {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> deserializer.convert(bytes);</p><p>} <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">catch</span> (Exception ex) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throw</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> SerializationException(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Cannot deserialize&quot;</span>, ex);</p><p>}</p><p>}</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[] serialize(Object object) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">if</span> (object == <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> EMPTY_ARRAY;</p><p>}</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">try</span> {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> serializer.convert(object);</p><p>} <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">catch</span> (Exception ex) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> EMPTY_ARRAY;</p><p>}</p><p>}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">boolean</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">isEmpty</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[] data)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> (data == <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span> || data.length == <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">0</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>配置针对User的RedisTemplate实例</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">RedisConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">JedisConnectionFactory <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">jedisConnectionFactory</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JedisConnectionFactory();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> RedisTemplate&lt;String, User&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">redisTemplate</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(RedisConnectionFactory factory)</span> </span>{</p><p>RedisTemplate&lt;String, User&gt; template = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> RedisTemplate&lt;String, User&gt;();</p><p>template.setConnectionFactory(jedisConnectionFactory());</p><p>template.setKeySerializer(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> StringRedisSerializer());</p><p>template.setValueSerializer(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> RedisObjectSerializer());</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> template;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>完成了配置工作后，编写测试用例实验效果</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> RedisTemplate&lt;String, User&gt; redisTemplate;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 保存对象</span></p><p>		User user = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;超人&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		redisTemplate.opsForValue().set(user.getUsername(), user);</p><p>		user = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;蝙蝠侠&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>);</p><p>		redisTemplate.opsForValue().set(user.getUsername(), user);</p><p>		user = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;蜘蛛侠&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>);</p><p>		redisTemplate.opsForValue().set(user.getUsername(), user);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>, redisTemplate.opsForValue().get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;超人&quot;</span>).getAge().longValue());</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>, redisTemplate.opsForValue().get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;蝙蝠侠&quot;</span>).getAge().longValue());</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>, redisTemplate.opsForValue().get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;蜘蛛侠&quot;</span>).getAge().longValue());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">当然spring-data-redis中提供的数据操作远不止这些，本文仅作为在Spring Boot中使用redis时的配置参考，更多对于redis的操作使用，请参考<a href=\"http://docs.spring.io/spring-data/redis/docs/1.6.2.RELEASE/reference/html/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring-data-redis Reference</a>。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">本文完整示例chapter3-2-5</a></li></ul><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('104', 'Spring Boot中使用MongoDB数据库', '前段时间分享了关于Spring Boot中使用Redis的文章，除了Redis之后，我们在互联网产品中还经常会用到另外一款著名的NoSQL数据库MongoDB。下面就来简单介绍一下MongoDB，并且通过一个例子来介绍Spring Boot中对MongoDB访问的配置和使用。MongoDB简介MongoDB是', '2016-10-27 19:31:42', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">前段时间分享了关于<a href=\"http://blog.didispace.com/springbootredis/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot中使用Redis</a>的文章，除了Redis之后，我们在互联网产品中还经常会用到另外一款著名的NoSQL数据库MongoDB。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面就来简单介绍一下MongoDB，并且通过一个例子来介绍Spring Boot中对MongoDB访问的配置和使用。</p><h2 id=\"MongoDB简介\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#MongoDB简介\" class=\"headerlink\" title=\"MongoDB简介\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>MongoDB简介</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">MongoDB是一个基于分布式文件存储的数据库，它是一个介于关系数据库和非关系数据库之间的产品，其主要目标是在键/值存储方式（提供了高性能和高度伸缩性）和传统的RDBMS系统（具有丰富的功能）之间架起一座桥梁，它集两者的优势于一身。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">MongoDB支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型，也因为他的存储格式也使得它所存储的数据在Nodejs程序应用中使用非常流畅。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">既然称为NoSQL数据库，Mongo的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">但是，MongoDB也不是万能的，同MySQL等关系型数据库相比，它们在针对不同的数据类型和事务要求上都存在自己独特的优势。在数据存储的选择中，坚持多样化原则，选择更好更经济的方式，而不是自上而下的统一化。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">较常见的，我们可以直接用MongoDB来存储键值对类型的数据，如：验证码、Session等；由于MongoDB的横向扩展能力，也可以用来存储数据规模会在未来变的非常巨大的数据，如：日志、评论等；由于MongoDB存储数据的弱类型，也可以用来存储一些多变json数据，如：与外系统交互时经常变化的JSON报文。而对于一些对数据有复杂的高事务性要求的操作，如：账户交易等就不适合使用MongoDB来存储。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"https://www.mongodb.org/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">MongoDB官网</a></p><h2 id=\"访问MongoDB\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#访问MongoDB\" class=\"headerlink\" title=\"访问MongoDB\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>访问MongoDB</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中，对如此受欢迎的MongoDB，同样提供了自配置功能。</p><h4 id=\"引入依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#引入依赖\" class=\"headerlink\" title=\"引入依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入依赖</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot中可以通过在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-data-mongodb</code>引入对mongodb的访问支持依赖。它的实现依赖<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-mongodb</code>。是的，您没有看错，又是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data</code>的子项目，之前介绍过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-jpa</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-redis</code>，对于mongodb的访问，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data</code>也提供了强大的支持，下面就开始动手试试吧。</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"快速开始使用Spring-data-mongodb\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#快速开始使用Spring-data-mongodb\" class=\"headerlink\" title=\"快速开始使用Spring-data-mongodb\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速开始使用Spring-data-mongodb</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">若MongoDB的安装配置采用默认端口，那么在自动配置的情况下，我们不需要做任何参数配置，就能马上连接上本地的MongoDB。下面直接使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-mongodb</code>来尝试对mongodb的存取操作。（记得mongod启动您的mongodb）</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建要存储的User实体，包含属性：id、username、age</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String username;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">User</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Long id, String username, Integer age)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.id = id;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.username = username;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.age = age;</p><p>}</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>实现User的数据访问对象：UserRepository</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">MongoRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByUsername</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String username)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在单元测试中调用</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		userRepository.deleteAll();</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 创建三个User，并验证User总数</span></p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1L</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;didi&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2L</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;mama&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3L</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;kaka&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>, userRepository.findAll().size());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 删除一个User，再验证User总数</span></p><p>		User u = userRepository.findOne(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1L</span>);</p><p>		userRepository.delete(u);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>, userRepository.findAll().size());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 删除一个User，再验证User总数</span></p><p>		u = userRepository.findByUsername(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;mama&quot;</span>);</p><p>		userRepository.delete(u);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>, userRepository.findAll().size());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h4 id=\"参数配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#参数配置\" class=\"headerlink\" title=\"参数配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>参数配置</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面的例子，我们可以轻而易举的对MongoDB进行访问，但是实战中，应用服务器与MongoDB通常不会部署于同一台设备之上，这样就无法使用自动化的本地配置来进行使用。这个时候，我们也可以方便的配置来完成支持，只需要在application.properties中加入mongodb服务端的相关配置，具体示例如下：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.data.mongodb.uri=mongodb://name:pass@localhost:27017/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">在尝试此配置时，记得在mongo中对test库创建具备读写权限的用户（用户名为name，密码为pass），不同版本的用户创建语句不同，注意查看文档做好准备工作</em></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">若使用mongodb 2.x，也可以通过如下参数配置，该方式不支持mongodb 3.x。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.data.mongodb.host=localhost spring.data.mongodb.port=27017</p></pre></td></tr></tbody></table></figure></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('105', 'Spring Boot中Web应用的统一异常处理', '我们在做Web应用的时候，请求处理过程中发生错误是非常常见的情况。Spring Boot提供了一个默认的映射：/error，当处理中抛出异常之后，会转到该请求中处理，并且该请求有一个全局的错误页面用来展示异常内容。选择一个之前实现过的Web应用（Chapter3-1-2）为基础，启动该应用，访问一个不存在的U', '2016-10-27 19:32:07', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在做Web应用的时候，请求处理过程中发生错误是非常常见的情况。Spring Boot提供了一个默认的映射：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/error</code>，当处理中抛出异常之后，会转到该请求中处理，并且该请求有一个全局的错误页面用来展示异常内容。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">选择一个之前实现过的Web应用（<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-1-2\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-1-2</a>）为基础，启动该应用，访问一个不存在的URL，或是修改处理内容，直接抛出异常，如：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">hello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throw</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Exception(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;发生错误&quot;</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">此时，可以看到类似下面的报错页面，该页面就是Spring Boot提供的默认error映射页面。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/04/241FA8A7-2493-44B9-A0A3-79849656074A.png\" title=\"alt=默认的错误页面\" class=\"gallery-item\" lg-event-uid=\"&amp;1\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/04/241FA8A7-2493-44B9-A0A3-79849656074A.png\" alt=\"alt=默认的错误页面\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">alt=默认的错误页面</span></p><h2 id=\"统一异常处理\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootexception/#统一异常处理\" class=\"headerlink\" title=\"统一异常处理\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>统一异常处理</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">虽然，Spring Boot中实现了默认的error映射，但是在实际应用中，上面你的错误页面对用户来说并不够友好，我们通常需要去实现我们自己的异常提示。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面我们以之前的Web应用例子为基础（<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-1-2\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-1-2</a>），进行统一异常处理的改造。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建全局异常处理类：通过使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ControllerAdvice</code>定义统一的异常处理类，而不是在每个Controller中逐个定义。<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ExceptionHandler</code>用来定义函数针对的异常类型，最后将Exception对象和请求URL映射到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">error.html</code>中</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ControllerAdvice</span></p><p><span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">GlobalExceptionHandler</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> String DEFAULT_ERROR_VIEW = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;error&quot;</span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ExceptionHandler</span>(value = Exception.class)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> ModelAndView <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">defaultErrorHandler</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(HttpServletRequest req, Exception e)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>ModelAndView mav = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ModelAndView();</p><p>mav.addObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;exception&quot;</span>, e);</p><p>mav.addObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;url&quot;</span>, req.getRequestURL());</p><p>mav.setViewName(DEFAULT_ERROR_VIEW);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> mav;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>实现<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">error.html</code>页面展示：在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">templates</code>目录下创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">error.html</code>，将请求的URL和Exception对象的message输出。</li></ul><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">lang</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;en&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">meta</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">charset</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;UTF-8&quot;</span> /&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>统一异常处理<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span>Error Handler<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${url}&quot;</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${exception.message}&quot;</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">启动该应用，访问：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/hello</code>，可以看到如下错误提示页面。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/05/8C9EACEE-9F7C-42F3-85D1-B5CAD746FA86.png\" title=\"alt=自定义的错误页面\" class=\"gallery-item\" lg-event-uid=\"&amp;2\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/05/8C9EACEE-9F7C-42F3-85D1-B5CAD746FA86.png\" alt=\"alt=自定义的错误页面\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">alt=自定义的错误页面</span></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">通过实现上述内容之后，我们只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Controller</code>中抛出<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Exception</code>，当然我们可能会有多种不同的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Exception</code>。然后在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ControllerAdvice</code>类中，根据抛出的具体<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Exception</code>类型匹配<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ExceptionHandler</code>中配置的异常类型来匹配错误映射和处理。</em></p><h2 id=\"返回JSON格式\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootexception/#返回JSON格式\" class=\"headerlink\" title=\"返回JSON格式\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>返回JSON格式</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上述例子中，通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ControllerAdvice</code>统一定义不同Exception映射到不同错误处理页面。而当我们要实现RESTful API时，返回的错误是JSON格式的数据，而不是HTML页面，这时候我们也能轻松支持。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本质上，只需在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ExceptionHandler</code>之后加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ResponseBody</code>，就能让处理函数return的内容转换为JSON格式。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面以一个具体示例来实现返回JSON格式的异常处理。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建统一的JSON返回对象，code：消息类型，message：消息内容，url：请求的url，data：请求返回的数据</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ErrorInfo</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">T</span>&gt; </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> Integer OK = <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">0</span>;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> Integer ERROR = <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer code;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String message;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String url;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> T data;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建一个自定义异常，用来实验捕获该异常，并返回json</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">MyException</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Exception</span> </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">MyException</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String message)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">super</span>(message);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Controller</code>中增加json映射，抛出<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MyException</code>异常</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Controller</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/json&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">json</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> MyException </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throw</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> MyException(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;发生错误2&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MyException</code>异常创建对应的处理</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ControllerAdvice</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">GlobalExceptionHandler</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ExceptionHandler</span>(value = MyException.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ResponseBody</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> ErrorInfo&lt;String&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">jsonErrorHandler</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(HttpServletRequest req, MyException e)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>ErrorInfo&lt;String&gt; r = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ErrorInfo&lt;&gt;();</p><p>r.setMessage(e.getMessage());</p><p>r.setCode(ErrorInfo.ERROR);</p><p>r.setData(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Some Data&quot;</span>);</p><p>r.setUrl(req.getRequestURL().toString());</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> r;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>启动应用，访问：<a href=\"http://localhost:8080/json%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E5%A6%82%E4%B8%8B%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9%EF%BC%9A\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://localhost:8080/json，可以得到如下返回内容：</a></li></ul><p><figure class=\"highlight javascript\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>{</p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">code</span>: <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>，</p><p>data: <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Some Data&quot;</span>，</p><p>message: <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;发生错误2&quot;</span>，</p><p>url: <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://localhost:8080/json&quot;</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至此，已完成在Spring Boot中创建统一的异常处理，实际实现还是依靠Spring MVC的注解，更多更深入的使用可参考Spring MVC的文档。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文完整示例：<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter3-1-6</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('106', 'Spring Boot属性配置文件详解', '相信很多人选择Spring Boot主要是考虑到它既能兼顾Spring的强大功能，还能实现快速开发的便捷。我们在Spring Boot使用过程中，最直观的感受就是没有了原来自己整合Spring应用时繁多的XML配置内容，替代它的是在pom.xml中引入模块化的Starter POMs，其中各个模块都有自己的默', '2016-10-27 19:32:30', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">相信很多人选择Spring Boot主要是考虑到它既能兼顾Spring的强大功能，还能实现快速开发的便捷。我们在Spring Boot使用过程中，最直观的感受就是没有了原来自己整合Spring应用时繁多的XML配置内容，替代它的是在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入模块化的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Starter POMs</code>，其中各个模块都有自己的默认配置，所以如果不是特殊应用场景，就只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中完成一些属性配置就能开启各模块的应用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在之前的各篇文章中都有提及关于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>的使用，主要用来配置数据库连接、日志相关配置等。除了这些配置内容之外，本文将具体介绍一些在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>配置中的其他特性和使用方法。</p><h2 id=\"自定义属性与加载\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#自定义属性与加载\" class=\"headerlink\" title=\"自定义属性与加载\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>自定义属性与加载</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在使用Spring Boot的时候，通常也需要定义一些自己使用的属性，我们可以如下方式直接定义：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>com.didispace.blog.name=程序猿DD</p><p>com.didispace.blog.title=Spring Boot教程</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">然后通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Value(&quot;${属性名}&quot;)</code>注解来加载对应的配置属性，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">BlogProperties</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Value</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${com.didispace.blog.name}&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Value</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${com.didispace.blog.title}&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String title;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">按照惯例，通过单元测试来验证BlogProperties中的属性是否已经根据配置文件加载了。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> BlogProperties blogProperties;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getHello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		Assert.assertEquals(blogProperties.getName(), <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;程序猿DD&quot;</span>);</p><p>		Assert.assertEquals(blogProperties.getTitle(), <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Spring Boot教程&quot;</span>);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h2 id=\"参数间的引用\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#参数间的引用\" class=\"headerlink\" title=\"参数间的引用\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>参数间的引用</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中的各个参数之间也可以直接引用来使用，就像下面的设置：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>com.didispace.blog.name=程序猿DD</p><p>com.didispace.blog.title=Spring Boot教程</p><p>com.didispace.blog.desc=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${com.didispace.blog.name}</span>正在努力写《<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${com.didispace.blog.title}</span>》</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.blog.desc</code>参数引用了上文中定义的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">title</code>属性，最后该属性的值就是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">程序猿DD正在努力写《Spring Boot教程》</code>。</p><h2 id=\"使用随机数\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#使用随机数\" class=\"headerlink\" title=\"使用随机数\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用随机数</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在一些情况下，有些参数我们需要希望它不是一个固定的值，比如密钥、服务端口等。Spring Boot的属性配置文件中可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">${random}</code>来产生int值、long值或者string字符串，来支持属性的随机值。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 随机字符串</span></p><p>com.didispace.blog.value=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.value}</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 随机int</span></p><p>com.didispace.blog.number=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.int}</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 随机long</span></p><p>com.didispace.blog.bignumber=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.long}</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 10以内的随机数</span></p><p>com.didispace.blog.test1=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.int(10)}</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 10-20的随机数</span></p><p>com.didispace.blog.test2=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.int[10,20]}</span></p></pre></td></tr></tbody></table></figure></p><h2 id=\"通过命令行设置属性值\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#通过命令行设置属性值\" class=\"headerlink\" title=\"通过命令行设置属性值\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>通过命令行设置属性值</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">相信使用过一段时间Spring Boot的用户，一定知道这条命令：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar --server.port=8888</code>，通过使用–server.port属性来设置xxx.jar应用的端口为8888。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在命令行运行时，连续的两个减号<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">--</code>就是对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中的属性值进行赋值的标识。所以，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar --server.port=8888</code>命令，等价于我们在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中添加属性<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">server.port=8888</code>，该设置在样例工程中可见，读者可通过删除该值或使用命令行来设置该值来验证。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过命令行来修改属性值固然提供了不错的便利性，但是通过命令行就能更改应用运行的参数，那岂不是很不安全？是的，所以Spring Boot也贴心的提供了屏蔽命令行访问属性的设置，只需要这句设置就能屏蔽：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">SpringApplication.setAddCommandLineProperties(false)</code>。</p><h2 id=\"多环境配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#多环境配置\" class=\"headerlink\" title=\"多环境配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>多环境配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在开发Spring Boot应用时，通常同一套程序会被应用和安装到几个不同的环境，比如：开发、测试、生产等。其中每个环境的数据库地址、服务器端口等等配置都会不同，如果在为不同环境打包时都要频繁修改配置文件的话，那必将是个非常繁琐且容易发生错误的事。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于多环境的配置，各种项目构建工具或是框架的基本思路是一致的，通过配置多份不同环境的配置文件，再通过打包命令指定需要打包的内容之后进行区分打包，Spring Boot也不例外，或者说更加简单。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中多环境配置文件名需要满足<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-{profile}.properties</code>的格式，其中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">{profile}</code>对应你的环境标识，比如：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>：开发环境</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>：测试环境</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-prod.properties</code>：生产环境</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至于哪个具体的配置文件会被加载，需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active</code>属性来设置，其值对应<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">{profile}</code>值。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active=test</code>就会加载<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>配置文件内容</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面，以不同环境配置不同的服务端口为例，进行样例实验。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">针对各环境新建不同的配置文件<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-prod.properties</code></p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">在这三个文件均都设置不同的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">server.port</code>属性，如：dev环境设置为1111，test环境设置为2222，prod环境设置为3333</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">application.properties中设置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active=dev</code>，就是说默认以dev环境设置</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">测试不同配置的加载</p></li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar</code>，可以观察到服务端口被设置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">1111</code>，也就是默认的开发环境（dev）</li><li>执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar --spring.profiles.active=test</code>，可以观察到服务端口被设置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">2222</code>，也就是测试环境的配置（test）</li><li>执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar --spring.profiles.active=prod</code>，可以观察到服务端口被设置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">3333</code>，也就是生产环境的配置（prod）</li></ul></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">按照上面的实验，可以如下总结多环境的配置思路：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置通用内容，并设置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active=dev</code>，以开发环境为默认配置</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-{profile}.properties</code>中配置各个环境不同的内容</li><li>通过命令行方式去激活不同环境的配置</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例chapter2-1-1</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('107', 'Spring Boot中使用@Async实现异步调用', '什么是“异步调用”？“异步调用”对应的是“同步调用”，同步调用指程序按照定义顺序依次执行，每一行程序都必须等待上一行程序执行完成之后才能执行；异步调用指程序在顺序执行时，不等待异步调用的语句返回结果就执行后面的程序。同步调用下面通过一个简单示例来直观的理解什么是同步调用：定义Task类，创建三个处理函数分别模', '2016-10-27 19:32:55', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">什么是“异步调用”？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">“异步调用”对应的是“同步调用”，<em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">同步调用</em>指程序按照定义顺序依次执行，每一行程序都必须等待上一行程序执行完成之后才能执行；<em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">异步调用</em>指程序在顺序执行时，不等待异步调用的语句返回结果就执行后面的程序。</p><h4 id=\"同步调用\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootasync/#同步调用\" class=\"headerlink\" title=\"同步调用\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>同步调用</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面通过一个简单示例来直观的理解什么是同步调用：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>定义Task类，创建三个处理函数分别模拟三个执行任务的操作，操作消耗时间随机取（10秒内）</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Task</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> Random random =<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Random();</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskOne</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;开始做任务一&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>Thread.sleep(random.nextInt(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10000</span>));</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;完成任务一，耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p>}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskTwo</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;开始做任务二&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>Thread.sleep(random.nextInt(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10000</span>));</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;完成任务二，耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p>}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskThree</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;开始做任务三&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>Thread.sleep(random.nextInt(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10000</span>));</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;完成任务三，耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在单元测试用例中，注入Task对象，并在测试用例中执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskTwo</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskThree</code>三个函数。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Task task;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		task.doTaskOne();</p><p>		task.doTaskTwo();</p><p>		task.doTaskThree();</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>执行单元测试，可以看到类似如下输出：</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>开始做任务一</p><p>完成任务一，耗时：4256毫秒</p><p>开始做任务二</p><p>完成任务二，耗时：4957毫秒</p><p>开始做任务三</p><p>完成任务三，耗时：7173毫秒</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">任务一、任务二、任务三顺序的执行完了，换言之<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskTwo</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskThree</code>三个函数顺序的执行完成。</p><h4 id=\"异步调用\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootasync/#异步调用\" class=\"headerlink\" title=\"异步调用\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>异步调用</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">上述的同步调用虽然顺利的执行完了三个任务，但是可以看到执行时间比较长，若这三个任务本身之间不存在依赖关系，可以并发执行的话，同步调用在执行效率方面就比较差，可以考虑通过异步调用的方式来并发执行。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中，我们只需要通过使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Async</code>注解就能简单的将原来的同步函数变为异步函数，Task类改在为如下模式：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Task</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Async</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskOne</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 同上内容，省略</span></p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Async</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskTwo</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 同上内容，省略</span></p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Async</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskThree</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 同上内容，省略</span></p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了让@Async注解能够生效，还需要在Spring Boot的主程序中配置@EnableAsync，如下所示：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableAsync</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Application</span> </span>{</p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>		SpringApplication.run(Application.class, args);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">此时可以反复执行单元测试，您可能会遇到各种不同的结果，比如：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>没有任何任务相关的输出</li><li>有部分任务相关的输出</li><li>乱序的任务相关的输出</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">原因是目前<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskTwo</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskThree</code>三个函数的时候已经是异步执行了。主程序在异步调用之后，主程序并不会理会这三个函数是否执行完成了，由于没有其他需要执行的内容，所以程序就自动结束了，导致了不完整或是没有输出任务相关内容的情况。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">注： @Async所修饰的函数不要定义为static类型，这样异步调用不会生效</strong></p><h4 id=\"异步回调\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootasync/#异步回调\" class=\"headerlink\" title=\"异步回调\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>异步回调</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了让<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskTwo</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskThree</code>能正常结束，假设我们需要统计一下三个任务并发执行共耗时多少，这就需要等到上述三个函数都完成调动之后记录时间，并计算结果。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">那么我们如何判断上述三个异步调用是否已经执行完成呢？我们需要使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Future&lt;T&gt;</code>来返回异步调用的结果，就像如下方式改造<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>函数：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Async</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Future&lt;String&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskOne</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;开始做任务一&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>Thread.sleep(random.nextInt(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10000</span>));</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;完成任务一，耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> AsyncResult&lt;&gt;(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;任务一完成&quot;</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">按照如上方式改造一下其他两个异步函数之后，下面我们改造一下测试用例，让测试在等待完成三个异步调用之后来做一些其他事情。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>	Future&lt;String&gt; task1 = task.doTaskOne();</p><p>	Future&lt;String&gt; task2 = task.doTaskTwo();</p><p>	Future&lt;String&gt; task3 = task.doTaskThree();</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">while</span>(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>) {</p><p>		<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">if</span>(task1.isDone() &amp;&amp; task2.isDone() &amp;&amp; task3.isDone()) {</p><p>			<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 三个任务都调用完成，退出循环等待</span></p><p>			<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">break</span>;</p><p>		}</p><p>		Thread.sleep(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1000</span>);</p><p>	}</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>	System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;任务全部完成，总耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">看看我们做了哪些改变：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在测试用例一开始记录开始时间</li><li>在调用三个异步函数的时候，返回<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Future&lt;String&gt;</code>类型的结果对象</li><li>在调用完三个异步函数之后，开启一个循环，根据返回的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Future&lt;String&gt;</code>对象来判断三个异步函数是否都结束了。若都结束，就结束循环；若没有都结束，就等1秒后再判断。</li><li>跳出循环之后，根据结束时间 - 开始时间，计算出三个任务并发执行的总耗时。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">执行一下上述的单元测试，可以看到如下结果：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>开始做任务一</p><p>开始做任务二</p><p>开始做任务三</p><p>完成任务三，耗时：37毫秒</p><p>完成任务二，耗时：3661毫秒</p><p>完成任务一，耗时：7149毫秒</p><p>任务全部完成，总耗时：8025毫秒</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到，通过异步调用，让任务一、二、三并发执行，有效的减少了程序的总运行时间。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例Chapter4-1-2</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('108', 'Spring Boot中对log4j进行多环境不同日志级别的控制', '之前介绍了在《Spring boot中使用log4j记录日志》，仅通过log4j.properties对日志级别进行控制，对于需要多环境部署的环境不是很方便，可能我们在开发环境大部分模块需要采用DEBUG级别，在测试环境可能需要小部分采用DEBUG级别，而在生产环境时我们又希望采用INFO级别。这个时候，我们', '2016-10-27 19:33:15', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">之前介绍了在<a href=\"http://blog.didispace.com/springbootlog4j/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring boot中使用log4j记录日志》</a>，仅通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j.properties</code>对日志级别进行控制，对于需要多环境部署的环境不是很方便，可能我们在开发环境大部分模块需要采用DEBUG级别，在测试环境可能需要小部分采用DEBUG级别，而在生产环境时我们又希望采用INFO级别。这个时候，我们要自己手工编辑<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j.properties</code>文件来调整日志级别，不论在版本库中默认保存哪个环境的级别设定，都会增加其他环境使用人员的工作量，虽然很细微，但是手工修改总不是一件很好的选择，难免会发现修改后误提交等问题。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">那么，有没有办法对于开发人员、运维人员都不需要改变源代码实现不同环境的不同日志级别呢?</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">是否还记得之前在<a href=\"http://blog.didispace.com/springbootproperties/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring Boot属性配置文件详解》</a>一文中，提到的关于Spring Boot多环境的配置以及属性文件中的参数引用？若没有了解过相关内容，建议先阅读该文后继续此篇内容。</p><h4 id=\"尝试改造\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog4jmuilt/#尝试改造\" class=\"headerlink\" title=\"尝试改造\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>尝试改造</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">先以<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter4-2-2工程</a>作为基础工程，我们来进行多环境配置的改造。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建多环境配置文件</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>：开发环境</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>：测试环境</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-prod.properties</code>：生产环境</li></ul><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中添加属性：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active=dev</code>（默认激活<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>配置）</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>配置文件中添加日志级别定义：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace=DEBUG</code></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-prod.properties</code>配置文件中添加日志级别定义：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace=INFO</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面的定义，根据<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace</code>在不同环境的配置文件中定义了不同的级别，但是我们已经把日志交给了log4j管理，看看我们log4j.properties中对com.didispace包下的日志定义是这样的，固定定义了DEBUG级别，并输出到名为didifile定义的appender中。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># LOG4J配置</span></p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.category.com.didispace=DEBUG, didifile</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># com.didispace下的日志输出</span></p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.file=logs/my.log</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.DatePattern=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;.&#39;</span>yyyy-MM-dd</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.layout=org.apache.log4j.PatternLayout</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">那么，要如何动态的改变这个DEBUG级别呢？在<a href=\"http://blog.didispace.com/springbootproperties/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring Boot属性配置文件详解》</a>中还提到了关于配置文件中参数的引用。我们需要将DEBUG替换成<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-{profile}.properties</code>配置文件中定义<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace</code>即可，所以配置变为如下内容：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># LOG4J配置</span></p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.category.com.didispace=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${logging.level.com.didispace}</span>, didifile</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># com.didispace下的日志输出</span></p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.file=logs/my.log</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.DatePattern=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;.&#39;</span>yyyy-MM-dd</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.layout=org.apache.log4j.PatternLayout</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">到这里我们已经完成了所有配置工作，我们可以通过运行单元测试，然后看my.log文件中输出的日志内容。通过修改默认的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>配置的日志级别为INFO，再运行单元测试的DEBUG内容是否被输出到了my.log中验证参数是否被正确引用了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于不同环境的使用人员也不需要改变代码或打包文件，只需要通过执行命令中参加参数即可，比如我想采用生产环境的级别，那么我可以这样运行应用：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>java -jar xxx.jar --spring.profiles.active=prod</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例Chapter4-2-3</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('109', 'Spring Boot中使用AOP统一处理Web请求日志', 'AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是Spring框架中的一个重要内容，它通过对既有程序定义一个切入点，然后在其前后切入不同的执行内容，比如常见的有：打开数据库连接/关闭数据库连接、打开', '2016-10-27 19:33:44', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是Spring框架中的一个重要内容，它通过对既有程序定义一个切入点，然后在其前后切入不同的执行内容，比如常见的有：打开数据库连接/关闭数据库连接、打开事务/关闭事务、记录日志等。基于AOP不会破坏原来程序逻辑，因此它可以很好的对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面主要讲两个内容，一个是如何在Spring Boot中引入Aop功能，二是如何使用Aop做切面去统一处理Web请求的日志。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">以下所有操作基于<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter4-2-2工程</a>进行。</p><h2 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">因为需要对web请求做切面来记录日志，所以先引入web模块，并创建一个简单的hello请求的处理。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入web模块</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>实现一个简单请求处理：通过传入name参数，返回“hello xxx”的功能。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RestController</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>, method = RequestMethod.GET)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ResponseBody</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">hello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@RequestParam String name)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Hello &quot;</span> + name;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面，我们可以对上面的/hello请求，进行切面日志记录。</p><h2 id=\"引入AOP依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#引入AOP依赖\" class=\"headerlink\" title=\"引入AOP依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入AOP依赖</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中引入AOP就跟引入其他模块一样，非常简单，只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入如下依赖：</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了引入AOP依赖包后，一般来说并不需要去做其他配置。也许在Spring中使用过注解配置方式的人会问是否需要在程序主类中增加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableAspectJAutoProxy</code>来启用，实际并不需要。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看下面关于AOP的默认配置属性，其中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.aop.auto</code>属性默认是开启的，也就是说只要引入了AOP依赖后，默认已经增加了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableAspectJAutoProxy</code>。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># AOP</span></p><p>spring.aop.auto=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span> <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Add @EnableAspectJAutoProxy.</span></p><p>spring.aop.proxy-target-class=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span> <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Whether subclass-based (CGLIB) proxies are to be created (true) as</span></p><p>opposed to standard Java interface-based proxies (<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>).</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">而当我们需要使用CGLIB来实现AOP的时候，需要配置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.aop.proxy-target-class=true</code>，不然默认使用的是标准Java的实现。</p><h2 id=\"实现Web层的日志切面\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#实现Web层的日志切面\" class=\"headerlink\" title=\"实现Web层的日志切面\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>实现Web层的日志切面</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">实现AOP的切面主要有以下几个要素：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Aspect</code>注解将一个java类定义为切面类</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Pointcut</code>定义一个切入点，可以是一个规则表达式，比如下例中某个package下的所有函数，也可以是一个注解等。</li><li>根据需要在切入点不同位置的切入内容</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Before</code>在切入点开始处切入内容</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@After</code>在切入点结尾处切入内容</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@AfterReturning</code>在切入点return内容之后切入内容（可以用来对处理返回值做一些加工处理）</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Around</code>在切入点前后切入内容，并自己控制何时执行切入点自身的内容</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@AfterThrowing</code>用来处理当切入内容部分抛出异常之后的处理逻辑</li></ul></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Aspect</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">WebLogAspect</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Logger logger = Logger.getLogger(getClass());</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Pointcut</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;execution(public * com.didispace.web..*.*(..))&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">webLog</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>{}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;webLog()&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doBefore</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(JoinPoint joinPoint)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Throwable </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 接收到请求，记录请求内容</span></p><p>ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</p><p>HttpServletRequest request = attributes.getRequest();</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 记录下请求内容</span></p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;URL : &quot;</span> + request.getRequestURL().toString());</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;HTTP_METHOD : &quot;</span> + request.getMethod());</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;IP : &quot;</span> + request.getRemoteAddr());</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CLASS_METHOD : &quot;</span> + joinPoint.getSignature().getDeclaringTypeName() + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;.&quot;</span> + joinPoint.getSignature().getName());</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ARGS : &quot;</span> + Arrays.toString(joinPoint.getArgs()));</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@AfterReturning</span>(returning = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ret&quot;</span>, pointcut = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;webLog()&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doAfterReturning</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Object ret)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Throwable </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 处理完请求，返回内容</span></p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;RESPONSE : &quot;</span> + ret);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看上面的例子，通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Pointcut</code>定义的切入点为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.web</code>包下的所有函数（对web层所有请求处理做切入点），然后通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Before</code>实现，对请求内容的日志记录（本文只是说明过程，可以根据需要调整内容），最后通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@AfterReturning</code>记录请求返回的对象。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过运行程序并访问：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/hello?name=didi</code>，可以获得下面的日志输出</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>2016-05-19 13:42:13,156 &nbsp;INFO WebLogAspect:41 - URL : http://localhost:8080/hello</p><p>2016-05-19 13:42:13,156 &nbsp;INFO WebLogAspect:42 - HTTP_METHOD : http://localhost:8080/hello</p><p>2016-05-19 13:42:13,157 &nbsp;INFO WebLogAspect:43 - IP : 0:0:0:0:0:0:0:1</p><p>2016-05-19 13:42:13,160 &nbsp;INFO WebLogAspect:44 - CLASS_METHOD : com.didispace.web.HelloController.hello</p><p>2016-05-19 13:42:13,160 &nbsp;INFO WebLogAspect:45 - ARGS : [didi]</p><p>2016-05-19 13:42:13,170 &nbsp;INFO WebLogAspect:52 - RESPONSE:Hello didi</p></pre></td></tr></tbody></table></figure></p><h4 id=\"优化：AOP切面中的同步问题\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#优化：AOP切面中的同步问题\" class=\"headerlink\" title=\"优化：AOP切面中的同步问题\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>优化：AOP切面中的同步问题</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在WebLogAspect切面中，分别通过doBefore和doAfterReturning两个独立函数实现了切点头部和切点返回后执行的内容，若我们想统计请求的处理时间，就需要在doBefore处记录时间，并在doAfterReturning处通过当前时间与开始处记录的时间计算得到请求处理的消耗时间。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">那么我们是否可以在WebLogAspect切面中定义一个成员变量来给doBefore和doAfterReturning一起访问呢？是否会有同步问题呢？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">的确，直接在这里定义基本类型会有同步问题，所以我们可以引入ThreadLocal对象，像下面这样进行记录：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Aspect</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">WebLogAspect</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Logger logger = Logger.getLogger(getClass());</p><p>ThreadLocal&lt;Long&gt; startTime = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ThreadLocal&lt;&gt;();</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Pointcut</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;execution(public * com.didispace.web..*.*(..))&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">webLog</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>{}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;webLog()&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doBefore</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(JoinPoint joinPoint)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Throwable </span>{</p><p>startTime.set(System.currentTimeMillis());</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略日志记录内容</span></p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@AfterReturning</span>(returning = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ret&quot;</span>, pointcut = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;webLog()&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doAfterReturning</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Object ret)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Throwable </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 处理完请求，返回内容</span></p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;RESPONSE : &quot;</span> + ret);</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;SPEND TIME : &quot;</span> + (System.currentTimeMillis() - startTime.get()));</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h4 id=\"优化：AOP切面的优先级\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#优化：AOP切面的优先级\" class=\"headerlink\" title=\"优化：AOP切面的优先级\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>优化：AOP切面的优先级</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于通过AOP实现，程序得到了很好的解耦，但是也会带来一些问题，比如：我们可能会对Web层做多个切面，校验用户，校验头信息等等，这个时候经常会碰到切面的处理顺序问题。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">所以，我们需要定义每个切面的优先级，我们需要<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(i)</code>注解来标识切面的优先级。<strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">i的值越小，优先级越高</strong>。假设我们还有一个切面是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">CheckNameAspect</code>用来校验name必须为didi，我们为其设置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(10)</code>，而上文中WebLogAspect设置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(5)</code>，所以WebLogAspect有更高的优先级，这个时候执行顺序是这样的：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Before</code>中优先执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(5)</code>的内容，再执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(10)</code>的内容</li><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@After</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@AfterReturning</code>中优先执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(10)</code>的内容，再执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(5)</code>的内容</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">所以我们可以这样子总结：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在切入点前的操作，按order的值由小到大执行</li><li>在切入点后的操作，按order的值由大到小执行</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例Chapter4-2-4</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('110', 'Spring Boot中的事务管理', '什么是事务？我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。事务的作用就是为了保证用户的每一个操作都是可', '2016-10-27 19:34:08', '0', '0', '<h2 id=\"什么是事务？\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">什么是事务？</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">事务管理是Spring框架中最为常用的功能之一，我们在使用Spring Boot开发应用时，大部分情况下也都需要使用事务。</p><h2 id=\"快速入门\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springboottransactional/#快速入门\" class=\"headerlink\" title=\"快速入门\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速入门</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中，当我们使用了spring-boot-starter-jdbc或spring-boot-starter-data-jpa依赖的时候，框架会自动默认分别注入DataSourceTransactionManager或JpaTransactionManager。所以我们不需要任何额外配置就可以用@Transactional注解进行事务的使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们以之前实现的《用spring-data-jpa访问数据库》的示例<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-2-2\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-2-2</a>作为基础工程进行事务的使用常识。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在该样例工程中（若对该数据访问方式不了解，可先阅读该<a href=\"http://blog.didispace.com/springbootdata2/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">文章</a>），我们引入了spring-data-jpa，并创建了User实体以及对User的数据访问对象UserRepository，在ApplicationTest类中实现了使用UserRepository进行数据读写的单元测试用例，如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 创建10条记录</span></p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;BBB&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CCC&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DDD&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;EEE&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;GGG&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">70</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;HHH&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">80</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;III&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">90</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;JJJ&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>));</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略后续的一些验证操作</span></p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到，在这个单元测试用例中，使用UserRepository对象连续创建了10个User实体到数据库中，下面我们人为的来制造一些异常，看看会发生什么情况。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过定义User的name属性长度为5，这样通过创建时User实体的name属性超长就可以触发异常产生。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Entity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@GeneratedValue</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>, length = <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略构造函数、getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">修改测试用例中创建记录的语句，将一条记录的name长度超过5，如下：name为HHHHHHHHH的User对象将会抛出异常。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 创建10条记录</span></p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;BBB&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CCC&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DDD&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;EEE&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;GGG&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">70</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;HHHHHHHHHH&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">80</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;III&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">90</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;JJJ&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>));</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">执行测试用例，可以看到控制台中抛出了如下异常，name字段超长：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>2016-05-27 10:30:35.948 &nbsp;WARN 2660 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : SQL Error: 1406, SQLState: 22001</p><p>2016-05-27 10:30:35.948 ERROR 2660 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : Data truncation: Data too long <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> column <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;name&#39;</span> at row 1</p><p>2016-05-27 10:30:35.951 &nbsp;WARN 2660 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : SQL Warning Code: 1406, SQLState: HY000</p><p>2016-05-27 10:30:35.951 &nbsp;WARN 2660 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : Data too long <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> column <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;name&#39;</span> at row 1</p><p>org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">此时查数据库中，创建了name从AAA到GGG的记录，没有HHHHHHHHHH、III、JJJ的记录。而若这是一个希望保证完整性操作的情况下，AAA到GGG的记录希望能在发生异常的时候被回退，这时候就可以使用事务让它实现回退，做法非常简单，我们只需要在test函数上添加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Transactional</code>注解即可。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略测试内容</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">再来执行该测试用例，可以看到控制台中输出了回滚日志（Rolled back transaction for test context），</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>2016-05-27 10:35:32.210 &nbsp;WARN 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : SQL Error: 1406, SQLState: 22001</p><p>2016-05-27 10:35:32.210 ERROR 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : Data truncation: Data too long <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> column <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;name&#39;</span> at row 1</p><p>2016-05-27 10:35:32.213 &nbsp;WARN 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : SQL Warning Code: 1406, SQLState: HY000</p><p>2016-05-27 10:35:32.213 &nbsp;WARN 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : Data too long <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> column <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;name&#39;</span> at row 1</p><p>2016-05-27 10:35:32.221 &nbsp;INFO 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.s.t.c.transaction.TransactionContext &nbsp; : Rolled back transaction <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span> context [DefaultTestContext@1d7a715 <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Class = ApplicationTests, <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Instance = com.didispace.ApplicationTests@95a785, <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Method = <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>@ApplicationTests, <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Exception = org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement, mergedContextConfiguration = [MergedContextConfiguration@11f39f9 <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Class = ApplicationTests, locations = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{}&#39;</span>, classes = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{class com.didispace.Application}&#39;</span>, contextInitializerClasses = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;[]&#39;</span>, activeProfiles = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{}&#39;</span>, propertySourceLocations = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{}&#39;</span>, propertySourceProperties = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{}&#39;</span>, contextLoader = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;org.springframework.boot.test.SpringApplicationContextLoader&#39;</span>, parent = [null]]].</p><p>org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">再看数据库中，User表就没有AAA到GGG的用户数据了，成功实现了自动回滚。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这里主要通过单元测试演示了如何使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Transactional</code>注解来声明一个函数需要被事务管理，通常我们单元测试为了保证每个测试之间的数据独立，会使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Rollback</code>注解让每个单元测试都能在结束时回滚。而真正在开发业务逻辑时，我们通常在service层接口中使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Transactional</code>来对各个业务逻辑进行事务管理的配置，例如：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserService</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">login</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, String password)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><h2 id=\"事务详解\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springboottransactional/#事务详解\" class=\"headerlink\" title=\"事务详解\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>事务详解</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">上面的例子中我们使用了默认的事务配置，可以满足一些基本的事务需求，但是当我们项目较大较复杂时（比如，有多个数据源等），这时候需要在声明事务时，指定不同的事务管理器。对于不同数据源的事务管理配置可以见<a href=\"http://blog.didispace.com/springbootmultidatasource/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring Boot多数据源配置与使用》</a>中的设置。在声明事务时，只需要通过value属性指定配置的事务管理器名即可，例如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Transactional(value=&quot;transactionManagerPrimary&quot;)</code>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了指定不同的事务管理器之后，还能对事务进行隔离级别和传播行为的控制，下面分别详细解释：</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">####　隔离级别</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">隔离级别是指若干个并发的事务之间的隔离程度，与我们开发时候主要相关的场景包括：脏读取、重复读、幻读。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们可以看<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.transaction.annotation.Isolation</code>枚举类中定义了五个表示隔离级别的值：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">enum</span> Isolation {</p><p>DEFAULT(-<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>),</p><p>READ_UNCOMMITTED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>),</p><p>READ_COMMITTED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>),</p><p>REPEATABLE_READ(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">4</span>),</p><p>SERIALIZABLE(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">8</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">DEFAULT</code>：这是默认值，表示使用底层数据库的默认隔离级别。对大部分数据库而言，通常这值就是：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">READ_COMMITTED</code>。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">READ_UNCOMMITTED</code>：该隔离级别表示一个事务可以读取另一个事务修改但还没有提交的数据。该级别不能防止脏读和不可重复读，因此很少使用该隔离级别。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">READ_COMMITTED</code>：该隔离级别表示一个事务只能读取另一个事务已经提交的数据。该级别可以防止脏读，这也是大多数情况下的推荐值。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">REPEATABLE_READ</code>：该隔离级别表示一个事务在整个过程中可以多次重复执行某个查询，并且每次返回的记录都相同。即使在多次查询之间有新增的数据满足该查询，这些新增的记录也会被忽略。该级别可以防止脏读和不可重复读。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">SERIALIZABLE</code>：所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。但是这将严重影响程序的性能。通常情况下也不会用到该级别。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">指定方法：通过使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">isolation</code>属性设置，例如：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span>(isolation = Isolation.DEFAULT)</p></pre></td></tr></tbody></table></figure></p><h4 id=\"传播行为\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springboottransactional/#传播行为\" class=\"headerlink\" title=\"传播行为\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>传播行为</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">所谓事务的传播行为是指，如果在开始当前事务之前，一个事务上下文已经存在，此时有若干选项可以指定一个事务性方法的执行行为。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们可以看<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.transaction.annotation.Propagation</code>枚举类中定义了6个表示传播行为的枚举值：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">enum</span> Propagation {</p><p>REQUIRED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">0</span>),</p><p>SUPPORTS(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>),</p><p>MANDATORY(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>),</p><p>REQUIRES_NEW(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>),</p><p>NOT_SUPPORTED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">4</span>),</p><p>NEVER(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>),</p><p>NESTED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">6</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">REQUIRED</code>：如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">SUPPORTS</code>：如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MANDATORY</code>：如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">REQUIRES_NEW</code>：创建一个新的事务，如果当前存在事务，则把当前事务挂起。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">NOT_SUPPORTED</code>：以非事务方式运行，如果当前存在事务，则把当前事务挂起。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">NEVER</code>：以非事务方式运行，如果当前存在事务，则抛出异常。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">NESTED</code>：如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">REQUIRED</code>。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">指定方法：通过使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">propagation</code>属性设置，例如：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span>(propagation = Propagation.REQUIRED)</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-3-1</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234);\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('111', 'Spring Boot中使用Spring Security进行安全控制', '我们在编写Web应用时，经常需要对页面做一些安全控制，比如：对于没有访问权限的用户需要转到登录表单页面。要实现访问控制的方法多种多样，可以通过Aop、拦截器实现，也可以通过框架实现（如：Apache Shiro、Spring Security）。本文将具体介绍在Spring Boot中如何使用Spring S', '2016-10-27 19:34:31', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在编写Web应用时，经常需要对页面做一些安全控制，比如：对于没有访问权限的用户需要转到登录表单页面。要实现访问控制的方法多种多样，可以通过Aop、拦截器实现，也可以通过框架实现（如：Apache Shiro、Spring Security）。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文将具体介绍在Spring Boot中如何使用Spring Security进行安全控制。</p><h2 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，构建一个简单的Web工程，以用于后续添加安全控制，也可以用之前<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-1-2</a>做为基础工程。若对如何使用Spring Boot构建Web应用，可以先阅读<a href=\"http://blog.didispace.com/springbootweb/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring Boot开发Web应用》</a>一文。</p><h4 id=\"Web层实现请求映射\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#Web层实现请求映射\" class=\"headerlink\" title=\"Web层实现请求映射\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Web层实现请求映射</h4><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Controller</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">index</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;index&quot;</span>;</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">hello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/</code>：映射到index.html</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/hello</code>：映射到hello.html</li></ul><h4 id=\"实现映射的页面\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#实现映射的页面\" class=\"headerlink\" title=\"实现映射的页面\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>实现映射的页面</h4><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>src/main/resources/templates/index.html</li></ul><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:th</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:sec</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity3&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>Spring Security入门<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span>欢迎使用Spring Security!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">p</span>&gt;</span>点击 <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">a</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:href</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;@{/hello}&quot;</span>&gt;</span>这里<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">a</span>&gt;</span> 打个招呼吧<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">p</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>src/main/resources/templates/hello.html</li></ul><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:th</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:sec</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity3&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>Hello World!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span>Hello world!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到在index.html中提供到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/hello</code>的链接，显然在这里没有任何安全控制，所以点击链接后就可以直接跳转到hello.html页面。</p><h2 id=\"整合Spring-Security\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#整合Spring-Security\" class=\"headerlink\" title=\"整合Spring Security\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>整合Spring Security</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在这一节，我们将对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/hello</code>页面进行权限控制，必须是授权用户才能访问。当没有权限的用户访问后，跳转到登录页面。</p><h4 id=\"添加依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#添加依赖\" class=\"headerlink\" title=\"添加依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>添加依赖</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在pom.xml中添加如下配置，引入对Spring Security的依赖。</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p><p>...</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-security<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>...</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"Spring-Security配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#Spring-Security配置\" class=\"headerlink\" title=\"Spring Security配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Spring Security配置</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">创建Spring Security的配置类<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">WebSecurityConfig</code>，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableWebSecurity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">WebSecurityConfig</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">WebSecurityConfigurerAdapter</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">protected</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">configure</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(HttpSecurity http)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>http</p><p>.authorizeRequests()</p><p>.antMatchers(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/home&quot;</span>).permitAll()</p><p>.anyRequest().authenticated()</p><p>.and()</p><p>.formLogin()</p><p>.loginPage(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/login&quot;</span>)</p><p>.permitAll()</p><p>.and()</p><p>.logout()</p><p>.permitAll();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">configureGlobal</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(AuthenticationManagerBuilder auth)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>auth</p><p>.inMemoryAuthentication()</p><p>.withUser(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;user&quot;</span>).password(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;password&quot;</span>).roles(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;USER&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableWebSecurity</code>注解开启Spring Security的功能</li><li>继承<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">WebSecurityConfigurerAdapter</code>，并重写它的方法来设置一些web安全的细节</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">configure(HttpSecurity http)</code>方法</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">authorizeRequests()</code>定义哪些URL需要被保护、哪些不需要被保护。例如以上代码指定了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/home</code>不需要任何认证就可以访问，其他的路径都必须通过身份验证。</li><li>通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">formLogin()</code>定义当需要用户登录时候，转到的登录页面。</li></ul><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">configureGlobal(AuthenticationManagerBuilder auth)</code>方法，在内存中创建了一个用户，该用户的名称为user，密码为password，用户角色为USER。</li></ul><h4 id=\"新增登录请求与页面\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#新增登录请求与页面\" class=\"headerlink\" title=\"新增登录请求与页面\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>新增登录请求与页面</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了Spring Security配置之后，我们还缺少登录的相关内容。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">HelloController中新增<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/login</code>请求映射至<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">login.html</code></p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Controller</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略之前的内容...</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/login&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">login</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;login&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">新增登录页面：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/templates/login.html</code></p><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/1999/xhtml&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:th</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org&quot;</span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:sec</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity3&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>Spring Security Example <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:if</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${param.error}&quot;</span>&gt;</span></p><p>用户名或密码错</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:if</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${param.logout}&quot;</span>&gt;</span></p><p>您已注销成功</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">form</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:action</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;@{/login}&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">method</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;post&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">label</span>&gt;</span> 用户名 : <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">input</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">type</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;text&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">name</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;username&quot;</span>/&gt;</span> <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">label</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">label</span>&gt;</span> 密 &nbsp;码 : <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">input</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">type</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;password&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">name</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;password&quot;</span>/&gt;</span> <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">label</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">input</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">type</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;submit&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">value</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;登录&quot;</span>/&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">form</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到，实现了一个简单的通过用户名和密码提交到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/login</code>的登录方式。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">根据配置，Spring Security提供了一个过滤器来拦截请求并验证用户身份。如果用户身份认证失败，页面就重定向到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/login?error</code>，并且页面中会展现相应的错误信息。若用户想要注销登录，可以通过访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/login?logout</code>请求，在完成注销之后，页面展现相应的成功消息。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">到这里，我们启用应用，并访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/</code>，可以正常访问。但是访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/hello</code>的时候被重定向到了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/login</code>页面，因为没有登录，用户没有访问权限，通过输入用户名user和密码password进行登录后，跳转到了Hello World页面，再也通过访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/login?logout</code>，就可以完成注销操作。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了让整个过程更完成，我们可以修改<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello.html</code>，让它输出一些内容，并提供“注销”的链接。</p><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:th</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:sec</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity3&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>Hello World!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:inline</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;text&quot;</span>&gt;</span>Hello [[${#httpServletRequest.remoteUser}]]!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">form</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:action</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;@{/logout}&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">method</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;post&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">input</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">type</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;submit&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">value</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;注销&quot;</span>/&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">form</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文通过一个最简单的示例完成了对Web应用的安全控制，Spring Security提供的功能还远不止于此，更多Spring Security的使用可参见<a href=\"http://docs.spring.io/spring-security/site/docs/4.1.0.RELEASE/reference/htmlsingle/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Security Reference</a>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter4-3-1</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234);\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('112', 'Spring Boot中的缓存支持（一）注解配置与EhCache使用', '随着时间的积累，应用的使用用户不断增加，数据规模也越来越大，往往数据库查询操作会成为影响用户使用体验的瓶颈，此时使用缓存往往是解决这一问题非常好的手段之一。Spring 3开始提供了强大的基于注解的缓存支持，可以通过注解配置方式低侵入的给原有Spring应用增加缓存功能，提高数据访问性能。在Spring Bo', '2016-10-27 19:34:58', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">随着时间的积累，应用的使用用户不断增加，数据规模也越来越大，往往数据库查询操作会成为影响用户使用体验的瓶颈，此时使用缓存往往是解决这一问题非常好的手段之一。Spring 3开始提供了强大的基于注解的缓存支持，可以通过注解配置方式低侵入的给原有Spring应用增加缓存功能，提高数据访问性能。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中对于缓存的支持，提供了一系列的自动化配置，使我们可以非常方便的使用缓存。下面我们通过一个简单的例子来展示，我们是如何给一个既有应用增加缓存功能的。</p><h2 id=\"快速入门\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#快速入门\" class=\"headerlink\" title=\"快速入门\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速入门</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，下载样例工程<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter3-2-2</a>。本例通过spring-data-jpa实现了对User用户表的一些操作，若没有这个基础，可以先阅读<a href=\"http://blog.didispace.com/springbootdata2/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《使用Spring-data-jpa简化数据访问层》</a>一文对数据访问有所基础。</p><h4 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了更好的理解缓存，我们先对该工程做一些简单的改造。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中新增<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.jpa.properties.hibernate.show_sql=true</code>，开启hibernate对sql语句的打印</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">修改单元测试<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ApplicationTests</code>，初始化插入User表一条用户名为AAA，年龄为10的数据。并通过findByName函数完成两次查询。</p></li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">before</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		User u1 = userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;第一次查询：&quot;</span> + u1.getAge());</p><p>		User u2 = userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;第二次查询：&quot;</span> + u2.getAge());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>执行单元测试，我们可以在控制台中看到下面内容。</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第二次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在测试用例执行前，插入了一条User记录。然后每次findByName调用时，都执行了一句select语句来查询用户名为AAA的记录。</p><h4 id=\"引入缓存\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#引入缓存\" class=\"headerlink\" title=\"引入缓存\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入缓存</h4><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入cache依赖，添加如下内容：</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-cache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在Spring Boot主类中增加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableCaching</code>注解开启缓存功能，如下：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableCaching</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Application</span> </span>{</p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>		SpringApplication.run(Application.class, args);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在数据访问接口中，增加缓存配置注解，如：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@CacheConfig</span>(cacheNames = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Cacheable</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>再来执行以下单元测试，可以在控制台中输出了下面的内容：</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>第二次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">到这里，我们可以看到，在调用第二次findByName函数时，没有再执行select语句，也就直接减少了一次数据库的读取操作。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了可以更好的观察，缓存的存储，我们可以在单元测试中注入cacheManager。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> CacheManager cacheManager;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">使用debug模式运行单元测试，观察cacheManager中的缓存集users以及其中的User对象的缓存加深理解。</p><h2 id=\"Cache注解详解\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#Cache注解详解\" class=\"headerlink\" title=\"Cache注解详解\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Cache注解详解</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">回过头来我们再来看，这里使用到的两个注解分别作了什么事情。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig</code>：主要用于配置该类中会用到的一些共用的缓存配置。在这里<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig(cacheNames = &quot;users&quot;)</code>：配置了该数据访问对象中返回的内容将存储于名为users的缓存对象中，我们也可以不使用该注解，直接通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>自己配置缓存集的名字来定义。</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>：配置了findByName函数的返回值将被加入缓存。同时在查询时，会先从缓存中获取，若不存在才再发起对数据库的访问。该注解主要有下面几个参数：</p></li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheNames</code>：两个等同的参数（<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheNames</code>为Spring 4新增，作为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>的别名），用于指定缓存存储的集合名。由于Spring 4中新增了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig</code>，因此在Spring 3中原本必须有的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>属性，也成为非必需项了</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">key</code>：缓存对象存储在Map集合中的key值，非必需，缺省按照函数的所有参数组合作为key值，若自己配置需使用SpEL表达式，比如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable(key = &quot;#p0&quot;)</code>：使用函数第一个参数作为缓存的key值，更多关于SpEL表达式的详细内容可参考<a href=\"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html#cache-spel-context\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">官方文档</a></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">condition</code>：缓存对象的条件，非必需，也需使用SpEL表达式，只有满足表达式条件的内容才会被缓存，比如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable(key = &quot;#p0&quot;, condition = &quot;#p0.length() &lt; 3&quot;)</code>，表示只有当第一个参数的长度小于3的时候才会被缓存，若做此配置上面的AAA用户就不会被缓存，读者可自行实验尝试。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">unless</code>：另外一个缓存条件参数，非必需，需使用SpEL表达式。它不同于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">condition</code>参数的地方在于它的判断时机，该条件是在函数被调用之后才做判断的，所以它可以通过对result进行判断。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">keyGenerator</code>：用于指定key生成器，非必需。若需要指定一个自定义的key生成器，我们需要去实现<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.cache.interceptor.KeyGenerator</code>接口，并使用该参数来指定。需要注意的是：<strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">该参数与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">key</code>是互斥的</strong></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheManager</code>：用于指定使用哪个缓存管理器，非必需。只有当有多个时才需要使用</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheResolver</code>：用于指定使用那个缓存解析器，非必需。需通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.cache.interceptor.CacheResolver</code>接口来实现自己的缓存解析器，并用该参数指定。</li></ul></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了这里用到的两个注解之外，还有下面几个核心注解：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CachePut</code>：配置于函数上，能够根据参数定义条件来进行缓存，它与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>不同的是，它每次都会真是调用函数，所以主要用于数据新增和修改操作上。它的参数与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>类似，具体功能可参考上面对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>参数的解析</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheEvict</code>：配置于函数上，通常用在删除方法上，用来从缓存中移除相应数据。除了同<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>一样的参数之外，它还有下面两个参数：</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">allEntries</code>：非必需，默认为false。当为true时，会移除所有数据</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">beforeInvocation</code>：非必需，默认为false，会在调用方法之后移除数据。当为true时，会在调用方法之前移除数据。</li></ul></ul><h2 id=\"缓存配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#缓存配置\" class=\"headerlink\" title=\"缓存配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>缓存配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成了上面的缓存实验之后，可能大家会问，那我们在Spring Boot中到底使用了什么缓存呢？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableCaching</code>注解自动化配置合适的缓存管理器（CacheManager），Spring Boot根据下面的顺序去侦测缓存提供者：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Generic</li><li>JCache (JSR-107)</li><li>EhCache 2.x</li><li>Hazelcast</li><li>Infinispan</li><li>Redis</li><li>Guava</li><li>Simple</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了按顺序侦测外，我们也可以通过配置属性<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.cache.type</code>来强制指定。我们可以通过debug调试查看cacheManager对象的实例来判断当前使用了什么缓存。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文中不对所有的缓存做详细介绍，下面以常用的EhCache为例，看看如何配置来使用EhCache进行缓存管理。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中开启EhCache非常简单，只需要在工程中加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ehcache.xml</code>配置文件并在pom.xml中增加ehcache依赖，框架只要发现该文件，就会创建EhCache的缓存管理器。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources</code>目录下创建：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ehcache.xml</code></li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ehcache</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:xsi</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xsi:noNamespaceSchemaLocation</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ehcache.xsd&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">cache</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">name</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">maxEntriesLocalHeap</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;200&quot;</span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">timeToLiveSeconds</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;600&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">cache</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ehcache</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>net.sf.ehcache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>ehcache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成上面的配置之后，再通过debug模式运行单元测试，观察此时CacheManager已经是EhCacheManager实例，说明EhCache开启成功了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于EhCache的配置文件也可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.cache.ehcache.config</code>属性来指定，比如：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.cache.ehcache.config=classpath:config/another-config.xml</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter-4-4-1</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">【转载请注明出处】：<a href=\"http://blog.didispace.com/springbootcache1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://blog.didispace.com/springbootcache1/</a></strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('113', 'Spring Boot中的缓存支持（一）注解配置与EhCache使用', '随着时间的积累，应用的使用用户不断增加，数据规模也越来越大，往往数据库查询操作会成为影响用户使用体验的瓶颈，此时使用缓存往往是解决这一问题非常好的手段之一。Spring 3开始提供了强大的基于注解的缓存支持，可以通过注解配置方式低侵入的给原有Spring应用增加缓存功能，提高数据访问性能。在Spring Bo', '2016-10-27 19:35:23', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">随着时间的积累，应用的使用用户不断增加，数据规模也越来越大，往往数据库查询操作会成为影响用户使用体验的瓶颈，此时使用缓存往往是解决这一问题非常好的手段之一。Spring 3开始提供了强大的基于注解的缓存支持，可以通过注解配置方式低侵入的给原有Spring应用增加缓存功能，提高数据访问性能。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中对于缓存的支持，提供了一系列的自动化配置，使我们可以非常方便的使用缓存。下面我们通过一个简单的例子来展示，我们是如何给一个既有应用增加缓存功能的。</p><h2 id=\"快速入门\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#快速入门\" class=\"headerlink\" title=\"快速入门\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速入门</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，下载样例工程<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter3-2-2</a>。本例通过spring-data-jpa实现了对User用户表的一些操作，若没有这个基础，可以先阅读<a href=\"http://blog.didispace.com/springbootdata2/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《使用Spring-data-jpa简化数据访问层》</a>一文对数据访问有所基础。</p><h4 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了更好的理解缓存，我们先对该工程做一些简单的改造。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中新增<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.jpa.properties.hibernate.show_sql=true</code>，开启hibernate对sql语句的打印</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">修改单元测试<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ApplicationTests</code>，初始化插入User表一条用户名为AAA，年龄为10的数据。并通过findByName函数完成两次查询。</p></li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">before</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		User u1 = userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;第一次查询：&quot;</span> + u1.getAge());</p><p>		User u2 = userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;第二次查询：&quot;</span> + u2.getAge());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>执行单元测试，我们可以在控制台中看到下面内容。</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第二次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在测试用例执行前，插入了一条User记录。然后每次findByName调用时，都执行了一句select语句来查询用户名为AAA的记录。</p><h4 id=\"引入缓存\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#引入缓存\" class=\"headerlink\" title=\"引入缓存\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入缓存</h4><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入cache依赖，添加如下内容：</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-cache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在Spring Boot主类中增加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableCaching</code>注解开启缓存功能，如下：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableCaching</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Application</span> </span>{</p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>		SpringApplication.run(Application.class, args);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在数据访问接口中，增加缓存配置注解，如：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@CacheConfig</span>(cacheNames = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Cacheable</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>再来执行以下单元测试，可以在控制台中输出了下面的内容：</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>第二次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">到这里，我们可以看到，在调用第二次findByName函数时，没有再执行select语句，也就直接减少了一次数据库的读取操作。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了可以更好的观察，缓存的存储，我们可以在单元测试中注入cacheManager。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> CacheManager cacheManager;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">使用debug模式运行单元测试，观察cacheManager中的缓存集users以及其中的User对象的缓存加深理解。</p><h2 id=\"Cache注解详解\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#Cache注解详解\" class=\"headerlink\" title=\"Cache注解详解\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Cache注解详解</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">回过头来我们再来看，这里使用到的两个注解分别作了什么事情。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig</code>：主要用于配置该类中会用到的一些共用的缓存配置。在这里<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig(cacheNames = &quot;users&quot;)</code>：配置了该数据访问对象中返回的内容将存储于名为users的缓存对象中，我们也可以不使用该注解，直接通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>自己配置缓存集的名字来定义。</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>：配置了findByName函数的返回值将被加入缓存。同时在查询时，会先从缓存中获取，若不存在才再发起对数据库的访问。该注解主要有下面几个参数：</p></li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheNames</code>：两个等同的参数（<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheNames</code>为Spring 4新增，作为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>的别名），用于指定缓存存储的集合名。由于Spring 4中新增了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig</code>，因此在Spring 3中原本必须有的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>属性，也成为非必需项了</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">key</code>：缓存对象存储在Map集合中的key值，非必需，缺省按照函数的所有参数组合作为key值，若自己配置需使用SpEL表达式，比如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable(key = &quot;#p0&quot;)</code>：使用函数第一个参数作为缓存的key值，更多关于SpEL表达式的详细内容可参考<a href=\"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html#cache-spel-context\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">官方文档</a></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">condition</code>：缓存对象的条件，非必需，也需使用SpEL表达式，只有满足表达式条件的内容才会被缓存，比如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable(key = &quot;#p0&quot;, condition = &quot;#p0.length() &lt; 3&quot;)</code>，表示只有当第一个参数的长度小于3的时候才会被缓存，若做此配置上面的AAA用户就不会被缓存，读者可自行实验尝试。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">unless</code>：另外一个缓存条件参数，非必需，需使用SpEL表达式。它不同于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">condition</code>参数的地方在于它的判断时机，该条件是在函数被调用之后才做判断的，所以它可以通过对result进行判断。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">keyGenerator</code>：用于指定key生成器，非必需。若需要指定一个自定义的key生成器，我们需要去实现<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.cache.interceptor.KeyGenerator</code>接口，并使用该参数来指定。需要注意的是：<strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">该参数与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">key</code>是互斥的</strong></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheManager</code>：用于指定使用哪个缓存管理器，非必需。只有当有多个时才需要使用</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheResolver</code>：用于指定使用那个缓存解析器，非必需。需通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.cache.interceptor.CacheResolver</code>接口来实现自己的缓存解析器，并用该参数指定。</li></ul></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了这里用到的两个注解之外，还有下面几个核心注解：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CachePut</code>：配置于函数上，能够根据参数定义条件来进行缓存，它与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>不同的是，它每次都会真是调用函数，所以主要用于数据新增和修改操作上。它的参数与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>类似，具体功能可参考上面对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>参数的解析</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheEvict</code>：配置于函数上，通常用在删除方法上，用来从缓存中移除相应数据。除了同<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>一样的参数之外，它还有下面两个参数：</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">allEntries</code>：非必需，默认为false。当为true时，会移除所有数据</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">beforeInvocation</code>：非必需，默认为false，会在调用方法之后移除数据。当为true时，会在调用方法之前移除数据。</li></ul></ul><h2 id=\"缓存配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#缓存配置\" class=\"headerlink\" title=\"缓存配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>缓存配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成了上面的缓存实验之后，可能大家会问，那我们在Spring Boot中到底使用了什么缓存呢？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableCaching</code>注解自动化配置合适的缓存管理器（CacheManager），Spring Boot根据下面的顺序去侦测缓存提供者：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Generic</li><li>JCache (JSR-107)</li><li>EhCache 2.x</li><li>Hazelcast</li><li>Infinispan</li><li>Redis</li><li>Guava</li><li>Simple</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了按顺序侦测外，我们也可以通过配置属性<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.cache.type</code>来强制指定。我们可以通过debug调试查看cacheManager对象的实例来判断当前使用了什么缓存。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文中不对所有的缓存做详细介绍，下面以常用的EhCache为例，看看如何配置来使用EhCache进行缓存管理。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中开启EhCache非常简单，只需要在工程中加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ehcache.xml</code>配置文件并在pom.xml中增加ehcache依赖，框架只要发现该文件，就会创建EhCache的缓存管理器。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources</code>目录下创建：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ehcache.xml</code></li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ehcache</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:xsi</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xsi:noNamespaceSchemaLocation</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ehcache.xsd&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">cache</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">name</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">maxEntriesLocalHeap</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;200&quot;</span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">timeToLiveSeconds</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;600&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">cache</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ehcache</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>net.sf.ehcache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>ehcache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成上面的配置之后，再通过debug模式运行单元测试，观察此时CacheManager已经是EhCacheManager实例，说明EhCache开启成功了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于EhCache的配置文件也可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.cache.ehcache.config</code>属性来指定，比如：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.cache.ehcache.config=classpath:config/another-config.xml</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter-4-4-1</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">【转载请注明出处】：<a href=\"http://blog.didispace.com/springbootcache1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://blog.didispace.com/springbootcache1/</a></strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('114', 'Spring Boot中的缓存支持（二）使用Redis做集中式缓存', '上一篇介绍了在Spring Boot中如何引入缓存、缓存注解的使用、以及EhCache的整合。虽然EhCache已经能够适用很多应用场景，但是由于EhCache是进程内的缓存框架，在集群模式下时，各应用服务器之间的缓存都是独立的，因此在不同服务器的进程间会存在缓存不一致的情况。即使EhCache提供了集群环境', '2016-10-27 19:35:52', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">上一篇介绍了在Spring Boot中如何引入缓存、缓存注解的使用、以及EhCache的整合。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">虽然EhCache已经能够适用很多应用场景，但是由于EhCache是进程内的缓存框架，在集群模式下时，各应用服务器之间的缓存都是独立的，因此在不同服务器的进程间会存在缓存不一致的情况。即使EhCache提供了集群环境下的缓存同步策略，但是同步依然需要一定的时间，短暂的缓存不一致依然存在。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在一些要求高一致性（任何数据变化都能及时的被查询到）的系统和应用中，就不能再使用EhCache来解决了，这个时候使用集中式缓存是个不错的选择，因此本文将介绍如何在Spring Boot的缓存支持中使用Redis进行数据缓存。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面以上一篇的例子作为基础进行改造，将缓存内容迁移到redis中。</p><h2 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache2/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以下载案例<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter4-4-1</a>，进行下面改造步骤。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">先来回顾一下在此案例中，我们做了什么内容：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>引入了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-jpa</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">EhCache</code></li><li>定义了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User</code>实体，包含<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">id</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">age</code>字段</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-jpa</code>实现了对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User</code>对象的数据访问接口<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">UserRepository</code></li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Cache</code>相关注解配置了缓存</li><li>单元测试，通过连续的查询和更新数据后的查询来验证缓存是否生效</li></ul><h2 id=\"开始改造\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache2/#开始改造\" class=\"headerlink\" title=\"开始改造\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>开始改造</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">删除EhCache的配置文件<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/ehcache.xml</code></p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中删除EhCache的依赖，增加redis的依赖：</p></li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-redis<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中增加redis配置，以本地运行为例，比如：</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.redis.host=localhost</p><p>spring.redis.port=6379</p><p>spring.redis.pool.max-idle=8</p><p>spring.redis.pool.min-idle=0</p><p>spring.redis.pool.max-active=8</p><p>spring.redis.pool.max-wait=-1</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们需要做的配置到这里就已经完成了，Spring Boot会在侦测到存在Redis的依赖并且Redis的配置是可用的情况下，使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisCacheManager</code>初始化<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">CacheManager</code>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为此，我们可以单步运行我们的单元测试，可以观察到此时<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">CacheManager</code>的实例是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.data.redis.cache.RedisCacheManager</code>，并获得下面的执行结果：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>第二次查询：10</p><p>Hibernate: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.id=?</p><p>Hibernate: update user <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">set</span> age=?, name=? <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> id=?</p><p>第三次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以观察到，在第一次查询的时候，执行了select语句；第二次查询没有执行select语句，说明是从缓存中获得了结果；而第三次查询，我们获得了一个错误的结果，根据我们的测试逻辑，在查询之前我们已经将age更新为20，但是我们从缓存中获取到的age还是为10。</p><h2 id=\"问题思考\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache2/#问题思考\" class=\"headerlink\" title=\"问题思考\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>问题思考</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为什么同样的逻辑在EhCache中没有问题，但是到Redis中会出现这个问题呢？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在EhCache缓存时没有问题，主要是由于EhCache是进程内的缓存框架，第一次通过select查询出的结果被加入到EhCache缓存中，第二次查询从EhCache取出的对象与第一次查询对象实际上是同一个对象（可以在使用Chapter4-4-1工程中，观察u1==u2来看看是否是同一个对象），因此我们在更新age的时候，实际已经更新了EhCache中的缓存对象。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">而Redis的缓存独立存在于我们的Spring应用之外，我们对数据库中数据做了更新操作之后，没有通知Redis去更新相应的内容，因此我们取到了缓存中未修改的数据，导致了数据库与缓存中数据的不一致。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">因此我们在使用缓存的时候，要注意缓存的生命周期，利用好上一篇上提到的几个注解来做好缓存的更新、删除</strong></p><h2 id=\"进一步修改\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache2/#进一步修改\" class=\"headerlink\" title=\"进一步修改\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>进一步修改</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">针对上面的问题，我们只需要在更新age的时候，通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CachePut</code>来让数据更新操作同步到缓存中，就像下面这样：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@CacheConfig</span>(cacheNames = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Cacheable</span>(key = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;#p0&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@CachePut</span>(key = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;#p0.name&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">save</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(User user)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在redis-cli中flushdb，清空一下之前的缓存内容，再执行单元测试，可以获得下面的结果：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>第一次查询：10</p><p>第二次查询：10</p><p>Hibernate: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.id=?</p><p>Hibernate: update user <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">set</span> age=?, name=? <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> id=?</p><p>第三次查询：20</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到，我们的第三次查询获得了正确的结果！同时，我们的第一次查询也不是通过select查询获得的，因为在初始化数据的时候，调用save方法时，就已经将这条数据加入了redis缓存中，因此后续的查询就直接从redis中获取了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文内容到此为止，主要介绍了为什么要使用Redis做缓存，以及如何在Spring Boot中使用Redis做缓存，并且通过一个小问题来帮助大家理解缓存机制，在使用过程中，一定要注意缓存生命周期的控制，防止数据不一致的情况出现。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter-4-4-2</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">【转载请注明出处】：<a href=\"http://blog.didispace.com/springbootcache2/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://blog.didispace.com/springbootcache2/</a></strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('115', 'Spring Boot整合MyBatis', '最近项目原因可能会继续开始使用MyBatis，已经习惯于spring-data的风格，再回头看xml的映射配置总觉得不是特别舒服，接口定义与映射离散在不同文件中，使得阅读起来并不是特别方便。Spring中整合MyBatis就不多说了，最近大量使用Spring Boot，因此整理一下Spring Boot中整合', '2016-10-27 19:36:18', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">最近项目原因可能会继续开始使用MyBatis，已经习惯于spring-data的风格，再回头看xml的映射配置总觉得不是特别舒服，接口定义与映射离散在不同文件中，使得阅读起来并不是特别方便。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring中整合MyBatis就不多说了，最近大量使用Spring Boot，因此整理一下Spring Boot中整合MyBatis的步骤。搜了一下Spring Boot整合MyBatis的文章，方法都比较老，比较繁琐。查了一下文档，实际已经支持较为简单的整合与使用。下面就来详细介绍如何在Spring Boot中整合MyBatis，并通过注解方式实现映射。</p><h2 id=\"整合MyBatis\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmybatis/#整合MyBatis\" class=\"headerlink\" title=\"整合MyBatis\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>整合MyBatis</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">新建Spring Boot项目，或以<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter1</a>为基础来操作</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入依赖</p></li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>这里用到spring-boot-starter基础和spring-boot-starter-test用来做单元测试验证数据访问</li><li>引入连接mysql的必要依赖mysql-connector-java</li><li>引入整合MyBatis的核心依赖mybatis-spring-boot-starter</li><li>这里不引入spring-boot-starter-jdbc依赖，是由于mybatis-spring-boot-starter中已经包含了此依赖<figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">parent</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>1.3.2.RELEASE<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">relativePath</span>/&gt;</span> <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!-- lookup parent from repository --&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">parent</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span>test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.mybatis.spring.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>1.1.1<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>mysql<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>5.1.21<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p></pre></td></tr></tbody></table></figure></li></ul><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">同之前介绍的使用jdbc和spring-data连接数据库一样，在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置mysql的连接配置</p></li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span></p><p>spring.datasource.username=root</p><p>spring.datasource.password=123456</p><p>spring.datasource.driver-class-name=com.mysql.jdbc.Driver</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">同其他Spring Boot工程一样，简单且简洁的的完成了基本配置，下面看看如何在这个基础下轻松方便的使用MyBatis访问数据库。</p><h2 id=\"使用MyBatis\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmybatis/#使用MyBatis\" class=\"headerlink\" title=\"使用MyBatis\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用MyBatis</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在Mysql中创建User表，包含id(BIGINT)、name(INT)、age(VARCHAR)字段。同时，创建映射对象User</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建User映射的操作UserMapper，为了后续单元测试验证，实现插入和查询操作</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Mapper</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserMapper</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Select</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;SELECT * FROM USER WHERE NAME = #{name}&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name)</span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insert</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name, @<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Param</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>)</span> Integer age)</span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建Spring Boot主类</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Application</span> </span>{</p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>		SpringApplication.run(Application.class, args);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建单元测试</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>测试逻辑：插入一条name=AAA，age=20的记录，然后根据name=AAA查询，并判断age是否为20</li><li>测试结束回滚数据，保证测试单元每次运行的数据环境独立</li></ul></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserMapper userMapper;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Rollback</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		userMapper.insert(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		User u = userMapper.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>, u.getAge().intValue());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-2-7</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">【转载请注明出处】：<a href=\"http://blog.didispace.com/springbootmybatis/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://blog.didispace.com/springbootmybatis/</a></strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('116', 'Spring Boot中使用MyBatis注解配置详解', '之前在Spring Boot中整合MyBatis时，采用了注解的配置方式，相信很多人还是比较喜欢这种优雅的方式的，也收到不少读者朋友的反馈和问题，主要集中于针对各种场景下注解如何使用，下面就对几种常见的情况举例说明用法。在做下面的示例之前，先准备一个整合好MyBatis的工程，可参见Spring Boot整合', '2016-10-27 19:36:38', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">之前在Spring Boot中整合MyBatis时，采用了注解的配置方式，相信很多人还是比较喜欢这种优雅的方式的，也收到不少读者朋友的反馈和问题，主要集中于针对各种场景下注解如何使用，下面就对几种常见的情况举例说明用法。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在做下面的示例之前，先准备一个整合好MyBatis的工程，可参见<a href=\"http://blog.didispace.com/springbootmybatis/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot整合MyBatis</a>，也可直接使用整合好的样例：<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-2-7\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-2-7</a>。</p><h2 id=\"传参方式\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#传参方式\" class=\"headerlink\" title=\"传参方式\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>传参方式</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面通过几种不同传参方式来实现前文中实现的插入操作。</p><h4 id=\"使用-Param\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#使用-Param\" class=\"headerlink\" title=\"使用@Param\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用@Param</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在之前的整合示例中我们已经使用了这种最简单的传参方式，如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insert</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name, @<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Param</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>)</span> Integer age)</span>;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这种方式很好理解，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Param</code>中定义的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>对应了SQL中的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">#{name}</code>，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">age</code>对应了SQL中的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">#{age}</code>。</p><h4 id=\"使用Map\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#使用Map\" class=\"headerlink\" title=\"使用Map\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用Map</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如下代码，通过Map<string, object=\"\">对象来作为传递参数的容器：</string,></p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO USER(NAME, AGE) VALUES(#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insertByMap</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Map&lt;String, Object&gt; map)</span></span>;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于Insert语句中需要的参数，我们只需要在map中填入同名的内容即可，具体如下面代码所示：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Map&lt;String, Object&gt; map = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> HashMap&lt;&gt;();</p><p>map.put(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CCC&quot;</span>);</p><p>map.put(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>);</p><p>userMapper.insertByMap(map);</p></pre></td></tr></tbody></table></figure></p><h4 id=\"使用对象\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#使用对象\" class=\"headerlink\" title=\"使用对象\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用对象</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了Map对象，我们也可直接使用普通的Java对象来作为查询条件的传参，比如我们可以直接使用User对象:</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insertByUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(User user)</span></span>;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这样语句中的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">#{name}</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">#{age}</code>就分别对应了User对象中的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">age</code>属性。</p><h2 id=\"增删改查\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#增删改查\" class=\"headerlink\" title=\"增删改查\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>增删改查</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">MyBatis针对不同的数据库操作分别提供了不同的注解来进行配置，在之前的示例中演示了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Insert</code>，下面针对User表做一组最基本的增删改查作为示例：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserMapper</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Select</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;SELECT * FROM user WHERE name = #{name}&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name)</span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO user(name, age) VALUES(#{name}, #{age})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insert</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name, @<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Param</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>)</span> Integer age)</span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Update</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;UPDATE user SET age=#{age} WHERE name=#{name}&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">update</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(User user)</span></span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Delete</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DELETE FROM user WHERE id =#{id}&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">delete</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Long id)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了一套增删改查后，不妨我们试试下面的单元测试来验证上面操作的正确性：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = Application.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserMapper userMapper;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Rollback</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">testUserMapper</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// insert一条数据，并select出来验证</span></p><p>		userMapper.insert(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		User u = userMapper.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>, u.getAge().intValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// update一条数据，并select出来验证</span></p><p>		u.setAge(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>);</p><p>		userMapper.update(u);</p><p>		u = userMapper.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>, u.getAge().intValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 删除这条数据，并select验证</span></p><p>		userMapper.delete(u.getId());</p><p>		u = userMapper.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>, u);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h2 id=\"返回结果的绑定\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#返回结果的绑定\" class=\"headerlink\" title=\"返回结果的绑定\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>返回结果的绑定</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于增、删、改操作相对变化较小。而对于“查”操作，我们往往需要进行多表关联，汇总计算等操作，那么对于查询的结果往往就不再是简单的实体对象了，往往需要返回一个与数据库实体不同的包装类，那么对于这类情况，就可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Results</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Result</code>注解来进行绑定，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Results</span>({</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Result</span>(property = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>, column = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>),</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Result</span>(property = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>, column = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>)</p><p>})</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Select</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;SELECT name, age FROM user&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">List&lt;User&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findAll</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上面代码中，@Result中的property属性对应User对象中的成员名，column对应SELECT出的字段名。在该配置中故意没有查出id属性，只对User对应中的name和age对象做了映射配置，这样可以通过下面的单元测试来验证查出的id为null，而其他属性不为null：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Rollback</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">testUserMapper</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>	List&lt;User&gt; userList = userMapper.findAll();</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span>(User user : userList) {</p><p>		Assert.assertEquals(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>, user.getId());</p><p>		Assert.assertNotEquals(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>, user.getName());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h2 id=\"后记\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#后记\" class=\"headerlink\" title=\"后记\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>后记</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文主要介绍几种最为常用的方式，更多其他注解的使用可参见文档：<a href=\"http://www.mybatis.org/mybatis-3/zh/java-api.html\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://www.mybatis.org/mybatis-3/zh/java-api.html</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文示例完整代码：<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-2-8\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-2-8</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('117', 'Spring Boot中使用RabbitMQ', '很久没有写Spring Boot的内容了，正好最近在写Spring Cloud Bus的内容，因为内容会有一些相关性，所以先补一篇关于AMQP的整合。Message Broker与AMQP简介Message Broker是一种消息验证、传输、路由的架构模式，其设计目标主要应用于下面这些场景：消息路由到一个或多', '2016-10-27 19:37:02', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">很久没有写Spring Boot的内容了，正好最近在写Spring Cloud Bus的内容，因为内容会有一些相关性，所以先补一篇关于AMQP的整合。</p><h2 id=\"Message-Broker与AMQP简介\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Message-Broker与AMQP简介\" class=\"headerlink\" title=\"Message Broker与AMQP简介\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Message Broker与AMQP简介</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Message Broker是一种消息验证、传输、路由的架构模式，其设计目标主要应用于下面这些场景：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>消息路由到一个或多个目的地</li><li>消息转化为其他的表现方式</li><li>执行消息的聚集、消息的分解，并将结果发送到他们的目的地，然后重新组合相应返回给消息用户</li><li>调用Web服务来检索数据</li><li>响应事件或错误</li><li>使用发布-订阅模式来提供内容或基于主题的消息路由</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">AMQP是Advanced Message Queuing Protocol的简称，它是一个面向消息中间件的开放式标准应用层协议。AMQP定义了这些特性：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>消息方向</li><li>消息队列</li><li>消息路由（包括：点到点和发布-订阅模式）</li><li>可靠性</li><li>安全性</li></ul><h2 id=\"RabbitMQ\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>RabbitMQ</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文要介绍的RabbitMQ就是以AMQP协议实现的一种中间件产品，它可以支持多种操作系统，多种编程语言，几乎可以覆盖所有主流的企业级技术平台。</p><h3 id=\"安装\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#安装\" class=\"headerlink\" title=\"安装\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>安装</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在RabbitMQ官网的下载页面<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">https://www.rabbitmq.com/download.html</code>中，我们可以获取到针对各种不同操作系统的安装包和说明文档。这里，我们将对几个常用的平台一一说明。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面我们采用的Erlang和RabbitMQ Server版本说明：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Erlang/OTP 19.1</li><li>RabbitMQ Server 3.6.5</li></ul><h4 id=\"Windows安装\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Windows安装\" class=\"headerlink\" title=\"Windows安装\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Windows安装</h4><ol style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>安装Erland，通过官方下载页面<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://www.erlang.org/downloads</code>获取exe安装包，直接打开并完成安装。</li><li>安装RabbitMQ，通过官方下载页面<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">https://www.rabbitmq.com/download.html</code>获取exe安装包。</li><li>下载完成后，直接运行安装程序。</li><li>RabbitMQ Server安装完成之后，会自动的注册为服务，并以默认配置启动起来。</li></ol><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/assets/5-1.png\" title=\"\" class=\"gallery-item\" lg-event-uid=\"&amp;1\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/assets/5-1.png\" alt=\"\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a></p><h4 id=\"Mac-OS-X安装\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Mac-OS-X安装\" class=\"headerlink\" title=\"Mac OS X安装\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Mac OS X安装</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Mac OS X中使用brew工具，可以很容易的安装RabbitMQ的服务端，只需要按如下命令操作即可：</p><ol style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>brew更新到最新版本，执行：brew update</li><li>安装Erlang，执行：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">brew install erlang</code></li><li>安装RabbitMQ Server，执行：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">brew install rabbitmq</code></li></ol><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面的命令，RabbitMQ Server的命令会被安装到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/usr/local/sbin</code>，并不会自动加到用户的环境变量中去，所以我们需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">.bash_profile</code>或<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">.profile</code>文件中增加下面内容：</p><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>PATH=$PATH:/usr/local/sbin</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这样，我们就可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">rabbitmq-server</code>命令来启动RabbitMQ的服务端了。</p><h4 id=\"Ubuntu安装\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Ubuntu安装\" class=\"headerlink\" title=\"Ubuntu安装\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Ubuntu安装</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Ubuntu中，我们可以使用APT仓库来进行安装</p><ol style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>安装Erlang，执行：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">apt-get install erlang</code></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">执行下面的命令，新增APT仓库到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/etc/apt/sources.list.d</code></p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>echo &#39;deb http://www.rabbitmq.com/debian/ testing main&#39; |</p><p>sudo tee /etc/apt/sources.list.d/rabbitmq.list</p></pre></td></tr></tbody></table></figure></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">更新APT仓库的package list，执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">sudo apt-get update</code>命令</p></li><li>安装Rabbit Server，执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">sudo apt-get install rabbitmq-server</code>命令</li></ol><h3 id=\"Rabbit管理\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Rabbit管理\" class=\"headerlink\" title=\"Rabbit管理\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Rabbit管理</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们可以直接通过配置文件的访问进行管理，也可以通过Web的访问进行管理。下面我们将介绍如何通过Web进行管理。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">rabbitmq-plugins enable rabbitmq_management</code>命令，开启Web管理插件，这样我们就可以通过浏览器来进行管理了。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>&gt; rabbitmq-plugins enable rabbitmq_management</p><p>The following plugins have been enabled:</p><p>mochiweb</p><p>webmachine</p><p>rabbitmq_web_dispatch</p><p>amqp_client</p><p>rabbitmq_management_agent</p><p>rabbitmq_management</p><p>Applying plugin configuration to rabbit@PC-201602152056... started 6 plugins.</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>打开浏览器并访问：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:15672/</code>，并使用默认用户<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">guest</code>登录，密码也为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">guest</code>。我们可以看到如下图的管理页面：</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/assets/5-2.png\" title=\"\" class=\"gallery-item\" lg-event-uid=\"&amp;2\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/assets/5-2.png\" alt=\"\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">从图中，我们可以看到之前章节中提到的一些基本概念，比如：Connections、Channels、Exchanges、Queue等。第一次使用的读者，可以都点开看看都有些什么内容，熟悉一下RabbitMQ Server的服务端。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Admin</code>标签，在这里可以进行用户的管理。</li></ul><h3 id=\"Spring-Boot整合\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Spring-Boot整合\" class=\"headerlink\" title=\"Spring Boot整合\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Spring Boot整合</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面，我们通过在Spring Boot应用中整合RabbitMQ，并实现一个简单的发送、接收消息的例子来对RabbitMQ有一个直观的感受和理解。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中整合RabbitMQ是一件非常容易的事，因为之前我们已经介绍过Starter POMs，其中的AMQP模块就可以很好的支持RabbitMQ，下面我们就来详细说说整合过程：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>新建一个Spring Boot工程，命名为：“rabbitmq-hello”。</li><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入如下依赖内容，其中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-amqp</code>用于支持RabbitMQ。</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">parent</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>1.3.7.RELEASE<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">relativePath</span>/&gt;</span> <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!-- lookup parent from repository --&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">parent</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span>test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置关于RabbitMQ的连接和用户信息，用户可以回到上面的安装内容，在管理页面中创建用户。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.application.name=rabbitmq-hello</p><p>spring.rabbitmq.host=localhost</p><p>spring.rabbitmq.port=5672</p><p>spring.rabbitmq.username=spring</p><p>spring.rabbitmq.password=123456</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建消息生产者<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Sender</code>。通过注入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">AmqpTemplate</code>接口的实例来实现消息的发送，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">AmqpTemplate</code>接口定义了一套针对AMQP协议的基础操作。在Spring Boot中会根据配置来注入其具体实现。在该生产者，我们会产生一个字符串，并发送到名为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>的队列中。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Sender</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> AmqpTemplate rabbitTemplate;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">send</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>String context = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello &quot;</span> + <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Date();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Sender : &quot;</span> + context);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.rabbitTemplate.convertAndSend(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello&quot;</span>, context);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建消息消费者<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Receiver</code>。通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RabbitListener</code>注解定义该类对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>队列的监听，并用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RabbitHandler</code>注解来指定对消息的处理方法。所以，该消费者实现了对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>队列的消费，消费操作为输出消息的字符串内容。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RabbitListener</span>(queues = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Receiver</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RabbitHandler</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">process</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String hello)</span> </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Receiver : &quot;</span> + hello);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建RabbitMQ的配置类<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RabbitConfig</code>，用来配置队列、交换器、路由等高级信息。这里我们以入门为主，先以最小化的配置来定义，以完成一个基本的生产和消费过程。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">RabbitConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Queue <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">helloQueue</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Queue(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建应用主类：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloApplication</span> </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>SpringApplication.run(HelloApplication.class, args);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建单元测试类，用来调用消息生产：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = HelloApplication.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloApplicationTests</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Sender sender;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">hello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>sender.send();</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成程序编写之后，下面开始尝试运行。首先确保RabbitMQ Server已经开始，然后进行下面的操作：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>启动应用主类，从控制台中，我们看到如下内容，程序创建了一个访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">127.0.0.1:5672</code>中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">springcloud</code>的连接。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>o.s.a.r.c.CachingConnectionFactory &nbsp; &nbsp; &nbsp; : Created new connection: SimpleConnection@29836d32 [delegate=amqp://springcloud@127.0.0.1:5672/]</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">同时，我们通过RabbitMQ的控制面板，可以看到Connection和Channels中包含当前连接的条目。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>运行单元测试类，我们可以看到控制台中输出下面的内容，消息被发送到了RabbitMQ Server的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>队列中。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Sender : hello Sun Sep 25 11:06:11 CST 2016</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>切换到应用主类的控制台，我们可以看到类似如下输出，消费者对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>队列的监听程序执行了，并输出了接受到的消息信息。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Receiver : hello Sun Sep 25 11:06:11 CST 2016</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面的示例，我们在Spring Boot应用中引入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-amqp</code>模块，进行简单配置就完成了对RabbitMQ的消息生产和消费的开发内容。然而在实际应用中，我们还有很多内容没有演示，这里不做更多的讲解，读者可以自行查阅RabbitMQ的官方教程，有更全面的了解。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：Chapter5-2-1</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>开源中国：<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter5-2-1\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter5-2-1</a></li><li>GitHub：<a href=\"https://github.com/dyc87112/SpringBoot-Learning/tree/master/Chapter5-2-1\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">https://github.com/dyc87112/SpringBoot-Learning/tree/master/Chapter5-2-1</a></li></ul><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('118', 'zscat11111', null, '2016-11-03 13:50:57', null, null, 'face[嘻嘻] \n[pre]\n@RequestMapping(\"/saves\")\n	public String saves(String vercode,String title,String content,Long typeid,HttpServletRequest req)throws Exception{\n		if (!StringUtils.equalsIgnoreCase(\"3711111\", vercode)) {\n			return \"redirect:/front/blog/adds\";\n		}\n		Blog blog=new Blog();\n		blog.setTitle(title);\n		blog.setState(0);\n		blog.setContent(content);\n		blog.setTypeid(typeid);\n		blog.setBloggerId(SysUserUtils.getSessionBloggerUser().getId());\n		blog.setReleasedate(new Date());\n		blogService.insertSelective(blog);\n		return \"redirect:/front/indexs\";\n		\n	}\n[/pre]', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('119', 'zscat2222', null, '2016-11-03 13:52:39', null, '0', 'face[嘻嘻] \n[pre]\n@RequestMapping(\"/saves\")\n	public String saves(String vercode,String title,String content,Long typeid,HttpServletRequest req)throws Exception{\n		if (!StringUtils.equalsIgnoreCase(\"3711111\", vercode)) {\n			return \"redirect:/front/blog/adds\";\n		}\n		Blog blog=new Blog();\n		blog.setTitle(title);\n		blog.setState(0);\n		blog.setContent(content);\n		blog.setTypeid(typeid);\n		blog.setBloggerId(SysUserUtils.getSessionBloggerUser().getId());\n		blog.setReleasedate(new Date());\n		blogService.insertSelective(blog);\n		return \"redirect:/front/indexs\";\n		\n	}\n[/pre]', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('120', 'zsCat22', null, '2016-11-03 13:53:05', null, '0', 'face[亲亲] \n\n222222222', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('121', 'zsCat22', null, '2016-11-03 13:53:20', null, '0', 'face[亲亲] \n\n222222222', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('122', 'zscat3', null, '2016-11-03 13:55:21', null, '0', 'face[太开心] \r\n\r\nxxxxxxxxxxxx', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('125', 'ZSCAT分布式框架是啥？', '使用技术  spring，springmvc ，mybatis 通用mapper，beetl  maven redis  dubbo  zookeep  bootstreap ace jquery 等等主要是提供了常用的权限系统精确到按钮级别和一些常用的功能和组件分布式 主要是将系统分成多个模块 如商城 可以', '2016-11-04 13:30:13', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\">使用技术 &nbsp;<span style=\"margin: 0px; padding: 0px; color: rgb(108, 108, 108); font-family: tahoma, arial, &#39;Hiragino Sans GB&#39;, 宋体, sans-serif; font-size: 12px; line-height: 18px; widows: auto; background-color: rgb(255, 255, 255);\">spring，springmvc ，mybatis 通用mapper，beetl&nbsp; maven redis &nbsp;<span style=\"margin: 0px; padding: 0px;\">dubbo &nbsp;zookeep &nbsp;bootstreap ace jquery 等等</span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><span style=\"margin: 0px; padding: 0px; color: rgb(108, 108, 108); font-family: tahoma, arial, &#39;Hiragino Sans GB&#39;, 宋体, sans-serif; font-size: 12px; line-height: 18px; widows: auto; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">主要是提供了常用的权限系统精确到按钮级别和一些常用的功能和组件</span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><span style=\"margin: 0px; padding: 0px; color: rgb(108, 108, 108); font-family: tahoma, arial, &#39;Hiragino Sans GB&#39;, 宋体, sans-serif; font-size: 12px; line-height: 18px; widows: auto; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">分布式 主要是将系统分成多个模块 如商城 可以分成会员中心，订单管理 &nbsp;购物车等等，每个模块 分为API 和实现两个项目，实现项目也打成war包 独立部署，每个模块可以都可以多机部署。当然这样的模式会导致开发和部署更加麻烦，项目分了多个模块 本来部署一次的也变成了部署多次，分布式的事务也难解决。但还是有不得不分的理由............................</span></span></p><p><br/></p>,', '3', '', null, '1', null, null);
INSERT INTO `t_blog` VALUES ('126', '演示地址', 'http://www.zscat.top/gw/index  官网http://www.zscat.top/index  后台http://zscat.carp.mopaasapp.com/front 商城http://www.zscat.top/cms/index 内容管理http://www.zscat.', '2016-11-04 13:39:17', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://www.zscat.top/gw/index\" style=\"margin: 0px; padding: 0px; color: rgb(96, 127, 166); text-decoration: none;\">http://www.zscat.top/gw/index</a> &nbsp;官网</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://www.zscat.top/index\" style=\"margin: 0px; padding: 0px; color: rgb(96, 127, 166); text-decoration: none;\">http://www.zscat.top/index</a> &nbsp;后台</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://zscat.carp.mopaasapp.com/front\" target=\"_blank\" style=\"margin: 0px; padding: 0px; color: rgb(0, 178, 243); text-decoration: none; box-sizing: inherit; outline: 0px; word-wrap: break-word; font-family: Lato, &#39;Helvetica Neue&#39;, &#39;Microsoft YaHei&#39;, Arial, Helvetica, sans-serif; font-size: 15px; line-height: 25px; text-align: justify; white-space: normal; cursor: pointer !important; background: rgb(250, 250, 250);\">http://zscat.carp.mopaasapp.com/front</a> 商城</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://www.zscat.top/index\" style=\"margin: 0px; padding: 0px; color: rgb(96, 127, 166); text-decoration: none; line-height: 24.381px;\">http://www.zscat.top/cms/index</a> 内容管理<span style=\"margin: 0px; padding: 0px; line-height: 24.381px;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://www.zscat.top/index\" style=\"margin: 0px; padding: 0px; color: rgb(96, 127, 166); text-decoration: none; line-height: 24.381px;\">http://www.zscat.top/front/blog/index</a>s &nbsp;社区<span style=\"margin: 0px; padding: 0px; line-height: 24.381px;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a style=\"margin: 0px; padding: 0px; color: rgb(51, 102, 204); text-decoration: underline; outline: 0px; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; text-indent: 28px; white-space: normal; widows: auto; background-color: rgb(255, 255, 255);\">http://shop.zscat.top/index.htm 商城</a></p><p><br/></p>,', '1', '', null, '1', null, null);
INSERT INTO `t_blog` VALUES ('127', 'zscat运行介绍', '声明：该框架面向企业，是大型互联网分布式企业架构，后期会介绍linux上部署高可用集群项目。有愿意了解框架技术或者源码的朋友直接加Q（951449465）一起学习介绍1.      项目核心代码结构截图       pig-common 通用的工具类及所有模块都可以用的pig-xx-api  模块所对应的接口', '2016-11-04 14:45:24', '0', '0', '<p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; color: red;\">声明：该框架面向企业，是大型互联网分布式企业架构，后期会介绍linux上部署高可用集群项目。</span></strong></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; padding: 0px; margin: 0px; font-size: 16px; color: rgb(255, 0, 0);\">有愿意了解框架技术或者源码的朋友直接加Q（951449465）一起学习</span></strong></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 20px;\">介绍</span></strong></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 20px;\">1.&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;项目核心代码结构截图</span></strong></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp; &nbsp; &nbsp; &nbsp;<img src=\"/static/ueditor/jsp/upload1/20161104/35371478240723141.png\" title=\"1.png\"/></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-common 通用的工具类及所有模块都可以用的</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-xx-api &nbsp;模块所对应的接口和域模型</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-xx &nbsp;模块对应接口的实现类</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-xx-portl 模块所对应的前台显示</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-web 所有模块的的后台 可以拆分为多个后台</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-sso 项目模块见的单点登录</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-search 项目所有的搜索</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-scheculer &nbsp;模块的定时任务</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp; &nbsp;</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px; color: rgb(255, 0, 0);\">特别提醒：开发人员在开发的时候可以将自己的业务REST服务化或者Dubbo服务化</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 20px;\"><strong style=\"word-wrap: break-word;\">2.&nbsp;&nbsp;&nbsp;&nbsp; 项目依赖介绍</strong></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px; color: rgb(192, 80, 77);\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp; 2.1&nbsp; 后台管理系统、Scheculer定时调度系统依赖如下图：</strong></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px; color: rgb(192, 80, 77);\"><strong style=\"word-wrap: break-word;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2&nbsp; Dubbo独立服务项目依赖如下图：</strong></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 20px;\"><strong style=\"word-wrap: break-word;\">3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;平台简介</strong></span><span style=\"word-wrap: break-word; font-size: 16px;\"><br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zsCat是一个分布式的框架，提供项目模块化、服务化、热插拔的思想，高度封装安全性的Java EE快速开发平台。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zsCat</span>本身集成Dubbo服务管控、Zookeeper注册中心、Redis分布式缓存技术、FastDFS分布式文件系统、spring rabbitmq异步消息中间件、Nginx负载均衡等分布式技术</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用Maven做项目管理，项目模块化，提高项目的易开发性、扩展性</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以Spring Framework为核心容器，Spring MVC为模型视图控制器，MyBatis为数据访问层， Apache Shiro为权限授权层，Ehcahe对 redis常用数据进行缓存等。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前端集成Bootstrap4 ace &nbsp;beelt框架，UI响应式、扁平化布局，适应所有PC、Pad、Anroid、ios 移动设备等。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zsCat</span>主要定位于互联网企业架构，已内置企业信息化系统的基础功能和高效的代码生成工具，包括：系统权限组件、数据权限组件、数据字典组件、核心工具 组件、代码生成等。采用分层设计、双重验证、提交数据安全编码、密码加密、访问验证、数据权限验证。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zsCat</span>目前包括以下模块项目，后台<span style=\"word-wrap: break-word; color: rgb(255, 0, 0);\">系统管理系统</span>，<span style=\"word-wrap: break-word; color: rgb(255, 0, 0);\">RestFul独立服务系统</span>、<span style=\"word-wrap: break-word; color: rgb(255, 0, 0);\">Scheduler定时调度系统</span>、<span style=\"word-wrap: break-word; color: rgb(255, 0, 0);\">内容管理（CMS）系统</span>、<span style=\"word-wrap: break-word; color: rgb(255, 0, 0);\">在线办公（OA）系统</span>、<span style=\"word-wrap: break-word; color: rgb(255, 0, 0);\">）</span>。&nbsp;<br style=\"word-wrap: break-word;\"/></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后台管理系统包括企业组织架构（用户管理、机构管理、区域管理）、菜单管理、角色权限管理、字典管理等功能；</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RestFul独立提供标准Rest服务API，您可以快速实现自己的业务，提供需要的服务；</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Quartz定时调度系统可以动态配置您的任务规则等；</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内容管理（CMS）系统，包括内容管理，栏目管理、站点管理、公共留言、文件管理、前端网站展示等功能；</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在线办公（OA）系统，主要提供简单的流程实例。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zsCat</span>提供了常用工具进行封装，包括日志工具、缓存工具、服务器端验证、数据字典、当前组织机构数据（用户、机构、区域）以及其它常用小工具等。。使用了<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zsCat</span>基础框架，可以提高快速开发效 率。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 20px;\">4.&nbsp;&nbsp;&nbsp;&nbsp;内置功能(只列了一部分功能)</span></strong><br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;1.用户管理：用户是系统操作者，该功能主要完成系统用户配置。&nbsp;<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;2.机构管理：配置系统组织机构（公司、部门、小组），树结构展现，可随意调整上下级。&nbsp;<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;3.区域管理：系统城市区域模型，如：国家、省市、地市、区县的维护。&nbsp;<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;4.菜单管理：配置系统菜单，操作权限，按钮权限标识等。&nbsp;<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;5.角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。&nbsp;<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;6.字典管理：对系统中经常使用的一些较为固定的数据进行维护，如：是否、男女、类别、级别等。&nbsp;<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;7.操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。&nbsp;<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;8.连接池监视：监视当期系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈。&nbsp;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\"><span style=\"word-wrap: break-word; font-size: 20px;\"><strong style=\"word-wrap: break-word;\">5.&nbsp;&nbsp;&nbsp;&nbsp;开发工具</strong></span><br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;1.Eclipse IDE：采用Maven项目管理，模块化。<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp;</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 20px;\">6.&nbsp;&nbsp;&nbsp;&nbsp;技术选型（只列了一部分技术）</span></strong><br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;1、后端<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务框架：Dubbo、zookeeper、Rest服务<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;缓存：Redis、ehcache<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;消息中间件：springrabbttMQ<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;负载均衡：Nginx<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分布式文件：FastDFS<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数据库连接池：Alibaba Druid 1.0<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;核心框架：Spring framework<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安全框架：Apache Shiro 1.2<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;视图框架：Spring MVC 4.0<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务端验证：Hibernate Validator 5.1<br style=\"word-wrap: break-word;\"/><br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;任务调度：quartz 1.8.5<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;持久层框架：MyBatis 3.2<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;日志管理：SLF4J 1.7、Log4j<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;工具类：Apache Commons、Jackson 2.2、Xstream 1.4、Dozer 5.3、POI<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;2、前端<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JS框架：JQuery 1.9。 beelt<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CSS框架： Bootstrap 4 ace<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;客户端验证：JQuery Validation Plugin。<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;富文本：UEcitor<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;文件管理：CKFinder<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;动态页签：Jerichotab<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数据表格：jqGrid<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对话框：layer<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;树结构控件：jQuery zTree<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其他组件：Bootstrap 4 ace<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;3、支持<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器中间件：Tomcat 6、7、Jboss 7、WebLogic 10、WebSphere 8<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数据库支持：目前仅提供mysql数据库的支持，但不限于数据库，下个版本升级多数据源切换和数据库读写分离： 如：Oracle、SqlServer、H2等<br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;支持开发环境：Eclipse、MyEclipse、Ras、Idea等</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 20px;\">环境搭建：</span></strong></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 24px;\"><strong style=\"word-wrap: break-word;\">1.环境准备</strong></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\">&nbsp;&nbsp; 1.开发工具： Eclipse IDE（建议使用高一点的版本）</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\">&nbsp;&nbsp; 2.JDK版本：JDK1.7<br style=\"word-wrap: break-word;\"/></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\">&nbsp;&nbsp; 3.项目管理： Maven3.1.1</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 24px;\">2.安装步骤</span></strong><br style=\"word-wrap: break-word;\"/>&nbsp;&nbsp; 1.安装jdk1.7并配置环境变量（相信大家都会做，这里不再做重复的说明）</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\">&nbsp;&nbsp; 2.安装maven：maven安装过程就是解压缩的过程（我已经帮大家解压了, 目录：E:\\myprj\\<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zscat</span>-maven\\apache-maven-3.1.1）,为了方便大家，这边已经提供了相关的安装包，会在打包的目录下共享。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\">&nbsp;&nbsp; 3.mavan配置环境变量，右击我的电脑?属性?高级系统设置?环境变量?找到（系统变量path），在最前面输入你的maven安装包路径，声明：因为上一步解压了指定的目录，所以配置如下：</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\">E:\\myprj\\<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zscat</span>-maven\\apache-maven-3.1.1\\bin;</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\">相信大家都有配过环境变量，如果您不是很清楚，请查询相关资料，了解一下maven的相关知识。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 18px;\">&nbsp;&nbsp; 4.打开 cmd，在里面敲：mvn –version，出现以下结果说明你maven安装成功了</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"http://static.oschina.net/uploads/img/201603/05225330_nllm.jpg\" target=\"_blank\" style=\"word-wrap: break-word; text-decoration: none; color: rgb(142, 3, 0);\"><img alt=\"\" class=\"magplus\" src=\"http://static.oschina.net/uploads/img/201603/05225330_nllm.jpg\" title=\"点击查看原始大小图片\" height=\"139\" width=\"700\" style=\"word-wrap: break-word; border: 0px; cursor: pointer;\"/></a></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; color: rgb(255, 0, 0);\">mvn 是 maven 的一个指令，mvn-version 是查看版本信息，我的操作系统是 64位的WIN7，安装的 maven 是 3.1.1，如果能打印如上信息，说明到此 Maven3 已经在你的电脑上安装完成。</span></strong></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\"><br style=\"word-wrap: break-word;\"/>&nbsp; 5.建工作空间(进入后选中import maven视图)</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><a href=\"http://static.oschina.net/uploads/img/201603/05225330_mei7.jpg\" target=\"_blank\" style=\"word-wrap: break-word; text-decoration: none; color: rgb(142, 3, 0);\"><img src=\"/static/ueditor/jsp/upload1/20161104/64441478241340157.png\" title=\"2.png\"/></a></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">&nbsp; 6.配置Eclipse编码为UTF-8<br style=\"word-wrap: break-word;\"/>&nbsp; Eclipse工具栏中选择Window》Prefrences》General》Workspace</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">7.配置jre环境(之前大家需要安装了jdk1.7版本，这里就使用安装好的jdk进行配置)：<br style=\"word-wrap: break-word;\"/>选择Window》Prefrences》java》Installed JREs》Edit》选择自己本地jdk安装路径》Finished》OK</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><a href=\"http://static.oschina.net/uploads/img/201603/05225331_sfK8.jpg\" target=\"_blank\" style=\"word-wrap: break-word; text-decoration: none; color: rgb(142, 3, 0);\"><img alt=\"\" src=\"http://static.oschina.net/uploads/img/201603/05225331_sfK8.jpg\" style=\"word-wrap: break-word; border: 0px; cursor: pointer;\"/></a></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">8.去除JavaScript的验证等信息（因为项目中大量使用js、css、xml等其他不同格式的文件，考虑到每次编译的执行时间，所以这边临时将一些验证信息去除）<br style=\"word-wrap: break-word;\"/>Window》Prefrences》Validation》Suspend all validators》ok</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\">zs</p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">9. 修改刚刚安装的maven settings.xml配置文件，路径如下：E:\\myprj\\zscat-maven\\apache-maven-3.1.1\\conf,<br style=\"word-wrap: break-word;\"/>添加本地库地址：E:/myprj/<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zscat</span>-maven/apache-maven-3.1.1/repository<br style=\"word-wrap: break-word;\"/>修改中央库路径（在网络正常的情况下，可以从远程中央库下载缺失的jar包,我这里使用了Oschina的中央库，如果网络有问题，<br style=\"word-wrap: break-word;\"/>大家可以使用自己公司的私服进行加载相关jar包），考虑到大家包有时候下载不下来，我这里也给大家共享了项目所需要的jar包，全部放到了以下目录：<br style=\"word-wrap: break-word;\"/>E:/myprj/<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zscat</span>-maven/apache-maven-3.1.1/repository</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><a href=\"http://static.oschina.net/uploads/img/201603/05225331_77rq.jpg\" target=\"_blank\" style=\"word-wrap: break-word; text-decoration: none; color: rgb(142, 3, 0);\"><img alt=\"\" src=\"http://static.oschina.net/uploads/img/201603/05225331_77rq.jpg\" style=\"word-wrap: break-word; border: 0px; cursor: pointer;\"/></a></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">10.&nbsp; Eclipse中配置maven安装目录和Setting文件加载的本地库目录</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">11.导入Maven项目<br style=\"word-wrap: break-word;\"/>File》Import》Existing Maven Projects》下一步</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br style=\"word-wrap: break-word;\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">选择你本地的maven项目（请选中<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zscat</span>-project根目录），点击确定</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">加载出来所有项目后，点击finish完成</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; color: rgb(255, 0, 0); font-size: 16px;\">提醒：这个导入的过程要一段时间，因为我本地连接网络，所以会从远程中央库下载项目所需要的所有的jar包，请大家耐心等候。<br style=\"word-wrap: break-word;\"/>如果你使用了本地库则不需要等待很长时间，如果是使用公司私服，则等待时间也不会很长。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br style=\"word-wrap: break-word;\"/><span style=\"word-wrap: break-word; font-size: 16px;\">导入后的项目信息</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">本地库的包已经下载了</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">12.下载完所有jar包，更新maven项目：<br style=\"word-wrap: break-word;\"/></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">1)选中所有项目 2) 右键选择maven》Update project 选择所有》勾选关联项》点击ok</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"/static/ueditor/jsp/upload1/20161104/49841478241507334.png\" title=\"3.png\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">如果项目还出现红X错误，则必定是缺少相关的jar包，可以使用：<br style=\"word-wrap: break-word;\"/>Window》showView》problem窗口查看异常信息</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"word-wrap: break-word;\"/><span style=\"word-wrap: break-word; font-size: 16px;\">如果缺少jar包，可以将我们提供的jar包直接copy到你指定目录即可</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">待项目里面的所有错误全部清零后才能进行下一步工作（如下图所示）<br style=\"word-wrap: break-word;\"/>选中所有项目，对项目进行清理：Project》clean</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">13.&nbsp;&nbsp; &nbsp;尝试对项目进行编译、打包看是否有问题：<br style=\"word-wrap: break-word;\"/>注意：一般我们打包编译是针对于根项目，因为里面配置了所有的依赖关系。右键zscat-project》Run As》Maven build…</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">在弹出的对话框中录入clean install –X 命令，勾选Skip tests，Run…<br style=\"word-wrap: break-word;\"/>提醒：如果对maven命令不是很熟的，可以去查下相关的资料<br style=\"word-wrap: break-word;\"/>这边简单做下解释： clean install –X 表示清理所有项目并将jar包装载到本地库，其中-X表示输出的信息（一般在出现maven问题的时候可以使用-X来定位问题。）</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">此时控制台开始编译装载所有的包，这个过程有点漫长，请大家耐心等候</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><a href=\"http://static.oschina.net/uploads/img/201603/05225335_u0MN.jpg\" target=\"_blank\" style=\"word-wrap: break-word; text-decoration: none; color: rgb(142, 3, 0);\"><img alt=\"\" src=\"http://static.oschina.net/uploads/img/201603/05225335_u0MN.jpg\" style=\"word-wrap: break-word; border: 0px; cursor: pointer;\"/></a></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\">出现以下结果说明项目是正常的。</p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"/static/ueditor/jsp/upload1/20161104/28161478241797165.png\" title=\"4.png\"/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">打好的包（包含war、jar），都在target文件夹下，这边只以pig-web为实例截图如下：</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: white;\"><span style=\"word-wrap: break-word; font-size: 16px;\">14.Tomcat发布<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">zscat</span>项目（发布过程不做详细介绍，大家都会做）：<br style=\"word-wrap: break-word;\"/>下面对各个不同的项目进行介绍：<br style=\"word-wrap: break-word;\"/><br style=\"word-wrap: break-word;\"/></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\"><span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">pig</span>-web: 可以独立部署（<span style=\"word-wrap: break-word; color: red;\">后台管理平台</span>）</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">pig-cms dubbo服务<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">可以独立部署 可以部署单机也可以多机部署（本机可以邮局运行启动当前模块的Bootstrap.java 类）</span></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">部署条件：</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">1)&nbsp; 执行mysql数据库脚本:&nbsp; pig.sql</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">数据库jdbc的配置项可以参考</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">部署dubbo相关的项目需要具备以下条件</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&gt;安装dubbo管控平台，将war包解压到tomcat，并将目录替换为根目录，直接启动tomcat即可（开发环境提供window）</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">&gt;Zookeeper注册中心安装，我这边提供了zookeeper-3.4.5版本（开发环境提供window），进入安装目录启动即可</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"http://static.oschina.net/uploads/img/201603/05225336_Cu45.jpg\" target=\"_blank\" style=\"word-wrap: break-word; text-decoration: none; color: rgb(142, 3, 0);\"></a></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">提醒： 我这边已经给提供了相关的程序，其中<span style=\"word-wrap: break-word; color: red;\">dubbo</span><span style=\"word-wrap: break-word; color: red;\">管控平台要独立部署在</span><span style=\"word-wrap: break-word; color: red;\">Tomcat</span><span style=\"word-wrap: break-word; color: red;\">服务器上，这个不需要进行高可用配置，直接启动</span><span style=\"word-wrap: break-word; color: red;\">tomcat</span><span style=\"word-wrap: break-word; color: red;\">就可以启动</span>。<span style=\"word-wrap: break-word; color: red;\">Zookeeper</span><span style=\"word-wrap: break-word; color: red;\">注册中心有相关的命令可以直接运行启动。如果想部署在</span><span style=\"word-wrap: break-word; color: red;\">linux</span><span style=\"word-wrap: break-word; color: red;\">系统上，可以看我们提供的相关文档即可</span></span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">5)&nbsp; 待dubbo管控台和注册中心启动ok，则将pig-cms、pig-oa项目同时（可以独立部署）部署到tomat中，为dubbo服务提供者</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">6)&nbsp; 登陆dubbo管控台查看相关的服务信息，可以看到你发布的服务已经由管控台进行管控了：</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">http://localhost:8080/root</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">直接通过地址可以访问是因为将包名改为了Root</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">用户名密码：root/root</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\">7)&nbsp; 分部部署<span style=\"color: rgb(102, 102, 102); font-family: 宋体, Arial; line-height: 26px; background-color: rgb(255, 255, 255);\">pig-cms、pig-oa</span>&nbsp; dubbo消费者项目，目的是让开发人员了解服务是怎样调用的。</span></p><p style=\"word-wrap: break-word; padding: 0px; color: rgb(102, 102, 102); font-family: 宋体, Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"word-wrap: break-word; font-size: 16px;\"><strong style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">到此整个项目的安装过程先到这里，请各位开发人员安装完项目后投入开发，所有的业务直接服务化，因为项目是基于驱动开发的，故将你们的表设计好，通过一个工具类</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">生成所有的</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">controller</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">、</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">service</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">、</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">dao</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">、</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">xml</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">、</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">jsp</span><span style=\"word-wrap: break-word; color: rgb(0, 112, 192);\">界面等，直接进行业务编写处理。近期会不断的完善文档，请时刻关注。</span></strong></span></p><p><br/></p>,', '1', 'xx', null, '1', null, null);
INSERT INTO `t_blog` VALUES ('128', '代码生成', '', '2016-11-08 10:39:36', '0', '0', '<p><img src=\"/pig/static/ueditor/jsp/upload1/20161108/84871478572773051.gif\" title=\"代码生成1.gif\"/></p>,', '1', '', null, '1', null, null);
INSERT INTO `t_blog` VALUES ('129', '代码生成2', '', '2016-11-08 10:40:29', '0', '0', '<p><img src=\"/pig/static/ueditor/jsp/upload1/20161108/39301478572826383.gif\" title=\"代码生成树.gif\"/></p>,', '1', '', null, '1', null, null);
INSERT INTO `t_blog` VALUES ('130', '11', '111111', '2016-11-26 09:37:10', '0', '0', '<p>111111<img src=\"http://image.zscat.com/upload1/20161126/1480124228755.png\" title=\"50350b37cbddb.png\"/></p>,', '1', '', null, '1', null, null);
INSERT INTO `t_blog` VALUES ('131', '1111', '1', '2016-11-26 10:00:15', '0', '0', '<p>1<img src=\"http://img.baidu.com/hi/jx2/j_0002.gif\"/></p><p><img src=\"http://image.zscat.com/upload1/20161126/1480125620243.jpg\" style=\"float:none;\" title=\"571524379066916056.jpg\"/></p><p><img src=\"http://image.zscat.com/upload1/20161126/1480125613196.jpg\" style=\"float:none;\" title=\"demo2.jpg\"/></p><p><br/></p>,', '3', '222222222', null, '1', null, null);
INSERT INTO `t_blog` VALUES ('132', '222', '33333333333', '2016-11-26 10:03:25', '0', '0', '<p>33333333333<img src=\"http://image.zscat.com/upload1/20161126/1480125783833.jpg\" title=\"2012126114714334.jpg\"/></p>,', '3', '', null, '1', 'zscat', null);
INSERT INTO `t_blog` VALUES ('133', '分布上框架展示', null, null, null, '22', null, '4', null, null, null, null, 'shop1.gif');
INSERT INTO `t_blog` VALUES ('134', '分布上框架详细展示', null, null, null, '33', null, '4', null, null, null, null, 'shop2.gif');
INSERT INTO `t_blog` VALUES ('135', 'zscat框架展示', null, null, null, '0', null, '4', null, null, null, null, 'cat1.gif');
INSERT INTO `t_blog` VALUES ('136', 'zacat分开代码生成', null, null, null, '0', null, '4', null, null, null, null, 'catgentree.gif');
INSERT INTO `t_blog` VALUES ('137', 'zsCatLte框架', null, null, null, '0', null, '4', null, null, null, null, 'zsCatLte.gif');
INSERT INTO `t_blog` VALUES ('138', '工作流展示', null, null, null, '0', null, '4', null, null, null, null, 'workflow.gif');
INSERT INTO `t_blog` VALUES ('139', 'java后台框架', null, null, null, '0', null, '4', null, null, null, null, 'java.gif');
INSERT INTO `t_blog` VALUES ('140', 'zsTrade交易商城', null, null, null, '0', null, '4', null, null, null, null, 'zsTrade.gif');
INSERT INTO `t_blog` VALUES ('141', '写给大数据开发初学者的话1', '导读：第一章：初识Hadoop第二章：更高效的WordCount第三章：把别处的数据搞到Hadoop上第四章：把Hadoop上的数据搞到别处去第五章：快一点吧，我的SQL第六章：一夫多妻制第七章：越来越多的分析任务第八章：我的数据要实时第九章：我的数据要对外第十章：牛逼高大上的机器学习经常有初学者在博客和QQ', '2017-01-03 18:09:28', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">导读：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">第一章：初识Hadoop<br/>第二章：更高效的WordCount<br/><span style=\"color: rgb(255, 102, 0);\">第三章：把别处的数据搞到Hadoop上</span><br/><span style=\"color: rgb(255, 102, 0);\">第四章：把Hadoop上的数据搞到别处去</span><br/><span style=\"color: rgb(255, 102, 0);\">第五章：快一点吧，我的SQL</span><br/><span style=\"color: rgb(255, 102, 0);\">第六章：一夫多妻制</span><br/><span style=\"color: rgb(255, 102, 0);\">第七章：越来越多的分析任务</span><br/><span style=\"color: rgb(255, 102, 0);\">第八章：我的数据要实时</span><br/><span style=\"color: rgb(255, 102, 0);\">第九章：我的数据要对外</span><br/><span style=\"color: rgb(255, 102, 0);\">第十章：牛逼高大上的机器学习</span></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">经常有初学者在博客和QQ问我，自己想往大数据方向发展，该学哪些技术，学习路线是什么样的，觉得大数据很火，就业很好，薪资很高。。。。。。。如果自己很迷茫，为了这些原因想往大数据方向发展，也可以，那么我就想问一下，你的专业是什么，对于计算机/软件，你的兴趣是什么？是计算机专业，对操作系统、硬件、网络、服务器感兴趣？是软件专业，对软件开发、编程、写代码感兴趣？还是数学、统计学专业，对数据和数字特别感兴趣。。<br/>其实这就是想告诉你的大数据的三个发展方向，平台搭建/优化/运维/监控、大数据开发/设计/架构、数据分析/挖掘。请不要问我哪个容易，哪个前景好，哪个钱多。<br/>先扯一下大数据的4V特征：</p><ol style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>数据量大，TB-&gt;PB</li><li>数据类型繁多，结构化、非结构化文本、日志、视频、图片、地理位置等；</li><li>商业价值高，但是这种价值需要在海量数据之上，通过数据分析与机器学习更快速的挖掘出来；</li><li>处理时效性高，海量数据的处理需求不再局限在离线计算当中。</li></ol><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">现如今，正式为了应对大数据的这几个特点，开源的大数据框架越来越多，越来越强，先列举一些常见的：<br/><strong>文件存储</strong>：Hadoop HDFS、Tachyon、KFS<br/><strong>离线计算</strong>：Hadoop MapReduce、Spark<br/><strong>流式、实时计算</strong>：Storm、Spark Streaming、S4、Heron<br/><strong>K-V、NOSQL数据库</strong>：HBase、Redis、MongoDB<br/><strong>资源管理</strong>：YARN、Mesos<br/><strong>日志收集</strong>：Flume、Scribe、Logstash、Kibana<br/><strong>消息系统</strong>：Kafka、StormMQ、ZeroMQ、RabbitMQ<br/><strong>查询分析</strong>：Hive、Impala、Pig、Presto、Phoenix、SparkSQL、Drill、Flink、Kylin、Druid<br/><strong>分布式协调服务</strong>：Zookeeper<br/><strong>集群管理与监控</strong>：Ambari、Ganglia、Nagios、Cloudera Manager<br/><strong>数据挖掘、机器学习</strong>：Mahout、Spark MLLib<br/><strong>数据同步</strong>：Sqoop<br/><strong>任务调度</strong>：Oozie<br/>……</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">眼花了吧，上面的有30多种吧，别说精通了，全部都会使用的，估计也没几个。<br/>就我个人而言，主要经验是在第二个方向（开发/设计/架构），且听听我的建议吧。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第一章：初识Hadoop</h2><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">1.1 学会百度与Google</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">不论遇到什么问题，先试试搜索并自己解决。<br/>Google首选，翻不过去的，就用百度吧。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">1.2 参考资料首选官方文档</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">特别是对于入门来说，官方文档永远是首选文档。<br/>相信搞这块的大多是文化人，英文凑合就行，实在看不下去的，请参考第一步。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">1.3 先让Hadoop跑起来</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Hadoop可以算是大数据存储和计算的开山鼻祖，现在大多开源的大数据框架都依赖Hadoop或者与它能很好的兼容。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">关于Hadoop,你至少需要搞清楚以下是什么：</p><ol style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>Hadoop 1.0、Hadoop 2.0</li><li>MapReduce、HDFS</li><li>NameNode、DataNode</li><li>JobTracker、TaskTracker</li><li>Yarn、ResourceManager、NodeManager</li></ol><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">自己搭建Hadoop，请使用第一步和第二步，能让它跑起来就行。<br/>建议先使用安装包命令行安装，不要使用管理工具安装。<br/>另外：Hadoop1.0知道它就行了，现在都用Hadoop 2.0.</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">1.4 试试使用Hadoop</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">HDFS目录操作命令；<br/>上传、下载文件命令；<br/>提交运行MapReduce示例程序；<br/>打开Hadoop WEB界面，查看Job运行状态，查看Job运行日志。<br/>知道Hadoop的系统日志在哪里。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">1.5 你该了解它们的原理了</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">MapReduce：如何分而治之；<br/>HDFS：数据到底在哪里，什么是副本；<br/>Yarn到底是什么，它能干什么；<br/>NameNode到底在干些什么；<br/>ResourceManager到底在干些什么；</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">1.6 自己写一个MapReduce程序</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">请仿照WordCount例子，自己写一个（照抄也行）WordCount程序，<br/>打包并提交到Hadoop运行。<br/>你不会Java？Shell、Python都可以，有个东西叫Hadoop Streaming。</p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><a href=\"http://lxw1234.com/wp-content/uploads/2016/11/11.png\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\"><img class=\" size-medium wp-image-778 alignleft\" src=\"http://lxw1234.com/wp-content/uploads/2016/11/11-300x54.png\" alt=\"11\" width=\"300\" height=\"54\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px 10px 0px auto; display: block; float: left;\"/>&nbsp;</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"http://lxw1234.com\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">本博客</a>对您有帮助，请&nbsp;<a title=\"\" href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"http://lxw1234.com/pay-blog\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><strong>如果你认真完成了以上几步，恭喜你，你的一只脚已经进来了。</strong></p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第二章：更高效的WordCount</h2><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">2.1 学点SQL吧</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">你知道数据库吗？你会写SQL吗？<br/>如果不会，请学点SQL吧。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">2.2 SQL版WordCount</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在1.6中，你写（或者抄）的WordCount一共有几行代码？<br/>给你看看我的:<br/>SELECT word,COUNT(1) FROM wordcount GROUP BY word;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">这便是SQL的魅力，编程需要几十行，甚至上百行代码，我这一句就搞定；使用SQL处理分析Hadoop上的数据，方便、高效、易上手、更是趋势。不论是离线计算还是实时计算，越来越多的大数据处理框架都在积极提供SQL接口。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">2.3 SQL On Hadoop之Hive</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">什么是Hive？官方给的解释是：<br/>The Apache Hive data warehouse software facilitates reading, writing, and managing large datasets residing in distributed storage and queried using SQL syntax.</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">为什么说Hive是数据仓库工具，而不是数据库工具呢？有的朋友可能不知道数据仓库，数据仓库是逻辑上的概念，底层使用的是数据库，数据仓库中的数据有这两个特点：最全的历史数据（海量）、相对稳定的；所谓相对稳定，指的是数据仓库不同于业务系统数据库，数据经常会被更新，数据一旦进入数据仓库，很少会被更新和删除，只会被大量查询。而Hive，也是具备这两个特点，因此，Hive适合做海量数据的数据仓库工具，而不是数据库工具。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">2.4 安装配置Hive</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">请参考1.1 和 1.2 完成Hive的安装配置。可以正常进入Hive命令行。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">2.5 试试使用Hive</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">请参考1.1 和 1.2 ，在Hive中创建wordcount表，并运行2.2中的SQL语句。<br/>在Hadoop WEB界面中找到刚才运行的SQL任务。<br/>看SQL查询结果是否和1.4中MapReduce中的结果一致。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">2.6 Hive是怎么工作的</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">明明写的是SQL，为什么Hadoop WEB界面中看到的是MapReduce任务？</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">2.7 学会Hive的基本命令</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">创建、删除表；<br/>加载数据到表；<br/>下载Hive表的数据；<br/>请参考1.2，学习更多关于Hive的语法和命令。</p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><a href=\"http://lxw1234.com/wp-content/uploads/2016/11/11.png\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\"><img class=\" size-medium wp-image-778 alignleft\" src=\"http://lxw1234.com/wp-content/uploads/2016/11/11-300x54.png\" alt=\"11\" width=\"300\" height=\"54\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px 10px 0px auto; display: block; float: left;\"/></a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"http://lxw1234.com\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">本博客</a>对您有帮助，请&nbsp;<a title=\"\" href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"http://lxw1234.com/pay-blog\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><strong>如果你认真完成了以上几步，恭喜你，你的半条腿已经进来了。</strong></p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">以下章节正在整理中，请持续关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"http://lxw1234.com/\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a></p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第三章：把别处的数据搞到Hadoop上</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第四章：把Hadoop上的数据搞到别处去</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第五章：快一点吧，我的SQL</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第六章：一夫多妻制</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第七章：越来越多的分析任务</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第八章：我的数据要实时</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第九章：我的数据要对外</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第十章：牛逼高大上的机器学习</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2016/11/779.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">写给大数据开发初学者的话</a></p><p><br/></p>,', '5', '', null, '1', '写给大数据开发初学者的话', 'dd9dc539-2cc5-4a45-b012-550ca27942dc.jpg');
INSERT INTO `t_blog` VALUES ('142', '写给大数据开发初学者的话2', '如果你已经按照《写给大数据开发初学者的话》中第一章和第二章的流程认真完整的走了一遍，那么你应该已经具备以下技能和知识点：0和Hadoop2.0的区别；MapReduce的原理（还是那个经典的题目，一个10G大小的文件，给定1G大小的内存，如何使用Java程序统计出现次数最多的10个单词及次数）；HDFS读写数', '2017-01-03 18:10:40', '0', '0', '<p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果你已经按照《<a title=\"\" href=\"http://lxw1234.com/archives/2016/11/779.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2016/11/779.htm\" style=\"color: rgb(0, 166, 124)\">写给大数据开发初学者的话</a>》中第一章和第二章的流程认真完整的走了一遍，那么你应该已经具备以下技能和知识点：</p><ol style=\"padding: 0px;margin: 8px 0px 8px 30px;list-style: none;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><li>0和Hadoop2.0的区别；</li><li>MapReduce的原理（还是那个经典的题目，一个10G大小的文件，给定1G大小的内存，如何使用Java程序统计出现次数最多的10个单词及次数）；</li><li>HDFS读写数据的流程；向HDFS中PUT数据；从HDFS中下载数据；</li><li>自己会写简单的MapReduce程序，运行出现问题，知道在哪里查看日志；</li><li>会写简单的SELECT、WHERE、GROUP BY等SQL语句；</li><li>Hive SQL转换成MapReduce的大致流程；</li><li>Hive中常见的语句：创建表、删除表、往表中加载数据、分区、将表中数据下载到本地；</li></ol><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">从上面的学习，你已经了解到，HDFS是Hadoop提供的分布式存储框架，它可以用来存储海量数据，MapReduce是Hadoop提供的分布式计算框架，它可以用来统计和分析HDFS上的海量数据，而Hive则是SQL On Hadoop，Hive提供了SQL接口，开发人员只需要编写简单易上手的SQL语句，Hive负责把SQL翻译成MapReduce，提交运行。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">此时，你的”大数据平台”是这样的：</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><img src=\"http://7xipth.com1.z0.glb.clouddn.com/20161116-1.jpg\" alt=\"lxw1234\" width=\"898\" height=\"180\" style=\"max-width: 100%;height: auto;vertical-align: middle;border: 0px;display: block;text-align: center\"/></p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">那么问题来了，海量数据如何到HDFS上呢？</p><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第三章：把别处的数据搞到Hadoop上</h2><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">此处也可以叫做数据采集，把各个数据源的数据采集到Hadoop上。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">3.1 HDFS PUT命令</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">这个在前面你应该已经使用过了。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">put命令在实际环境中也比较常用，通常配合shell、python等脚本语言来使用。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">建议熟练掌握。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">3.2 HDFS API</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">HDFS提供了写数据的API，自己用编程语言将数据写入HDFS，put命令本身也是使用API。<br/>实际环境中一般自己较少编写程序使用API来写数据到HDFS，通常都是使用其他框架封装好的方法。比如：Hive中的INSERT语句，Spark中的saveAsTextfile等。<br/>建议了解原理，会写Demo。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">3.3 Sqoop</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">Sqoop是一个主要用于Hadoop/Hive与传统关系型数据库Oracle/MySQL/SQLServer等之间进行数据交换的开源框架。<br/>就像Hive把SQL翻译成MapReduce一样，Sqoop把你指定的参数翻译成MapReduce，提交到Hadoop运行，完成Hadoop与其他数据库之间的数据交换。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">自己下载和配置Sqoop（建议先使用Sqoop1，Sqoop2比较复杂）。<br/>了解Sqoop常用的配置参数和方法。<br/>使用Sqoop完成从MySQL同步数据到HDFS；<br/>使用Sqoop完成从MySQL同步数据到Hive表；</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">PS：如果后续选型确定使用Sqoop作为数据交换工具，那么建议熟练掌握，否则，了解和会用Demo即可。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">3.4 Flume</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">Flume是一个分布式的海量日志采集和传输框架，因为“采集和传输框架”，所以它并不适合关系型数据库的数据采集和传输。<br/>Flume可以实时的从网络协议、消息系统、文件系统采集日志，并传输到HDFS上。<br/>因此，如果你的业务有这些数据源的数据，并且需要实时的采集，那么就应该考虑使用Flume。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">下载和配置Flume。<br/>使用Flume监控一个不断追加数据的文件，并将数据传输到HDFS；</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">PS：Flume的配置和使用较为复杂，如果你没有足够的兴趣和耐心，可以先跳过Flume。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">3.5 阿里开源的DataX</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">之所以介绍这个，是因为我们公司目前使用的Hadoop与关系型数据库数据交换的工具，就是之前基于DataX开发的，非常好用。<br/>可以参考我的博文《<a title=\"\" href=\"http://lxw1234.com/archives/2015/05/231.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2015/05/231.htm\" style=\"color: rgb(0, 166, 124)\">异构数据源海量数据交换工具-Taobao DataX 下载和使用</a>》。<br/>现在DataX已经是3.0版本，支持很多数据源。<br/>你也可以在其之上做二次开发。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">PS：有兴趣的可以研究和使用一下，对比一下它与Sqoop。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果你认真完成了上面的学习和实践，此时，你的”大数据平台”应该是这样的：</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><img src=\"http://7xipth.com1.z0.glb.clouddn.com/20161116-2.jpg\" alt=\"lxw1234\" width=\"890\" height=\"310\" style=\"max-width: 100%;height: auto;vertical-align: middle;border: 0px;display: block;text-align: center\"/></p><hr style=\"margin: 20px 0px;border-right-width: 0px;border-left-width: 0px;border-top-style: solid;border-top-color: rgb(238, 238, 238);border-bottom-style: solid;border-bottom-color: rgb(255, 255, 255);color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"/><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><a title=\"\" href=\"http://lxw1234.com/wp-content/uploads/2016/11/11.png\" data-original-title=\"\" style=\"color: rgb(0, 166, 124)\"><img class=\" size-medium wp-image-778 alignleft\" src=\"http://lxw1234.com/wp-content/uploads/2016/11/11-300x54.png\" alt=\"11\" width=\"300\" height=\"54\" style=\"max-width: 100%;height: auto;vertical-align: middle;border: 0px;margin: 0px 10px 0px auto;display: block;float: left\"/>&nbsp;</a></p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果觉得<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"http://lxw1234.com\" style=\"color: rgb(0, 166, 124)\">本博客</a>对您有帮助，请&nbsp;<a title=\"\" href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"http://lxw1234.com/pay-blog\" style=\"color: rgb(0, 166, 124)\">赞助作者</a>&nbsp;。</p><hr style=\"margin: 20px 0px;border-right-width: 0px;border-left-width: 0px;border-top-style: solid;border-top-color: rgb(238, 238, 238);border-bottom-style: solid;border-bottom-color: rgb(255, 255, 255);color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"/><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第四章：把Hadoop上的数据搞到别处去</h2><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">前面介绍了如何把数据源的数据采集到Hadoop上，数据到Hadoop上之后，便可以使用Hive和MapReduce进行分析了。那么接下来的问题是，分析完的结果如何从Hadoop上同步到其他系统和应用中去呢？</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">其实，此处的方法和第三章基本一致的。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">4.1 HDFS GET命令</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">把HDFS上的文件GET到本地。需要熟练掌握。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">4.2 HDFS API</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">同3.2.</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">4.3 Sqoop</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">同3.3.<br/>使用Sqoop完成将HDFS上的文件同步到MySQL；<br/>使用Sqoop完成将Hive表中的数据同步到MySQL；</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">4.4 DataX</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">同3.5.</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果你认真完成了上面的学习和实践，此时，你的”大数据平台”应该是这样的：</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><img src=\"http://7xipth.com1.z0.glb.clouddn.com/20161116-3.jpg\" alt=\"lxw1234\" width=\"884\" height=\"456\" style=\"max-width: 100%;height: auto;vertical-align: middle;border: 0px;display: block;text-align: center\"/></p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">以下章节正在整理中，请持续关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"http://lxw1234.com/\" style=\"color: rgb(0, 166, 124)\">lxw的大数据田地</a></p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第五章：快一点吧，我的SQL</h2><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第六章：一夫多妻制</h2><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第七章：越来越多的分析任务</h2><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第八章：我的数据要实时</h2><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第九章：我的数据要对外</h2><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第十章：牛逼高大上的机器学习</h2><hr style=\"margin: 20px 0px;border-right-width: 0px;border-left-width: 0px;border-top-style: solid;border-top-color: rgb(238, 238, 238);border-bottom-style: solid;border-bottom-color: rgb(255, 255, 255);color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"/><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><a title=\"\" href=\"http://lxw1234.com/wp-content/uploads/2016/11/11.png\" data-original-title=\"\" style=\"color: rgb(0, 166, 124)\"><img class=\" size-medium wp-image-778 alignleft\" src=\"http://lxw1234.com/wp-content/uploads/2016/11/11-300x54.png\" alt=\"11\" width=\"300\" height=\"54\" style=\"max-width: 100%;height: auto;vertical-align: middle;border: 0px;margin: 0px 10px 0px auto;display: block;float: left\"/>&nbsp;</a></p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果觉得<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"http://lxw1234.com\" style=\"color: rgb(0, 166, 124)\">本博客</a>对您有帮助，请&nbsp;<a title=\"\" href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"http://lxw1234.com/pay-blog\" style=\"color: rgb(0, 166, 124)\">赞助作者</a>&nbsp;。</p><hr style=\"margin: 20px 0px;border-right-width: 0px;border-left-width: 0px;border-top-style: solid;border-top-color: rgb(238, 238, 238);border-bottom-style: solid;border-bottom-color: rgb(255, 255, 255);color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"/><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124)\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124)\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2016/11/782.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124)\">写给大数据开发初学者的话2</a></p><p><br/></p>,', '5', '', null, '1', '美团技术', '507fbdea-e619-47c9-8853-95a722514d12.jpg');
INSERT INTO `t_blog` VALUES ('143', '写给大数据开发初学者的话3', '如果你已经按照《写给大数据开发初学者的话2》中第三章和第四章的流程认真完整的走了一遍，那么你应该已经具备以下技能和知识点：知道如何把已有的数据采集到HDFS上，包括离线采集和实时采集；你已经知道sqoop（或者还有DataX）是HDFS和其他数据源之间的数据交换工具；你已经知道flume可以用作实时的日志采集', '2017-01-03 18:11:17', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果你已经按照《<a title=\"\" href=\"http://lxw1234.com/archives/2016/11/782.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2016/11/782.htm\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">写给大数据开发初学者的话2</a>》中第三章和第四章的流程认真完整的走了一遍，那么你应该已经具备以下技能和知识点：</p><ol style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>知道如何把已有的数据采集到HDFS上，包括离线采集和实时采集；</li><li>你已经知道sqoop（或者还有DataX）是HDFS和其他数据源之间的数据交换工具；</li><li>你已经知道flume可以用作实时的日志采集；</li></ol><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">从前面的学习，对于大数据平台，你已经掌握的不少的知识和技能，搭建Hadoop集群，</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">把数据采集到Hadoop上，使用Hive和MapReduce来分析数据，把分析结果同步到其他数据源。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">接下来的问题来了，Hive使用的越来越多，你会发现很多不爽的地方，特别是速度慢，</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">大多情况下，明明我的数据量很小，它都要申请资源，启动MapReduce来执行。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第五章：快一点吧，我的SQL</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">其实大家都已经发现Hive后台使用MapReduce作为执行引擎，实在是有点慢。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">因此SQL On Hadoop的框架越来越多，按我的了解，最常用的按照流行度依次为SparkSQL、Impala和Presto.</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">这三种框架基于半内存或者全内存，提供了SQL接口来快速查询分析Hadoop上的数据。关于三者的比较，请参考1.1.</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">我们目前使用的是SparkSQL，至于为什么用SparkSQL，原因大概有以下吧：</p><ol style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>使用Spark还做了其他事情，不想引入过多的框架；</li><li>Impala对内存的需求太大，没有过多资源部署；</li></ol><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">5.1 关于Spark和SparkSQL</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">什么是Spark，什么是SparkSQL。<br/>Spark有的核心概念及名词解释。<br/>SparkSQL和Spark是什么关系，SparkSQL和Hive是什么关系。<br/>SparkSQL为什么比Hive跑的快。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">5.2 如何部署和运行SparkSQL</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Spark有哪些部署模式？<br/>如何在Yarn上运行SparkSQL？<br/>使用SparkSQL查询Hive中的表。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><strong>PS: Spark不是一门短时间内就能掌握的技术，因此建议在了解了Spark之后，可以先从SparkSQL入手，循序渐进。</strong></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">关于Spark和SparkSQL，可参考&nbsp;<a title=\"\" href=\"http://lxw1234.com/archives/category/spark\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/category/spark\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">http://lxw1234.com/archives/category/spark</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果你认真完成了上面的学习和实践，此时，你的”大数据平台”应该是这样的：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20161123-1.jpg\" alt=\"lxw1234\" width=\"972\" height=\"428\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第六章：一夫多妻制</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">请不要被这个名字所诱惑。其实我想说的是数据的一次采集、多次消费。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在实际业务场景下，特别是对于一些监控日志，想即时的从日志中了解一些指标（关于实时计算，后面章节会有介绍），这时候，从HDFS上分析就太慢了，尽管是通过Flume采集的，但Flume也不能间隔很短就往HDFS上滚动文件，这样会导致小文件特别多。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">为了满足数据的一次采集、多次消费的需求，这里要说的便是Kafka。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">6.1 关于Kafka</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">什么是Kafka？</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Kafka的核心概念及名词解释。</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">6.2 如何部署和使用Kafka</span></h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">使用单机部署Kafka，并成功运行自带的生产者和消费者例子。<br/>使用Java程序自己编写并运行生产者和消费者程序。<br/>Flume和Kafka的集成，使用Flume监控日志，并将日志数据实时发送至Kafka。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">关于Kafka，可以参考&nbsp;<a title=\"\" href=\"http://lxw1234.com/archives/category/kafka\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/category/kafka\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">http://lxw1234.com/archives/category/kafka</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果你认真完成了上面的学习和实践，此时，你的”大数据平台”应该是这样的：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20161123-2.jpg\" alt=\"lxw1234\" width=\"1038\" height=\"484\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">这时，使用Flume采集的数据，不是直接到HDFS上，而是先到Kafka，Kafka中的数据可以由多个消费者同时消费，其中一个消费者，就是将数据同步到HDFS。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">以下章节正在整理中，请持续关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"http://lxw1234.com/\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a></p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第七章：越来越多的分析任务</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第八章：我的数据要实时</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第九章：我的数据要对外</h2><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">第十章：牛逼高大上的机器学习</h2><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2016/11/787.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">写给大数据开发初学者的话3</a></p><p><br/></p>,', '5', '', null, '1', '写给大数据开发初学者的话', 'b99eb507-ca27-43d4-b3e7-a5fd52ece90c.jpg');
INSERT INTO `t_blog` VALUES ('144', '写给大数据开发初学者的话4', '如果你已经按照《写给大数据开发初学者的话3》中第五章和第六章的流程认真完整的走了一遍，那么你应该已经具备以下技能和知识点：为什么Spark比MapReduce快。使用SparkSQL代替Hive，更快的运行SQL。使用Kafka完成数据的一次收集，多次消费架构。自己可以写程序完成Kafka的生产者和消费者。从', '2017-01-03 18:11:51', '0', '0', '<p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果你已经按照《<a title=\"\" href=\"http://lxw1234.com/archives/2016/11/787.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2016/11/787.htm\" style=\"color: rgb(0, 166, 124)\">写给大数据开发初学者的话3</a>》中第五章和第六章的流程认真完整的走了一遍，那么你应该已经具备以下技能和知识点：</p><ol style=\"padding: 0px;margin: 8px 0px 8px 30px;list-style: none;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><li>为什么Spark比MapReduce快。</li><li>使用SparkSQL代替Hive，更快的运行SQL。</li><li>使用Kafka完成数据的一次收集，多次消费架构。</li><li>自己可以写程序完成Kafka的生产者和消费者。</li></ol><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">从前面的学习，你已经掌握了大数据平台中的数据采集、数据存储和计算、数据交换等大部分技能，而这其中的每一步，都需要一个任务（程序）来完成，各个任务之间又存在一定的依赖性，比如，必须等数据采集任务成功完成后，数据计算任务才能开始运行。如果一个任务执行失败，需要给开发运维人员发送告警，同时需要提供完整的日志来方便查错。</p><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第七章：越来越多的分析任务</h2><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">不仅仅是分析任务，数据采集、数据交换同样是一个个的任务。这些任务中，有的是定时触发，有点则需要依赖其他任务来触发。当平台中有几百上千个任务需要维护和运行时候，仅仅靠crontab远远不够了，这时便需要一个调度监控系统来完成这件事。调度监控系统是整个数据平台的中枢系统，类似于AppMaster，负责分配和监控任务。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">7.1 Apache Oozie</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">1.&nbsp;&nbsp; &nbsp;Oozie是什么？有哪些功能？<br/>2.&nbsp;&nbsp; &nbsp;Oozie可以调度哪些类型的任务（程序）？<br/>3.&nbsp;&nbsp; &nbsp;Oozie可以支持哪些任务触发方式？<br/>4.&nbsp;&nbsp; &nbsp;安装配置Oozie。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">7.2 其他开源的任务调度系统</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">Azkaban：</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">https://azkaban.github.io/</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">light-task-scheduler：</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">https://github.com/ltsopensource/light-task-scheduler</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">Zeus：</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">https://github.com/alibaba/zeus</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">等等……<br/>另外，我这边是之前单独开发的任务调度与监控系统，具体请参考《<a title=\"\" href=\"http://lxw1234.com/archives/2015/04/109.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2015/04/109.htm\" style=\"color: rgb(0, 166, 124)\">大数据平台任务调度与监控系统</a>》.</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果你认真完成了上面的学习和实践，此时，你的”大数据平台”应该是这样的：</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><img src=\"http://7xipth.com1.z0.glb.clouddn.com/20161129-1.jpg\" alt=\"lxw1234\" width=\"1083\" height=\"433\" style=\"max-width: 100%;height: auto;vertical-align: middle;border: 0px;display: block;text-align: center\"/></p><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第八章：我的数据要实时</h2><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">在第六章介绍Kafka的时候提到了一些需要实时指标的业务场景，实时基本可以分为绝对实时和准实时，绝对实时的延迟要求一般在毫秒级，准实时的延迟要求一般在秒、分钟级。对于需要绝对实时的业务场景，用的比较多的是Storm，对于其他准实时的业务场景，可以是Storm，也可以是Spark Streaming。当然，如果可以的话，也可以自己写程序来做。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">8.1 Storm</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">1.&nbsp;&nbsp; &nbsp;什么是Storm？有哪些可能的应用场景？<br/>2.&nbsp;&nbsp; &nbsp;Storm由哪些核心组件构成，各自担任什么角色？<br/>3.&nbsp;&nbsp; &nbsp;Storm的简单安装和部署。<br/>4.&nbsp;&nbsp; &nbsp;自己编写Demo程序，使用Storm完成实时数据流计算。</p><h3 style=\"margin: 5px 0px;line-height: 35px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 16px;font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\"><span style=\"color: rgb(255, 0, 255)\">8.2 Spark Streaming</span></h3><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">1.&nbsp;&nbsp; &nbsp;什么是Spark Streaming，它和Spark是什么关系？<br/>2.&nbsp;&nbsp; &nbsp;Spark Streaming和Storm比较，各有什么优缺点？<br/>3.&nbsp;&nbsp; &nbsp;使用Kafka + Spark Streaming，完成实时计算的Demo程序。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果你认真完成了上面的学习和实践，此时，你的”大数据平台”应该是这样的：</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\"><img src=\"http://7xipth.com1.z0.glb.clouddn.com/20161129-2.jpg\" alt=\"lxw1234\" width=\"1100\" height=\"468\" style=\"max-width: 100%;height: auto;vertical-align: middle;border: 0px;display: block;text-align: center\"/></p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">以下章节正在整理中，请持续关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"http://lxw1234.com/\" style=\"color: rgb(0, 166, 124)\">lxw的大数据田地</a></p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第九章：我的数据要对外</h2><h2 style=\";line-height: 18px;color: rgb(85, 85, 85);text-rendering: optimizeLegibility;font-size: 18px;padding: 10px 20px 9px 10px;border-left: 4px solid rgb(0, 166, 124);background-color: rgb(251, 251, 251);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;text-indent: 30px;white-space: normal\">第十章：牛逼高大上的机器学习</h2><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">&nbsp;</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124)\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px;margin-bottom: 15px;color: rgb(85, 85, 85);font-family: &#39;Microsoft Yahei&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;font-size: 15px;line-height: 26px;text-indent: 30px;white-space: normal\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124)\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2016/11/795.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124)\">写给大数据开发初学者的话4</a></p><p><br/></p>,', '5', '', null, '1', '写给大数据开发初学者的话', '0f213c5d-ea87-4cdb-9d12-43ae9f60a1cc.jpg');
INSERT INTO `t_blog` VALUES ('145', '一站式用户自助数据接入与分析平台', '一站式用户自助数据接入与分析平台，也可以当做一个提供大数据分析服务的云平台，用户可以基于平台数据仓库中已有的事实表和维度表（有访问权限），自助建立分析模型，进行OLAP分析与可视化；也可以将自己的数据接入到平台，在已接入的数据上自助建立分析模型，进行OLAP分析与可视化。对于前者（大多是内部用户）来说，它是一', '2017-01-03 18:21:04', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">一站式用户自助数据接入与分析平台，也可以当做一个提供大数据分析服务的云平台，用户可以基于平台数据仓库中已有的事实表和维度表（有访问权限），自助建立分析模型，进行OLAP分析与可视化；也可以将自己的数据接入到平台，在已接入的数据上自助建立分析模型，进行OLAP分析与可视化。对于前者（大多是内部用户）来说，它是一个自助分析平台，而对于后者（大多是外部用户）来说，它是一个大数据分析云服务平台；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><h1 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">整体设计</h1><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160713-0.jpg\" alt=\"bigdata\" width=\"1020\" height=\"712\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">平台使用的组件（关于各组件介绍请参考文章最后的相关阅读）：</p><ol style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>数据仓库存储与计算：Hive/Hadoop/SparkSQL</li><li>OLAP引擎：Apache Kylin</li><li>前端UI与图表可视化：Caravel（二次开发）</li><li>任务调度与监控：SkyNet</li><li>自助数据接入：DataHub（基于DataX二次开发）</li></ol><h1 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">外部数据自助接入与分析</h1><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">即架构图中右侧部分，包含自助接入、自助建模、自助分析三个步骤。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">自助接入数据</span></h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">基于DataHub，用户可以将自己的关系型数据库（MySQL、Oracle、SQLServer等）和本地文本文件接入到平台；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">数据库数据接入时候需要填写IP、PORT、数据库、用户名、密码、SCHEMA、表名等，测试连接后，自动获取该表的字段及数据类型，用户可以选择需要接入哪些字段，是否分区，一次性接入还是按天增量接入等；另外，用户也可以通过自定义SQL来作为数据源。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">提交之后，后台在调度系统中创建相应的DataHub任务，完成由用户数据库到Hive表的数据交换；在这期间，平台可以通过调用调度系统的API来获取接入任务的状态。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">文本数据接入时候需要上传文件，并填写文本中字段分隔符、字段名、字段数据类型等，提交之后，后台将上传的文本文件Load到Hive表中。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">自助建模</span></h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">当数据成功接入到平台（Hive表）之后，用户可以基于自己接入的Hive表来建模，建模包括以下内容：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">定义表中那些字段作为维度(GroupBy)；<br/>定义表中那些维度字段可以过滤(Filterable)；<br/>自己使用SQL表达式新增一个维度字段；<br/>定义表中哪些字段作为指标，以及指标的计算类型(SUM、MAX、MIN、AVG、COUNT、COUNT DISTINCT)；<br/>自己使用SQL表达式新增一个指标字段；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160713-1.jpg\" alt=\"bigdata\" width=\"1155\" height=\"668\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">提交建模之后，根据用户的模型，使用Kylin的API，首先Load Hive Table、创建Model、创建Cube，然后在调度系统中创建Build Cube的任务，并提交运行Build Cube，同样平台可以通过调用调度系统的API来获取Build Cube任务的状态。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">当Build Cube任务成功结束后，平台将模型信息写入到Caravel的元数据中。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">自助分析</span></h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">建模完成后，用户就可以在平台门户(Caravel)中看到该数据模型；可以基于此模型进行自助分析与可视化、创建数据图表(Slice)、创建仪表盘(DashBoard)等。</p><h1 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">内部数据自助分析</h1><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">内部数据处理流程，即架构图中左侧部分，是一个标准的数据仓库数据处理流程，<br/>从数据源–&gt;ODS–&gt;DW–&gt;DM，按照事先设计的数据模型，增量刷新即可。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">为自助分析平台提供的数据源，即包括DW的事实表和维表，也报过DM的汇总表（多为视图形式）；用户登陆自助分析平台之后，可以基于有访问权限的事实表或汇总表自助建立模型、自助分析；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">自助建模与自助分析的过程与前面外部数据一致，只是少了一步数据接入。</p><h1 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">相关阅读</h1><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">OLAP 引擎 Apache Kylin：<a title=\"\" href=\"http://lxw1234.com/archives/2016/04/643.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2016/04/643.htm\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">分布式大数据多维分析（OLAP）引擎Apache Kylin安装配置及使用示例</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">前端UI与图表可视化：Caravel：<a title=\"\" href=\"http://lxw1234.com/archives/2016/06/681.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2016/06/681.htm\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">Caravel–一款开源OLAP+数据可视化分析前端工具，支持Druid和Kylin</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">任务调度与监控：SkyNet：<a title=\"\" href=\"http://lxw1234.com/archives/2015/04/109.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2015/04/109.htm\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">大数据平台任务调度与监控系统</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">自助数据接入：DataHub：<a title=\"\" href=\"http://lxw1234.com/archives/2015/05/231.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2015/05/231.htm\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">异构数据源海量数据交换工具-Taobao DataX 下载和使用</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2016/07/701.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">一站式用户自助数据接入与分析平台</a></p><p><br/></p>,', '6', '', null, '1', '大数据平台', 'b3230285-01e9-4643-8448-f741db33a6e1.jpg');
INSERT INTO `t_blog` VALUES ('146', '华扬数据自助分析系统V1.0', '之前介绍过的《一站式用户自助数据接入与分析平台》，经过4人/月的开发，现V1.0版本上线，供公司内部用户使用。V1.0版本前端基于Caravel改造，查询模型数据使用的OLAP引擎有三种：Kylin、Hive+SparkSQL以及MySQL；其中，对于事实表数据量非常小（<5万）的模型，直接保存在MySQL中', '2017-01-03 18:21:53', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">之前介绍过的《<a title=\"\" href=\"http://lxw1234.com/archives/2016/07/701.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2016/07/701.htm\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">一站式用户自助数据接入与分析平台</a>》，经过4人/月的开发，现V1.0版本上线，供公司内部用户使用。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">V1.0版本前端基于Caravel改造，查询模型数据使用的OLAP引擎有三种：Kylin、Hive+SparkSQL以及MySQL；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">其中，对于事实表数据量非常小（&lt;5万）的模型，直接保存在MySQL中，供前端分析查询使用；对于数据量中等（&gt;5万，&lt;100万）的模型，默认使用Hive+SparkSQL来查询分析；对于数据量较大（&gt;100万）的模型，在Kylin中建立Cube，供前端分析查询使用;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">设计该系统的主要目的一是为了使产品、运营、数据分析同事能快捷方便灵活的管理和分析自己的数据，而不用依赖开发资源；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">二是为了减少数据开发人员的临时数据任务，做过数据开发的同学应该深有体会，很多时间都被临时取数给占掉了。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/201610111-1.jpg\" alt=\"lxw1234\" width=\"1602\" height=\"665\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">该系统目前核心功能如下：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">1. 自助数据接入：目前支持文本（包括excel）数据接入和MySQL数据接入；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">2. 自助建模：基于接入成功的数据，建立分析模型；该过程包括选择事实表、选择维度、选择指标、定义关联维度表等；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">3. 自助分析：基于建立成功的模型，进行自助分析；该过程包括选择任意时间范围、选择任意维度与指标组合、自定义过滤条件等，对模型中的数据进行多维OLAP分析探索；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">4. 自助报表：可以将自助分析的结果保存成一张报表，下次直接点击报表即可查看结果；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">5. 自助仪表盘：可以将多个报表组合成一个仪表盘，在仪表盘中同时展示多张报表的结果；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/201610111-2.jpg\" alt=\"lxw1234\" width=\"1249\" height=\"913\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">该系统目前面向的内部用户有以下几类：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">1. 产品、运营、数据分析人员：他们可以自助接入数据、自助建模、自助分析、自助报表、自助仪表盘；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">2. 数据开发人员：他们将数据仓库中已有的数据建立好模型（事实表、维度表），供产品、运营、数据分析人员使用；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">3. BOSS：不论是大小BOSS，他们到系统中只会看一下报表和仪表盘；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">下面是录制的几个演示视频，每个视频大概1M~2M，请等待加载完成，如果看不清楚，请全屏播放：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">1. 自助数据接入（文本文件）：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">示例中将一个保存了地域信息的文本文件接入到系统中；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><a title=\"\" href=\"http://lxw1234.com/video-1\" target=\"_blank\" data-original-title=\"自助数据接入\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">点此查看自助数据接入演示视频</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">2. 自助建立多表关联模型：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">示例中通过将事实表和维度表进行关联，建立了一个分析模型；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><a title=\"\" href=\"http://lxw1234.com/video-2\" target=\"_blank\" data-original-title=\"自助建模\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">点此查看自助建模演示视频</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">3. 自助报表：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">示例中将自助分析的结果定制保存成一张报表；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><a title=\"\" href=\"http://lxw1234.com/video-3\" target=\"_blank\" data-original-title=\"自助报表\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">点此查看自助报表演示视频</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">4. 自助仪表盘：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">示例中将多个报表定制保存成一个仪表盘；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><a title=\"\" href=\"http://lxw1234.com/video-4\" target=\"_blank\" data-original-title=\"自助仪表盘\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">点此查看自助仪表盘演示视频</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p><br/></p>,', '6', '', null, '1', '大数据平台', '4a74a716-3742-49b1-9465-0b0569c0343f.jpg');
INSERT INTO `t_blog` VALUES ('147', 'ElasticSearch集群安装配置', 'ElasticSearch是一个开源搜索服务框架，它已经成为搜索解决方案领域的重要成员。ElasticSearch还经常被用作文档数据库，这主要得益于它的分布式特性和实时搜索能力，另外，ElasticSearch支持越来越多的聚合功能，而且和Yarn、Hadoop、Hive、Pig、Spark、Flume等大', '2017-01-03 18:32:40', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">ElasticSearch是一个开源搜索服务框架，它已经成为搜索解决方案领域的重要成员。ElasticSearch还经常被用作文档数据库，这主要得益于它的分布式特性和实时搜索能力，另外，ElasticSearch支持越来越多的聚合功能，而且和Yarn、Hadoop、Hive、Pig、Spark、Flume等大数据处理框架的兼容性越来越好。我主要是想调研一下看是否能将它用于实时的数据搜索统计、以及实时OLAP的业务场景之上。这里先记录一下ElasticSearch集群的安装配置。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">ElasticSearch的一些术语</h2><ul style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>索引（index）</li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal; padding-left: 60px;\">索引（Index）相当于关系型数据库中的表；</p><ul style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>文档（document）</li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal; padding-left: 60px;\">文档相当于关系型数据库中的行。但ES中的文档不需要有固定的结构，不同文档可以有不同的字段集合。</p><ul style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>文档类型（type）</li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal; padding-left: 60px;\">在一个索引中，可以用不同的文档类型来代表不同的数据集合。</p><ul style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>节点和集群</li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal; padding-left: 60px;\">ElastichSearch可以作为一个独立的搜索服务器工作，也可以在多台协同工作的服务器上运行，统称为一个集群，其中有一台被作为Master，其他为Slave；</p><ul style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>分片（shard）</li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal; padding-left: 60px;\">一个索引会被分隔成多个分片，分别存放于集群中的不同节点中，类似于HDFS的文件块。</p><ul style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>副本</li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal; padding-left: 60px;\">副本是针对每个分片的，可以为一个分片设置多个副本，分布在不同的节点上，即是容错，也可以提高查询任务的性能，原理同HDFS的文件块副本机制。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">硬件及软件环境</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">两台CentOS，172.16.212.17（32G内存）、172.16.212.102（72G内存）</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">JAVA: jdk-8u65-linux-x64.tar.gz</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">ElasticSearch：elasticsearch-2.1.0</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">下载JAVA和ElasticSearch之后解压到指定目录（/home/liuxiaowen/）。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">配置elasticsearch.yml</h2><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cluster</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">name</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> hy_es &nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//集群名称</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">node</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">name</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> es_node_102 &nbsp;</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//节点名称，两台节点名称不能一样</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">path</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">data</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">/data/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">es</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">data &nbsp;</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//ES存放数据的目录</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">path</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">logs</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">/data/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">es</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">logs &nbsp;</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//ES存放日志的目录</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">network</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">host</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">172.16</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">212.102</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//这个可以不配置，默认为0.0.0.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">network</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">publish_host</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">172.16</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">212.102</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//这个可以不配置，默认为0.0.0.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">gateway</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">recover_after_nodes</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//设置集群中N个节点启动时进行数据恢复</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">discovery</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">zen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ping_timeout</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10s</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//节点之间通过ping进行应答的超时时间</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">discovery</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">zen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ping</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">unicast</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">hosts</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;172.16.212.102&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;172.16.212.17&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//集群中可以作为master节点的初始列表，通过这些节点来自动发现新加入集群的节点</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">discovery</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">zen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">minimum_master_nodes</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//配置当前集群中最少的主节点数,对于多于两个节点的集群环境,建议配置大于1</span></li></ol></pre><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">配置ElasticSearch使用内存</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">$ES_HOME/bin/elasticsearch.in.sh</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">if</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;x$ES_MIN_MEM&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;x&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">];</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">then</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;ES_MIN_MEM</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10g</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//最小内存，根据机器内存来定</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">fi</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">if</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;x$ES_MAX_MEM&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;x&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">];</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">then</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;ES_MAX_MEM</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">36g</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//最大内存，根据机器内存来定，最好不要超过机器物理内存的50%</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">fi</span></li></ol></pre><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">配置JAVA环境变量</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在用户的.bash_profile中加入：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">export JAVA_HOME=/hom/liuxiaowen/jdk1.8.0_65<br/>export PATH=$JAVA_HOME/bin:$PATH</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">或者在$ES_HOME/bin/elasticsearch脚本中配置：<br/>export JAVA_HOME=/hom/liuxiaowen/jdk1.8.0_65</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">或者在启动ElasticSearch之前在命令行export JAVA_HOME=/hom/liuxiaowen/jdk1.8.0_65<br/>都可以。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">安装head监控插件</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">cd $ES_HOME/bin</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">./plugin install mobz/elasticsearch-head</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">需要在两台机器上都安装。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">安装成功后，如图所示:</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1210-1.jpg\" alt=\"elasticsearch\" width=\"1302\" height=\"335\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">启动ElasticSearch</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">cd $ES_HOME/bin</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">./elasticsearch -d</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">-d参数表示在后台启动。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">ElasticSearch运行日志在配置的${path.logs}/${cluster.name}.log中</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Master(102)</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1210-2.jpg\" alt=\"elasticsearch\" width=\"1594\" height=\"507\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Slave（17）</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1210-3.jpg\" alt=\"elasticsearch\" width=\"1299\" height=\"482\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">head监控页面（http://172.16.212.102:9200/_plugin/head/）</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1210-4.jpg\" alt=\"elasticsearch\" width=\"1065\" height=\"293\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">查看集群状态：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">curl </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">XGET </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;http://172.16.212.102:9200/_cluster/health?pretty&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">响应结果：</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;cluster_name&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hy_es&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;status&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;green&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;timed_out&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;number_of_nodes&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;number_of_data_nodes&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;active_primary_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;active_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;relocating_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;initializing_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;unassigned_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;delayed_unassigned_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;number_of_pending_tasks&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;number_of_in_flight_fetch&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;task_max_waiting_in_queue_millis&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;active_shards_percent_as_number&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">100.0</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">集群配置完毕，刚接触，有些参数可能配置的不合理，后续再慢慢研究。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">接下来将介绍ElasticSearch的一些基本操作。</p><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2015/12/582.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">ElasticSearch集群安装配置</a></p><p><br/></p>,', '7', '', null, '1', '美团技术', 'f2ecebe1-de87-421d-bb78-8432598f4f37.jpg');
INSERT INTO `t_blog` VALUES ('148', '使用Hive读写ElasticSearch中的数据', 'ElasticSearch已经可以与YARN、Hadoop、Hive、Pig、Spark、Flume等大数据技术框架整合起来使用，尤其是在添加数据的时候，可以使用分布式任务来添加索引数据，尤其是在数据平台上，很多数据存储在Hive中，使用Hive操作ElasticSearch中的数据，将极大的方便开发人员。这', '2017-01-03 18:33:27', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">ElasticSearch已经可以与YARN、Hadoop、Hive、Pig、Spark、Flume等大数据技术框架整合起来使用，尤其是在添加数据的时候，可以使用分布式任务来添加索引数据，尤其是在数据平台上，很多数据存储在Hive中，使用Hive操作ElasticSearch中的数据，将极大的方便开发人员。这里记录一下Hive与ElasticSearch整合，查询和添加数据的配置使用过程。基于Hive0.13.1、Hadoop-cdh5.0、ElasticSearch 2.1.0。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 0);\">通过Hive读取与统计分析ElasticSearch中的数据</span></h2><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">ElasticSearch中已有的数据</h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">_index：lxw1234<br/>_type：tags<br/>_id：用户ID（cookieid）<br/>字段：area、media_view_tags、interest</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1211-11.jpg\" alt=\"elasticsearch\" width=\"772\" height=\"399\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">Hive建表</h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">由于我用的ElasticSearch版本为2.1.0，因此必须使用elasticsearch-hadoop-2.2.0才能支持，如果ES版本低于2.1.0，可以使用elasticsearch-hadoop-2.1.2.</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">下载地址：https://www.elastic.co/downloads/hadoop</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">add jar file</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">///home/liuxiaowen/elasticsearch-hadoop-2.2.0-beta1/dist/elasticsearch-hadoop-hive-2.2.0-beta1.jar;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">CREATE EXTERNAL TABLE lxw1234_es_tags </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cookieid </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">area </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">media_view_tags </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">interest </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">STORED BY </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;org.elasticsearch.hadoop.hive.EsStorageHandler&#39;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">TBLPROPERTIES</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.nodes&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;172.16.212.17:9200,172.16.212.102:9200&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.index.auto.create&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;false&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.resource&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;lxw1234/tags&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.read.metadata&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;true&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.mapping.names&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;cookieid:_metadata._id, area:area, media_view_tags:media_view_tags, interest:interest&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">);</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">注意：因为在ES中，lxw1234/tags的_id为cookieid，要想把_id映射到Hive表字段中，必须使用这种方式：<br/>‘es.read.metadata’ = ‘true’,<br/>‘es.mapping.names’ = ‘cookieid:_metadata._id,…’</p><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">在Hive中查询数据</h3><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1211-12.jpg\" alt=\"elasticsearch\" width=\"902\" height=\"625\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">数据已经可以正常查询。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">执行SELECT COUNT(1) FROM lxw1234_es_tags;Hive还是通过MapReduce来执行，每个分片使用一个Map任务：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1211-13.jpg\" alt=\"elasticsearch\" width=\"811\" height=\"715\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">可以通过在Hive外部表中指定search条件，只查询过滤后的数据。比如，下面的建表语句会从ES中搜索_id=98E5D2DE059F1D563D8565的记录：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">CREATE EXTERNAL TABLE lxw1234_es_tags_2 </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cookieid </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">area </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">media_view_tags </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">interest </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">STORED BY </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;org.elasticsearch.hadoop.hive.EsStorageHandler&#39;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">TBLPROPERTIES</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.nodes&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;172.16.212.17:9200,172.16.212.102:9200&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.index.auto.create&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;false&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.resource&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;lxw1234/tags&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.read.metadata&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;true&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.mapping.names&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;cookieid:_metadata._id, area:area, media_view_tags:media_view_tags, interest:interest&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.query&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;?q=_id:98E5D2DE059F1D563D8565&#39;</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">);</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">hive</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">select</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">from</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> lxw1234_es_tags_2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">OK</span></li><li><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">98E5D2DE059F1D563D8565</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">四川|成都</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">购物|</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">购物|</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Time</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> taken</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.096</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> seconds</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Fetched</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> row</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">s</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果数据量不大，可以使用Hive的Local模式来执行，这样不必提交到Hadoop集群：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在Hive中设置：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">set</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> hive</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">exec</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mode</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">local</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">auto</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">inputbytes</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">max</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">134217728</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">set</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> hive</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">exec</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mode</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">local</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">auto</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">tasks</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">max</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">set</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> hive</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">exec</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mode</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">local</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">auto</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">true</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">set</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> fs</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">defaultFS</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">file</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">///;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">hive</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">select</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> area</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">count</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">as</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cnt </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">from</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> lxw1234_es_tags </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">group</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">by</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> area order </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">by</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cnt desc limit </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">20</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Automatically</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> selecting </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">local</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> only mode </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">for</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> query</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Total</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> jobs </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Launching</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Job</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">out</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> of </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">…..</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Execution</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> log at</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">/tmp/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">liuxiaowen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">liuxiaowen_20151211133030_97b50138</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">d55d</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">4a39</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">bc8e</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cbdf09e33ee6</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">log</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Job</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> running </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">in</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">process </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">local</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Hadoop</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Hadoop</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> job information </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">for</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">null</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> number of mappers</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> number of reducers</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span></li><li><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2015</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">12</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">11</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">13</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">30</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">59</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">648</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">null</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> map </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">100</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">%,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;reduce </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">100</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">%</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Ended</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Job</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> job_local1283765460_0001</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Execution</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> completed successfully</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">MapredLocal</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> task succeeded</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">OK</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">北京|北京</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">四川|成都</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">4</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">重庆|重庆</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">3</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">山西|太原</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">3</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">上海|上海</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">3</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">广东|深圳</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">3</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">湖北|武汉</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">陕西|西安</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">福建|厦门</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">广东|中山</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">福建|三明</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">山东|济宁</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">甘肃|兰州</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">安徽|合肥</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">湖南|长沙</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">湖南|湘西</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">河南|洛阳</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">江苏|南京</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">黑龙江|哈尔滨</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">广西|南宁</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Time</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> taken</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">13.037</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> seconds</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Fetched</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">20</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> row</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">s</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">hive</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">很快完成了查询与统计。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 0);\">通过Hive向ElasticSearch中写数据</span></h2><h3 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">Hive建表</h3><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">add jar file</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">///home/liuxiaowen/elasticsearch-hadoop-2.2.0-beta1/dist/elasticsearch-hadoop-hive-2.2.0-beta1.jar;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">CREATE EXTERNAL TABLE lxw1234_es_user_tags </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cookieid </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">area </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">gendercode STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">birthday STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">jobtitle STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">familystatuscode STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">haschildrencode STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">media_view_tags </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">order_click_tags STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">search_egine_tags STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">interest </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">string</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">STORED BY </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;org.elasticsearch.hadoop.hive.EsStorageHandler&#39;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">TBLPROPERTIES</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.nodes&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;172.16.212.17:9200,172.16.212.102:9200&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.index.auto.create&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;true&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.resource&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;lxw1234/user_tags&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.mapping.id&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;cookieid&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;es.mapping.names&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;area:area,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">gendercode:gendercode,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">birthday:birthday,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">jobtitle:jobtitle,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">familystatuscode:familystatuscode,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">haschildrencode:haschildrencode,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">media_view_tags:media_view_tags,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">order_click_tags:order_click_tags,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">search_egine_tags:search_egine_tags,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">interest:interest&#39;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">);</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">这里要注意下</span>：如果是往_id中插入数据，需要设置’es.mapping.id’ = ‘cookieid’参数，表示Hive中的cookieid字段对应到ES中的_id，而es.mapping.names中不需要再映射，这点和读取时候的配置不一样。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">关闭Hive推测执行,执行INSERT：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">SET hive</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mapred</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">reduce</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">tasks</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">speculative</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">execution </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">SET mapreduce</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">speculative </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">SET mapreduce</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">reduce</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">speculative </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">INSERT overwrite TABLE lxw1234_es_user_tags </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">SELECT cookieid</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">area</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">gendercode</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">birthday</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">jobtitle</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">familystatuscode</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">haschildrencode</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">media_view_tags</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">order_click_tags</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">search_egine_tags</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">interest </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">FROM source_table</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">注意：如果ES集群规模小，而source_table数据量特别大、Map任务数太多的时候，会引发错误：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Caused</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">by</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">elasticsearch</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">hadoop</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">rest</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">EsHadoopInvalidRequest</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">FOUND unrecoverable error </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">172.16</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">212.17</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">9200</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> returned </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Too</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Many</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Requests</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">429</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> rejected </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">execution of org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">elasticsearch</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">action</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">support</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">replication</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">TransportReplicationAction$PrimaryPhase$1@b6fa90f</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ON </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">EsThreadPoolExecutor</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">bulk</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> queue capacity </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">50</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">elasticsearch</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">common</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">util</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">concurrent</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">EsThreadPoolExecutor@22e73289</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Running</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> pool size </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">32</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> active threads </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">32</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> queued tasks </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">52</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> completed tasks </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">12505</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]];</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Bailing</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">out</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">..</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">原因是Map任务数太多，并发发送至ES的请求数过多。<br/>这个和ES集群规模以及bulk参数设置有关，目前还没弄明白。<br/>减少source_table数据量（即减少Map任务数）之后，没有出现这个错误。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">执行完成后，在ES中查询lxw1234/user_tags的数据：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">curl </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">XGET http</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//172.16.212.17:9200/lxw1234/user_tags/_search?pretty -d &#39;</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;query&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;match&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;area&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;成都&quot;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1211-14.jpg\" alt=\"elasticsearch\" width=\"752\" height=\"470\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">数据已经写入到ElasticSearch中。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"><span style=\"color: rgb(255, 0, 255);\">总结</span></h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">使用Hive将数据添加到ElasticSearch中还是非常实用的，因为我们的数据都是在HDFS上，通过Hive可以查询的。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">另外，通过Hive可以查询ES数据，并在其上做复杂的统计与分析，但性能一般，比不上使用ES原生API，亦或是还没有掌握使用技巧，后面继续研究。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">相关阅读：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><a title=\"\" href=\"http://lxw1234.com/archives/2015/12/582.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2015/12/582.htm\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">ElasticSearch集群安装配置</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><a title=\"\" href=\"https://www.elastic.co/guide/en/elasticsearch/hadoop/current/hive.html#hive\" target=\"_blank\" data-original-title=\"https://www.elastic.co/guide/en/elasticsearch/hadoop/current/hive.html#hive\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">ElasticSearch与Hive整合官方文档</a></p><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2015/12/585.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">使用Hive读写ElasticSearch中的数据</a></p><p><br/></p>,', '7', '', null, '1', 'ElasticSearc', 'e7844046-16e4-4a96-adaa-d78dc6a4ff4e.jpg');
INSERT INTO `t_blog` VALUES ('149', '使用ElasticSearch作为大数据平台的实时OLAP框架', '一直想找一个用于大数据平台实时OLAP（甚至是实时计算）的框架，之前调研的Druid（druid.io）太过复杂，整个Druid由5、6个服务组成，而且加载数据也不太方便，性能一般，亦或是我还不太会用它。后来发现使用ElasticSearch就可以满足海量数据实时OLAP的需求。ElasticSearch相信', '2017-01-03 18:34:19', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">一直想找一个用于大数据平台实时OLAP（甚至是实时计算）的框架，之前调研的Druid（druid.io）太过复杂，整个Druid由5、6个服务组成，而且加载数据也不太方便，性能一般，亦或是我还不太会用它。后来发现使用ElasticSearch就可以满足海量数据实时OLAP的需求。<br/>ElasticSearch相信大家都很熟悉了，它在搜索领域已经有了举足轻重的地位，而且也支持越来越多的聚合统计功能，还和YARN、Hadoop、Hive、Spark、Pig、Flume等大数据框架兼容的越来越好，比如：可以将ElasticSearch跑在YARN上，还可以在Hive中建立外部表映射到ElasticSearch的Index中，直接在Hive中执行INSERT语句，将数据加载进ElasticSearch。<br/>所谓OLAP，其实就是从事实表中统计任意组合维度的指标，也就是过滤、分组、聚合，其中，聚合除了一般的SUM、COUNT、AVG、MAX、MIN等，还有一个重要的COUNT(DISTINCT)，看上去这些操作在SQL中是非常简单的统计，但在海量数据、低延迟的要求下，并不是那么容易做的。<br/>ElasticSearch本来就是做实时搜索的，过滤自然不是问题，现在也支持各种聚合以及Pipeline aggregations（相当于SQL子查询的功能），而且ElasticSearch的安装部署也非常简单，一个节点只有一个服务进程，关于安装配置可参考：<a title=\"\" href=\"http://lxw1234.com/archives/2015/12/582.htm\" target=\"_blank\" data-original-title=\"http://lxw1234.com/archives/2015/12/582.htm\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">http://lxw1234.com/archives/2015/12/582.htm</a><br/>本文以两个业务场景的例子，看一下ElasticSearch是如何满足我们的需求的。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">例子1：网站流量报告</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在我们的报表平台有这样一张报表，用于查看每个网站每天的流量指标：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-2.jpg\" alt=\"elasticsearch\" width=\"601\" height=\"514\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">其中，维度有：天、小时、网站，指标有：<strong>PV</strong><strong>、UV</strong><strong>、访问次数、跳出率、平均停留时间、回访率等。另外，</strong>还有一张报表是地域报告，维度多了省份和城市，指标一样。目前的做法是将可选的维度组合及对应的指标先在Hive中分析好，再将结果同步至MySQL，供报表展现。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">真正意义上的OLAP做法，我是这样做的：在Hive分析好一张最细粒度为visit_id（session_id）的事实表，字段及数据如下：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-4.jpg\" alt=\"elasticsearch\" width=\"1338\" height=\"282\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">然后将这张事实表的数据加载到ElasticSearch中的logs2/sitelog1211中。查看数据：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">curl </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">XGET </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;http://localhost:9200/logs2/sitelog1211/_search?pretty&#39;</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;took&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1015</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;timed_out&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;successful&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;failed&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">3356328</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;max_score&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_index&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;logs2&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_type&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;sitelog1211&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_id&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;AVGkoWowd8ibEMoyOhve&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_score&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_source&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:{</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;cookieid&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;8F97E07300BC7655F6945A&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;siteid&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;633&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_id&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;feaa25e6-3208-4801-b7ed-6fa45f11ff42&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;pv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;is_return_cookie&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;is_bounce_visit&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_stay_times&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">34</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_view_page_cnt&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;region&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;浙江&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;city&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;绍兴&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">……</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">该天事实表中总记录数为<strong>3356328</strong>。<br/>接着使用下面的查询，完成了上图中网站ID为1127，日期为2015-12-11的流量报告：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">curl </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">XGET </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;http://localhost:9200/logs2/sitelog1211/_search?search_type=count&amp;q=siteid:1127&amp;pretty&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">d </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">{</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;&quot;size&quot;: 0,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;&quot;aggs&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;pv&quot; : {&quot;sum&quot; : { &quot;field&quot; : &quot;pv&quot; } },</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;uv&quot; : {&quot;cardinality&quot; : {&quot;field&quot; : &quot;cookieid&quot; ,&quot;precision_threshold&quot;: 40000}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;return_uv&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;filter&quot; : {&quot;term&quot; : {&quot;is_return_cookie&quot; : 1}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;aggs&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;total_return_uv&quot; : {&quot;cardinality&quot; : {&quot;field&quot; : &quot;cookieid&quot; ,&quot;precision_threshold&quot;: 40000}}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;visits&quot; : {&quot;cardinality&quot; : {&quot;field&quot; : &quot;visit_id&quot; ,&quot;precision_threshold&quot;: 40000}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;total_stay_times&quot; : {&quot;sum&quot; : { &quot;field&quot; : &quot;visit_stay_times&quot; }},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;bounce_visits&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;filter&quot; : {&quot;term&quot; : {&quot;is_bounce_visit&quot; : 1}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;aggs&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;total_bounce_visits&quot; : {&quot;cardinality&quot; : {&quot;field&quot; : &quot;visit_id&quot; ,&quot;precision_threshold&quot;: 40000}}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">}&#39;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">基本上1~2秒就可以返回结果：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;took&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1887</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;timed_out&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;successful&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;failed&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5888</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;max_score&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;aggregations&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5859</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5889</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;return_uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">122</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_return_uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">119</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;bounce_visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5177</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_bounce_visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5177</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;pv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10820.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_stay_times&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">262810.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">接着是地域报告中维度为省份的指标统计，查询语句为：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">curl </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">XGET </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;http://localhost:9200/logs2/sitelog1211/_search?search_type=count&amp;q=siteid:1127&amp;pretty&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">d </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">{</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;&quot;size&quot;: 0,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;&quot;aggs&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &quot;area_count&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;terms&quot; : {&quot;field&quot; : &quot;region&quot;,&quot;order&quot; : { &quot;pv&quot; : &quot;desc&quot; }},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;aggs&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;pv&quot; : {&quot;sum&quot; : { &quot;field&quot; : &quot;pv&quot; } },</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;uv&quot; : {&quot;cardinality&quot; : {&quot;field&quot; : &quot;cookieid&quot; ,&quot;precision_threshold&quot;: 40000}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;return_uv&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;filter&quot; : {&quot;term&quot; : {&quot;is_return_cookie&quot; : 1}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;aggs&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;total_return_uv&quot; : {&quot;cardinality&quot; : {&quot;field&quot; : &quot;cookieid&quot; ,&quot;precision_threshold&quot;: 40000}}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;visits&quot; : {&quot;cardinality&quot; : {&quot;field&quot; : &quot;visit_id&quot; ,&quot;precision_threshold&quot;: 40000}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;total_stay_times&quot; : {&quot;sum&quot; : { &quot;field&quot; : &quot;visit_stay_times&quot; }},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;bounce_visits&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;filter&quot; : {&quot;term&quot; : {&quot;is_bounce_visit&quot; : 1}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;aggs&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;total_bounce_visits&quot; : {&quot;cardinality&quot; : {&quot;field&quot; : &quot;visit_id&quot; ,&quot;precision_threshold&quot;: 40000}}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; }</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">}&#39;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">因为要根据省份分组，比之前的查询慢一点，但也是秒级返回：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;took&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">4349</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;timed_out&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;successful&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;failed&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5888</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;max_score&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;aggregations&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;area_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count_error_upper_bound&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;sum_other_doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2456</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;buckets&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;key&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;北京&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">573</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">568</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">573</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;return_uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">9</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_return_uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">8</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;bounce_visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">499</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_bounce_visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">499</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;pv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">986.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_stay_times&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">24849.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;key&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;山东&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">368</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">366</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">368</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;return_uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">9</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_return_uv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">9</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;bounce_visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">288</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_bounce_visits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">288</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;pv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">956.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total_stay_times&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;value&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">30266.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">……</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">这里需要说明一下，在ElasticSearch中，对于去重计数（COUNT DISTINCT）是基于计数估计（<strong>Cardinality</strong>），因此如果去重记录数比较大（超过40000），便可能会有误差，误差范围是0~2%。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">例子2：用户标签的搜索统计</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">有一张数据表，存储了每个用户ID对应的标签，同样加载到ElasticSearch中，数据格式如下：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">curl </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">XGET </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;http://localhost:9200/lxw1234/user_tags/_search?&amp;pretty&#39;</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;took&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">220</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;timed_out&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;successful&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;failed&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">820165</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;max_score&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_index&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;lxw1234&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_type&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;user_tags&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_id&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;222222222222222&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_score&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_source&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:{</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;sex&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;女性&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;age&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;27到30岁&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;income&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;5000到10000&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;edu&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;本科&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;appcategory&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;娱乐类|1.0&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;interest&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;onlinetime&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;9:00~12:00|1.0&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;os&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;IOS|1.0&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hobby&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;游戏|28.57,房产|8.57,服饰鞋帽箱包|28.57,互联网/电子产品|5.71,家居|8.57,餐饮美食|5.71,体育运动|14.29&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;region&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;河南省&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">......</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">每个用户都有性别、年龄、收入、教育程度、兴趣、地域等标签，其中使用_id来存储用户ID，也是主键。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">查询1：<strong>SELECT count(1) FROM user_tags WHERE sex = ‘女性’ AND appcategory LIKE ‘%游戏类%&#39;;</strong></p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">curl </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">XGET </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;http://localhost:9200/lxw1234/user_tags/_count?pretty&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">d </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">{</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;&quot;filter&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;and&quot; : [</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&quot;term&quot; : {&quot;sex&quot; : &quot;女性&quot;}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&quot;match_phrase&quot; : {&quot;appcategory&quot; : &quot;游戏类&quot;}}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;]</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">}&#39;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">返回结果：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">106977</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;successful&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;failed&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">查询2：先筛选，再分组统计：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">SELECT edu</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">COUNT</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> AS cnt </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">FROM user_tags </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">WHERE sex </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;女性&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">AND appcategory LIKE </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;%游戏类%&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">GROUP BY edu </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ORDER BY cnt DESC </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">limit </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">查询语句：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">curl </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">XGET </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;http://localhost:9200/lxw1234/user_tags/_search?search_type=count&amp;pretty&#39;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">d </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&#39;</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">{</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;&quot;filter&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;and&quot; : [</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&quot;term&quot; : {&quot;sex&quot; : &quot;女性&quot;}},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{&quot;match_phrase&quot; : {&quot;appcategory&quot; : &quot;游戏类&quot;}}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;]</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;},</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;&quot;aggs&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;&quot;edu_count&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;terms&quot; : {</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;field&quot; : &quot;edu&quot;,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;size&quot; : 10</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp; &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\"> &nbsp; &nbsp;}</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">}&#39;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">返回结果：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;took&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">479</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;timed_out&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">false</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;_shards&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;successful&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;failed&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;total&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">106977</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;max_score&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;hits&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;aggregations&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;edu_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count_error_upper_bound&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;sum_other_doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;buckets&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;key&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;本科&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">802670</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;key&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;硕士研究生&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">16032</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;key&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;专科&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1433</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;key&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;博士研究生&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">25</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;key&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;初中及以下&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">4</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">},</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;key&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;中专/高中&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;doc_count&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">从目前的调研结果来看，ElasticSearch没有让人失望，部署简单，数据加载方便，聚合功能完备，查询速度快，目前完全可以满足我们的实时搜索、统计和OLAP需求，甚至可以作为NOSQL来使用，接下来再做更深入的测试。<br/>另外，还有一个开源的SQL for ElasticSearch的框架Crate（crate.io），是在ElasticSearch之上封装了SQL接口，使得查询统计更加方便，不过SQL支持的功能有限，使用的ElasticSearch版本较低，后面试用一下再看。</p><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2015/12/588.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(217, 83, 79); text-decoration: none;\">使用ElasticSearch作为大数据平台的实时OLAP框架</a></p><p><br/></p>,', '7', '', null, '1', '美团技术', '3622b81a-e60b-4d0a-85db-94b8e30a938d.jpg');
INSERT INTO `t_blog` VALUES ('150', 'SQL for ElasticSearch–Crate.io安装配置和体验', '之前介绍过ElasticSearch，它部署简单，搜索聚合功能强大，而且和其他大数据框架整合起来使用，有一点比较不方便，就是查询都需要通过JSON作为请求Body来提交查询，请求响应也是JSON，作为习惯使用SQL的我，迫不及待的试用了一下Crate（crate.io），它是在ElasticSearch之上封', '2017-01-03 18:34:55', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">之前介绍过ElasticSearch，它部署简单，搜索聚合功能强大，而且和其他大数据框架整合起来使用，有一点比较不方便，就是查询都需要通过JSON作为请求Body来提交查询，请求响应也是JSON，作为习惯使用SQL的我，迫不及待的试用了一下Crate（crate.io），它是在ElasticSearch之上封装了SQL接口，用户可以通过SQL语句来完成搜索和统计，支持的SQL语法还蛮多的，很想MySQL。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">本文记录一下Crate的安装配置(两个节点的Crate集群)和简单使用。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">下载和安装Crate</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">可以从<a title=\"\" href=\"https://cdn.crate.io/downloads/releases/nightly/\" target=\"_blank\" data-original-title=\"https://cdn.crate.io/downloads/releases/nightly/\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">https://cdn.crate.io/downloads/releases/nightly/</a>下载crate的最新版本。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">下载后解压到指定目录即可。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">配置Crate</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Crate的配置和ElasticSearch非常类似，以两个节点的Crate集群为例。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">cd $CRATE_HOME/conf</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">编辑crate.yml，修改以下参数：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cluster</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">name</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> lxw1234_crate</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">node</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">name</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> crate_node_17</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">index</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">number_of_replicas</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">path</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">conf</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">/home/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">liuxiaowen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">crate</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.54</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">config</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">path</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">data</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">/home/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">liuxiaowen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">crate</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.54</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">data</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">path</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">work</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">/home/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">liuxiaowen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">crate</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.54</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">tmp</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">path</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">logs</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">/home/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">liuxiaowen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">crate</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.54</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">logs</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">path</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">plugins</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">/home/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">liuxiaowen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">crate</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.54</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">plugins</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">network</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">bind_host</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">172.16</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">212.17</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">network</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">publish_host</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">172.16</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">212.17</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">network</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">host</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">172.16</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">212.17</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">gateway</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">recover_after_nodes</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">discovery</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">zen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">minimum_master_nodes</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">gateway</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">expected_nodes</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">discovery</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">zen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ping</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">timeout</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10s</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">discovery</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">zen</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">fd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ping_interval</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10s</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">编辑$CRATE_HOME/bin/crate.in.sh，配置节点使用的内存，根据机器自身内存而定，最大内存一般不要超过物理内存的50%;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">CRATE_MIN_MEM=8g</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">CRATE_MAX_MEM=16g</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">配置JAVA_HOME，我这里使用了jdk1.8.0_65</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">启动Crate</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在两个节点上，<br/>cd $CRATE_HOME/bin<br/>执行./crate -d 在后台启动Crate,之后可以在配置的path.logs目录下，看到以${ cluster.name }.log命名的日志。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">使用Crate命令行</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">类似于其他数据库，Crate提供了一个命令行来供用户执行SQL查询。<br/>cd $CRATE_HOME/bin<br/>执行./crash进入命令行；</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-5.jpg\" alt=\"crate\" width=\"1040\" height=\"516\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在Crate命令行使用\\c 172.16.212.17:4200连接到Crate；</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">创建表</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在Crate命令行使用下面的SQL语句创建表：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">CREATE TABLE sitelog </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cookieid STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">siteid STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">visit_id STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">pv LONG</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">is_return_cookie INTEGER</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">is_bounce_visit INTEGER</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">visit_stay_times INTEGER</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">visit_view_page_cnt INTEGER</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">region STRING</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">city STRING</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">);</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cr</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> show tables</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+------------+</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">|</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> table_name </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">|</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+------------+</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">|</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> sitelog &nbsp; &nbsp;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">|</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+------------+</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">SHOW </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> row </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">in</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">set</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.019</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> sec</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cr</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li></ol></pre><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">从外部批量加载数据</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">crate提供了一个COPY命令，用于从外部文本文件加载数据到表中，但只支持JSON格式的文本，比如：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">liuxiaowen@dev sitelog</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">$ head sitelog_000005_0_9</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">json </span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;cookieid&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;DE9C68B401DBE5566A9676&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;siteid&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;633&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_id&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;805cdab5-8361-4134-9bbe-7c54771d4dc8&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;pv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;is_return_cookie&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;is_bounce_visit&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_stay_times&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_view_page_cnt&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;region&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;江苏&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;city&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;徐州&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;cookieid&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;DE9C68B40422A9566A68F2&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;siteid&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;633&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_id&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;7f844323-e0c0-48b4-bc1b-69055ac3c308&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;pv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;is_return_cookie&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;is_bounce_visit&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_stay_times&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_view_page_cnt&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;region&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;江苏&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;city&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;徐州&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;cookieid&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;DE9C68B4066B7F566A6F36&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;siteid&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;633&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_id&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;045c3a13-41bf-45c4-93ce-7725a00ada5f&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;pv&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;is_return_cookie&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;is_bounce_visit&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_stay_times&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;visit_view_page_cnt&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;region&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;江苏&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;city&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;徐州&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">JSON对象中的k需要和表的字段名称相同。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在Crate命令行使用COPY命令加载数据：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-1.jpg\" alt=\"crate\" width=\"1182\" height=\"388\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">加载的速度还是非常快的。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">SQL查询</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">可以从Crate官网上查看支持的SQL语法：<a title=\"\" href=\"https://crate.io/docs/reference/sql/dql.html\" target=\"_blank\" data-original-title=\"https://crate.io/docs/reference/sql/dql.html\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">https://crate.io/docs/reference/sql/dql.html</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-6.jpg\" alt=\"crate\" width=\"1009\" height=\"572\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-7.jpg\" alt=\"crate\" width=\"972\" height=\"390\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">值得关注的是，Crate在做COUNT DISTINCT查询的时候，查出来的是真实去重后的数，没有误差，但查询响应时间要慢一些，有待研究。</p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">Crate的监控界面</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Crate提供了一个比较炫的监控界面，非常有用，Crate集群启动后，在浏览器输入：http://172.16.212.102:4200/admin/ 进入监控界面：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">OverView页面：集群整体健康及负载状况。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-8.jpg\" alt=\"crate\" width=\"1901\" height=\"737\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Tables页面：Crate中所有Table及Schema的情况。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-9.jpg\" alt=\"crate\" width=\"1901\" height=\"619\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Cluster页面：Crate集群的节点列表及每个节点的健康状况。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/1216-10.jpg\" alt=\"crate\" width=\"1898\" height=\"706\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><h2 style=\"margin: 20px -20px 20px -24px; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px 10px; border-left: 4px solid rgb(0, 166, 124); background-color: rgb(251, 251, 251); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">Crate的不足</h2><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">目前只是简单安装试用了一下，发现了几点不足：</p><ol style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>不支持子查询；</li><li>不支持诸如CASE WHEN、IF ELSE的逻辑判断语法，特别是在聚合函数中；</li><li>内置的ElasticSearch版本太低；</li><li>没有和其他大数据组件的整合。</li></ol><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">但它的查询性能还是很不错的，关键是SQL方便啊。</p><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2015/12/590.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">SQL for ElasticSearch–Crate.io安装配置和体验</a></p><p><a data-action=\"ding\" data-id=\"590\" id=\"Addlike\" class=\"action\" data-original-title=\"\" title=\"\" style=\"color: rgb(255, 255, 255); transition: 500ms cubic-bezier(0.445, 0.05, 0.55, 0.95); position: relative; padding: 8px 40px; display: inline-block; border: 1px solid rgb(214, 214, 214); border-radius: 2px; background-color: rgb(247, 133, 133); margin: 0px 3px;\"><span class=\"fa fa-heart-o\" style=\"display: inline-block; font-family: FontAwesome; line-height: 1; -webkit-font-smoothing: antialiased; width: 16px; font-size: 1.1em; margin-right: 5px;\"></span></a></p><p><br/></p>,', '1', '', null, '1', '美团技术', '723bbfbe-410d-44ef-9896-02fa745a0315.jpg');
INSERT INTO `t_blog` VALUES ('151', '一个母婴电子商务网站贝贝网的大数据平台及机器学习实践', '贝贝网的主要产品是垂直的母婴类，母婴相对一般的电子商务网站有一些特点：第一个特点是商品周期短，在母婴网站上的商品，在线的时间不会超过5-7天，第二个是用户需求的变化快，在母婴行业，可能是用户的需求变化最快的领域，比如是用户处在怀孕当中，关心的是孕妈的一些问题，几个月以后，随着宝宝的落地，就会准备一些纸尿裤和奶', '2017-01-03 18:37:43', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">贝贝网的主要产品是垂直的母婴类，母婴相对一般的电子商务网站有一些特点：第一个特点是商品周期短，在母婴网站上的商品，在线的时间不会超过5-7天，第二个是用户需求的变化快，在母婴行业，可能是用户的需求变化最快的领域，比如是用户处在怀孕当中，关心的是孕妈的一些问题，几个月以后，随着宝宝的落地，就会准备一些纸尿裤和奶粉，而且随着宝宝的长大，纸尿裤和奶粉的类型也会变化。第三个是移动化，一般有90%的成交是来自移动端的。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-1.jpg\" alt=\"\" width=\"750\" height=\"581\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">手机端的屏幕非常的小，可以给客户的信息非常的有限，所以需要我们帮助用户找他有兴趣的东西，大数据平台既要为网站的活动提供大数据的支撑，还需要实现个性化的推荐，搜集用户的行为，全面的了解用户的购物意图，推荐用户感兴趣的商品。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-3.jpg\" alt=\"\" width=\"753\" height=\"583\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">下图是整个大数据平台的架构图，最下面的是我们的数据收集，后面会有介绍。计算层包括了离线计算和实时计算，以后搜索引擎，在算法层有协同过滤，分类产生一些用品的商品特征，以后排序的模型。在业务层的话，业务的类型是丰富多彩的，我们会融入一些运营的规则进行调整，包括一些个性化的调整和推荐，以及营销。</p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">华丽的分割线：您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-4.jpg\" alt=\"\" width=\"749\" height=\"573\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-5.jpg\" alt=\"\" width=\"750\" height=\"573\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">BI层的应用有面向运营的，面向商家的，会涉及用户的浏览日志，在PC上的一些行为，比如是用户浏览了一些什么商品，点击了一些什么商品，对数据的消费也有二种方式，一种是实时消费，一种是离线消费，这种方式会在每天的凌晨进行一次统计，会有一天的延时，比如是 今天上线的活动，可能明天才知道这个活动的效果，因为我们研发了一套实时的数据研发系统，因此任何需要实时消费的数据报告，只要订阅就可以了。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">分布式的调度是整个大数据平台的核心，在大数据平台处于一个指挥的作用，比如是任务管理，任务监控和任务日志，我们研发了一套分布式的系统，里面有二种角色。Master主要是负责任务的管理，任务的分配，任务的执行，任何的Master挂掉，都不会影响我们系统的运营。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-6.jpg\" alt=\"\" width=\"749\" height=\"578\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">在整个大数据平台上，很大一部分是推荐的产品，第一类是个性化的排序，个性化排序的特点是在侯选级的情况下，根据用户的不同的购物的用途，为用户做个性化的排序，用户到达我们网站的时候，我们会推荐所有在线的品牌特卖，比如是一天500个，根据用户的购物的意图，做个性化的数据。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">第二个是关联推荐，比如是推荐和这个商品相似的商品，购买的商品可以推荐搭配的商品。第三个是个性化推荐，给指定的用户推荐他感兴趣的商品，比如是在用户的资料的页面，我们会直接给用户推荐他感兴趣的商品。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-9.jpg\" alt=\"\" width=\"756\" height=\"583\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"></h5><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">华丽的分割线：您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">除了这三种推荐的形式，还包括通过个性化的短信，个性化的推送，引导用户到我们的平台，我们会给用户推荐感兴趣品牌，我们会对商品进行个性化的排序，还会有相似商品的推荐，用户交易的环节，还会推荐和这个商品搭配的商品，包括周期购买预测等。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-10.jpg\" alt=\"\" width=\"756\" height=\"590\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">为什么会有这种推荐，可以从二个方面来看，一个是我们网站本身是一个轻搜索重推荐的模式，在我们的网站上搜索的功能是非常的弱化的，我们最近的上线的搜索 框也很不明显，这是一个推荐商品非常重要的渠道，从推荐的本身来说，也可以看到它的三个方面价值，提升用户的购物的体验。帮助商家找到感兴趣的用户，也可 以提高他的销售额，对整个平台来说，只有服务好用户和商家，才能得到一个比较好的持续的发展。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-11.jpg\" alt=\"\" width=\"752\" height=\"570\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">推荐这么的重要，最重要的是用户画像，这是我们的吉祥物，我们会对它进行二个部分，一个是静态的画像，比如是性别，年龄，宝宝的年龄性别，以及一些动 态的画像，比如品牌，购买时间，购买渠道等等，我们的这个行业里面，最重要的一个特征就是用户的性别年龄，不同的宝宝的性别年龄会影响到购物的偏好，很大 的一部分的妈妈是填写了一些用户的信息的，比如说宝宝的年龄是0-1岁，可以利用这个用户的行为特征，比如是它的浏览次数，收藏次数，有了这样子的模型， 就可以来填写宝宝年龄的预测。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-12.jpg\" alt=\"\" width=\"748\" height=\"592\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-13.jpg\" alt=\"\" width=\"749\" height=\"591\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"></h5><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">华丽的分割线：您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">第二套很重要的标签是购物偏好，主要是提到的一些动态标签，比如是品牌内部等等，我们会统计用户在我们的平台上的一些行为，根据这些行为的成本给予不同的 选中，包括浏览电极，启发式的做法非常的简单，也是非常的容易理解，这些参数不好确定，这个时间的衰减应该做如何的衰减的程度。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-14.jpg\" alt=\"\" width=\"749\" height=\"580\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">我们现在正在用机器学习的方式做用户的偏好预测，把用户当前的购物的偏好做特征来进行一些购物的偏好。有一个很重要的推荐的类型是个性化的排序，当用户到 了我们的PC首页的时候，会展现每天500个在线的专场，用户很难通过翻页的方式来浏览所有的品牌，我们有一套规则的算法，模型有非常多的特征，可以考虑 非常多的因子，规则往往是只有几个关键的因子，比如是会把GMA往前排，规则是靠经验和参数的。已经形成了一个优化的问题。还有模型很方便加入用户的特征 做个性化的特征。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-15.jpg\" alt=\"\" width=\"745\" height=\"555\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">第一档就提升了6%，至于怎么样做，这个就是一个学习的流程，主要是离线和在线二个部分，在线系统搜集到了排序以后，也会根据用户的ID和品牌的ID，构建同样的特征和模型进行组合，就可以得到用户对每一个平台的分数。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-16.jpg\" alt=\"\" width=\"750\" height=\"556\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">那特征是这里面最重要的一部分，有属性特征，主要是各种维度的特性，还有是统计特征，还有偏好特征，偏好特征是我们做个性化推荐的最基本的推荐，这个是和 用户有关系的，比如是用户的画像。在这里面，我们做了很多的尝试，刚开始的时候，有点击率，点击率很好做，我们发现点击率的提升和我们的GMA的提升不是 完全一致的。我们用过分类和排序的算法，排序的算法会好一点，非线型的模型也会更有优势一点。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-17.jpg\" alt=\"\" width=\"748\" height=\"568\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-18.jpg\" alt=\"\" width=\"756\" height=\"575\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"></h5><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">华丽的分割线：您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">我们到了电商网站的时候，肯定遇到过这样子的产品，你看过的商品可能是感兴趣的商品，在这个行业里面有很规律的算法，但是在母婴特卖里面，有它自己的特 点，它的商品每一行是代表了一个用户，每一列是代表的一个商品，第一周上线的商品第三周上线的时候，另外二个已经是下线了，第二个特点是在线的商品比较 少，就会把举证压缩，这样子的话，对这个举证会变的不这么的稀疏。第三个是这个行业的特点，比如是宝宝的性别，宝宝的年龄是否是一致的，如果是一致的话， 那是否有一个持续性。1-3岁的话，还可以，但是如果是对一个1-3岁的商品，可能就不大合适的。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-19.jpg\" alt=\"\" width=\"751\" height=\"562\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">我们根据这些特点做了一些改进，比如是我们有做时间，热门打压。相同的协同过滤的算法可能会不在线，一种是机遇标题和描述的相似度，还会加上运营的规则，是否匹配，有一些地方可以推荐同品牌，有一些可能推荐其他的品牌。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-20.jpg\" alt=\"\" width=\"753\" height=\"582\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">虽然我们刚才说的对算法进行了改进，单一的算法总是有一些局限性，因此我们现在正在做的是把多个算法结合在一起，比如是浏览的CF，购买的CF加上用户的特征，进行一个个性化的重新排序，我们正在研究这么一套新的流程。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-21.jpg\" alt=\"\" width=\"757\" height=\"585\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">我们第一档上线以后，可以看到在各个资源上都取得了很大的提高了，部分的资源上甚至是提高了500%的提升，我相信我们新的个性化的排列上线以后，会有更大的提升。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-22.jpg\" alt=\"\" width=\"742\" height=\"582\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果你购买了一个商品，再推荐一个相似的商品，这是不合理的推荐，用户购买了一个商品以后，比如是够末了C1以后，购买C2是一个简单的记数，比如是买奶嘴的用户里面，39%的用户会买奶瓶，买了纹胸的用户里面，有20%的会买内裤，买了纸尿裤的用户会有30%买湿巾。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-23.jpg\" alt=\"\" width=\"750\" height=\"576\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">还有个性化的推荐的工作，但是还不完全一样，主要是有一个很严重的痛点，经常会收到一些短信的推送，可能是一些打扰的工作，但是在我们的平台上，我们的运 营也遇到了同样的痛点，他们想搞活动的时候，他们也很难确定目标用户是什么，所以他们确定了精准营销的框架，能够帮助运营，选出他的目标用户，在适合的时 间发送感兴趣的商品。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-24.jpg\" alt=\"\" width=\"753\" height=\"583\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\"></h5><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">华丽的分割线：您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">我们首先是会对用户打上标签，通过投放的请求，动态生成Hive，我们会返回目标用户以及时间。我们在用户的拉新方面也做了一部分的工作，我们平台的业务 的发展非常的迅速，我们吸引了一部分的用户以后，我们希望把用户转化成购买用户，一个是根据用户注册时候的静态画像，对用户做个性化的配置，整体的转化率 是10%以上。虽然我们在这一方面已经做了一些尝试，但是未来还有更多的可以探索的地方，一个是在数据的方面，刚才提到的个性的推荐是，首先是会更加的全 面和精准的把画像做的更准确。第二个是时效性的方面，需要快速的捕捉客户的需求。在模型方面，我们也会投入更多的精力，通过在线的方式更新我们的模型，应 用的话，双十一也快到了，我们希望我们的个性化的算法也可以发挥一些作用，以及在商家端做一些尝试，帮商家做一些预测等等。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-25.jpg\" alt=\"\" width=\"751\" height=\"577\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-26.jpg\" alt=\"\" width=\"753\" height=\"581\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160217-27.jpg\" alt=\"\" width=\"748\" height=\"583\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">本文根据网上的资料整理而来。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">注：在此向PPT原作者@贝贝网周黄玲致歉，之前因为广告避嫌，将贝贝网相关的文字及LOGO去掉，深表歉意。</p><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><h5 style=\"margin: 5px 0px; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; text-indent: 30px; white-space: normal;\">华丽的分割线：您可以关注&nbsp;<a title=\"\" href=\"http://lxw1234.com/\" target=\"_blank\" data-original-title=\"lxw的大数据田地\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;，或者&nbsp;<a title=\"\" href=\"http://163.fm/YHfRFnF\" target=\"_blank\" data-original-title=\"http://163.fm/YHfRFnF\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">加入邮件列表</a>&nbsp;，随时接收博客更新的通知邮件。</h5><hr style=\"margin: 20px 0px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); border-bottom-style: solid; border-bottom-color: rgb(255, 255, 255); color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"/><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2016/02/609.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">一个母婴电子商务网站贝贝网的大数据平台及机器学习实践</a></p><p><br/></p>,', '6', '', null, '1', '大数据平台', 'b6cc69d1-62d3-489f-af07-a31cbdfca12e.jpg');
INSERT INTO `t_blog` VALUES ('152', 'Spark MLlib实现的广告点击预测–Gradient-Boosted Trees', '本文尝试使用Spark提供的机器学习算法 Gradient-Boosted Trees来预测一个用户是否会点击广告。训练和测试数据使用Kaggle Avazu CTR 比赛的样例数据，下载地址：https://www.kaggle.com/c/avazu-ctr-prediction/data数据格式如下：包', '2017-01-03 18:38:23', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">本文尝试使用Spark提供的机器学习算法 Gradient-Boosted Trees来预测一个用户是否会点击广告。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">训练和测试数据使用Kaggle Avazu CTR 比赛的样例数据，下载地址：<a title=\"\" href=\"https://www.kaggle.com/c/avazu-ctr-prediction/data\" target=\"_blank\" data-original-title=\"https://www.kaggle.com/c/avazu-ctr-prediction/data\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">https://www.kaggle.com/c/avazu-ctr-prediction/data</a></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">数据格式如下：</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><img class=\"aligncenter\" src=\"http://7xipth.com1.z0.glb.clouddn.com/20160114-1.jpg\" alt=\"spark\" width=\"1868\" height=\"292\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px; margin: 0px auto; display: block; text-align: center;\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">包含24个字段：</p><ul style=\"padding: 0px; margin: 8px 0px 8px 30px; list-style: none; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\"><li>1-id: ad identifier</li><li>2-click: 0/1 for non-click/click</li><li>3-hour: format is YYMMDDHH, so&nbsp;14091123 means 23:00 on Sept. 11, 2014 UTC.</li><li>4-C1 —&nbsp;anonymized categorical variable</li><li>5-banner_pos</li><li>6-site_id</li><li>7-site_domain</li><li>8-site_category</li><li>9-app_id</li><li>10-app_domain</li><li>11-app_category</li><li>12-device_id</li><li>13-device_ip</li><li>14-device_model</li><li>15-device_type</li><li>16-device_conn_type</li><li>17~24—C14-C21 — anonymized categorical variables</li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">其中5到15列为分类特征，16~24列为数值型特征。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">Spark代码如下：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">package</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> com</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">lxw1234</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">test</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> scala</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">collection</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">mutable</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">ListBuffer</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> scala</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">collection</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">mutable</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">ArrayBuffer</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">SparkContext</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">SparkContext</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">_</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">SparkConf</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">RDD</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mllib</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">classification</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">NaiveBayes</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mllib</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">regression</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">LabeledPoint</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mllib</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">linalg</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Vectors</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mllib</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">tree</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">GradientBoostedTrees</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mllib</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">tree</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">configuration</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">BoostingStrategy</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">import</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mllib</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">tree</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">model</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">GradientBoostedTreesModel</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"com\" style=\"color: rgb(102, 102, 102);\">/**</span></li><li><span class=\"com\" style=\"color: rgb(102, 102, 102);\">&nbsp;* By: lxw</span></li><li><span class=\"com\" style=\"color: rgb(102, 102, 102);\">&nbsp;* http://lxw1234.com</span></li><li><span class=\"com\" style=\"color: rgb(102, 102, 102);\">&nbsp;*/</span></li><li><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">object</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">CtrPredict</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//input (1fbe01fe,f3845767,28905ebd,ecad2386,7801e8d9)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//output ((0:1fbe01fe),(1:f3845767),(2:28905ebd),(3:ecad2386),(4:7801e8d9))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">def</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> parseCatFeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">catfeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">String</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">])</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">List</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[(</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Int</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">String</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)]</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catfeatureList </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">ListBuffer</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[(</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Int</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">String</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)]()</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">for</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">i </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&lt;-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">until</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catfeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">length</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">){</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catfeatureList </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> i </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catfeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">i</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">).</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toString</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catfeatureList</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toList</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">def</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> main</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">args</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">String</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">])</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val conf </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">SparkConf</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">().</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">setMaster</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;yarn-client&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; val sc </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">SparkContext</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">conf</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ctrRDD </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> sc</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">textFile</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;/tmp/lxw1234/sample.txt&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">);</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;Total records : &quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ctrRDD</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">count</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//将整个数据集80%作为训练数据，20%作为测试数据集</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_test_rdd </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ctrRDD</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">randomSplit</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.8</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> seed </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">37L</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_raw_rdd </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_test_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> test_raw_rdd </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_test_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;Train records : &quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_raw_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">count</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;Test records : &quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> test_raw_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">count</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//cache train, test</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; train_raw_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">()</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test_raw_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">()</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_rdd </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_raw_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> line </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> line</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">split</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;,&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//key为id和是否点击广告</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catkey </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;::&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//第6列到第15列为分类特征，需要One-Hot-Encoding</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catfeatures </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">slice</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">14</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//第16列到24列为数值特征，直接使用</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numericalfeatures </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">slice</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">15</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">size</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">catkey</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catfeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numericalfeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//拿一条出来看看</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; train_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">take</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//scala&gt; train_rdd.take(1)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//res6: Array[(String, Array[String], Array[String])] = Array((1000009418151094273::0,Array(1fbe01fe, </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; f3845767, 28905ebd, ecad2386, 7801e8d9, 07d7df22, a99f214a, ddd2926e, 44956a24),</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Array(2, 15706, 320, 50, 1722, 0, 35, -1)))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//将分类特征先做特征ID映射</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_cat_rdd&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> parseCatFeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">x</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">_2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; train_cat_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">take</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//scala&gt; train_cat_rdd.take(1)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//res12: Array[List[(Int, String)]] = Array(List((0,1fbe01fe), (1,f3845767), (2,28905ebd), </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3,ecad2386), (4,7801e8d9), (5,07d7df22), (6,a99f214a), (7,ddd2926e), (8,44956a24)))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//将train_cat_rdd中的(特征ID：特征)去重，并进行编号</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> oheMap </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_cat_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">flatMap</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">x </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> x</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">).</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">distinct</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">().</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">zipWithIndex</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">().</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">collectAsMap</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">()</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//oheMap: scala.collection.Map[(Int, String),Long] = Map((7,608511e9) -&gt; 31527, (7,b2d8fbed) -&gt; 42207, </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//&nbsp; (7,1d3e2fdb) -&gt; 52791</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;Number of features&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">oheMap</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">size</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//create OHE for train data</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ohe_train_rdd </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">case</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">key</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cateorical_features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numerical_features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cat_features_indexed </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> parseCatFeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cateorical_features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cat_feature_ohe </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">ArrayBuffer</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Double</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">for</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">k </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&lt;-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cat_features_indexed</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">if</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">oheMap contains k</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">){</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cat_feature_ohe </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">oheMap </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">get</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">k</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)).</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">get</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toDouble</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">else</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cat_feature_ohe </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numerical_features_dbl&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numerical_features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> x1 </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">if</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">x</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toInt </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;0&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">else</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> x</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toDouble</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> features </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cat_feature_ohe</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toArray </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">++</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; numerical_features_dbl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">LabeledPoint</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">key</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">split</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;::&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">).</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toInt</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Vectors</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">dense</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">))</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; ohe_train_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">take</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//res15: Array[org.apache.spark.mllib.regression.LabeledPoint] = </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//&nbsp; Array((0.0,[43127.0,50023.0,57445.0,13542.0,31092.0,14800.0,23414.0,54121.0,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//&nbsp;&nbsp;&nbsp;&nbsp; 17554.0,2.0,15706.0,320.0,50.0,1722.0,0.0,35.0,0.0]))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//训练模型</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//val boostingStrategy = BoostingStrategy.defaultParams(&quot;Regression&quot;)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; val boostingStrategy </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">BoostingStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">defaultParams</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;Classification&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; boostingStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">numIterations </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">100</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; boostingStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">treeStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">numClasses </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; boostingStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">treeStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">maxDepth </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; boostingStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">treeStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">categoricalFeaturesInfo </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Int</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Int</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]()</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; val model </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">GradientBoostedTrees</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">train</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ohe_train_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> boostingStrategy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//保存模型</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; model</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">save</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">sc</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;/tmp/myGradientBoostingClassificationModel&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//加载模型</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; val sameModel </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">GradientBoostedTreesModel</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">load</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">sc</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;/tmp/myGradientBoostingClassificationModel&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//将测试数据集做OHE</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> test_rdd </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> test_raw_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> line </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> line</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">split</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;,&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catkey </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;::&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catfeatures </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">slice</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">14</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numericalfeatures </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">slice</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">15</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> tokens</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">size</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">catkey</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> catfeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numericalfeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ohe_test_rdd </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> test_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">case</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">key</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cateorical_features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numerical_features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cat_features_indexed </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> parseCatFeatures</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">cateorical_features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cat_feature_ohe </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">ArrayBuffer</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Double</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">for</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">k </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&lt;-</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cat_features_indexed</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">if</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">oheMap contains k</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">){</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cat_feature_ohe </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">oheMap </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">get</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">k</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)).</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">get</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toDouble</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">else</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cat_feature_ohe </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.0</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numerical_features_dbl&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> numerical_features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">x </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> x1 </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">if</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">x</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toInt </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&lt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;0&quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">else</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> x</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toDouble</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> features </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> cat_feature_ohe</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toArray </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">++</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; numerical_features_dbl&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">LabeledPoint</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">key</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">split</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;::&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">).</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">toInt</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Vectors</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">dense</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">))</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//验证测试数据集</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> b </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ohe_test_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">{</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> s </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> model</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">predict</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">y</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">s</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">y</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">label</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">y</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; b</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">take</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">).</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">foreach</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//预测准确率</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> predictions </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ohe_test_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">lp </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> sameModel</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">predict</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">lp</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">features</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; predictions</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">take</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">10</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">).</span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">foreach</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> predictionAndLabel </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> predictions</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">zip</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ohe_test_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">map</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">_</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">label</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"kwd\" style=\"color: rgb(249, 38, 89);\">var</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> accuracy </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1.0</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">*</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> predictionAndLabel</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">filter</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">x </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> x</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">_1 </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">==</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> x</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">_2 </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">).</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">count</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">/</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ohe_test_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">count</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;GBTR accuracy &quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> accuracy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=\"com\" style=\"color: rgb(102, 102, 102);\">//GBTR accuracy 0.8227084119200302</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;&nbsp; &nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp; </span></li><li><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">}</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">其中，训练数据集： Train records : 104558， 测试数据集：Test records : 26510</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">程序主要输出：</p><pre class=\"prettyprint linenums\" style=\"padding: 8px; color: rgb(68, 68, 68); border-radius: 2px; margin-top: 0px; margin-bottom: 20px; font-size: 14px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(248, 248, 248); border: 1px solid rgb(238, 238, 238); overflow: hidden; box-shadow: rgb(238, 238, 238) 40px 0px 0px inset, rgb(51, 183, 150) 42px 0px 0px inset; text-indent: 30px; font-family: Consolas, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace !important;\"><ol class=\"linenums\" style=\"padding: 0px; margin: 0px 0px 0px 40px; list-style: none;\"><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">scala</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">take</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">res23</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[(</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">String</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">String</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">],</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">String</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">])]</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">((</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1000009418151094273</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">::</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">		</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1fbe01fe</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> f3845767</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">28905ebd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ecad2386</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">7801e8d9</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">07d7df22</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> a99f214a</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ddd2926e</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">44956a24</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">		</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">15706</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">320</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">50</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1722</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">35</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">-</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">scala</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> train_cat_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">take</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">res24</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">List</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[(</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Int</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">String</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)]]</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">List</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">((</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1fbe01fe</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">f3845767</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">28905ebd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">		</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">3</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ecad2386</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">4</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">7801e8d9</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">5</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">07d7df22</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">6</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">a99f214a</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">7</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">ddd2926e</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">),</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">8</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">44956a24</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">scala</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;Number of features&quot;</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Number</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> of features</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">scala</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">oheMap</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">size</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">57606</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">scala</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> ohe_train_rdd</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">take</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">res27</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">:</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">[</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">org</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">apache</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">spark</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">mllib</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">regression</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">.</span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">LabeledPoint</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">=</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"typ\" style=\"color: rgb(0, 170, 0);\">Array</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">		</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,[</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">11602.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">22813.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">11497.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">16828.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">30657.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">23893.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">13182.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">31723.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">39722.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">2.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">15706.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">320.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">50.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">1722.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">35.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">,</span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.0</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">]))</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">scala</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">&gt;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> println</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">(</span><span class=\"str\" style=\"color: rgb(194, 143, 91);\">&quot;GBTR accuracy &quot;</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> </span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">+</span><span class=\"pln\" style=\"color: rgb(0, 0, 255);\"> accuracy</span><span class=\"pun\" style=\"color: rgb(0, 170, 0);\">)</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">GBTR accuracy </span><span class=\"lit\" style=\"color: rgb(204, 0, 204);\">0.8227084119200302</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li><li><span class=\"pln\" style=\"color: rgb(0, 0, 255);\">&nbsp;</span></li></ol></pre><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">如果觉得本博客对您有帮助，请&nbsp;<a href=\"http://lxw1234.com/pay-blog\" target=\"_blank\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">赞助作者</a>&nbsp;。</p><p style=\"margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 26px; text-indent: 30px; white-space: normal;\">转载请注明：<a href=\"http://lxw1234.com/\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">lxw的大数据田地</a>&nbsp;»&nbsp;<a href=\"http://lxw1234.com/archives/2016/01/595.htm\" data-original-title=\"\" title=\"\" style=\"color: rgb(0, 166, 124); text-decoration: none;\">Spark MLlib实现的广告点击预测–Gradient-Boosted Trees</a></p><p><br/></p>,', '6', '', null, '1', '大数据平台', null);

-- ----------------------------
-- Table structure for t_blogger
-- ----------------------------
DROP TABLE IF EXISTS `t_blogger`;
CREATE TABLE `t_blogger` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userName` varchar(50) DEFAULT NULL,
  `password` varchar(100) DEFAULT NULL,
  `profile` text,
  `nickName` varchar(50) DEFAULT NULL,
  `sign` varchar(100) DEFAULT NULL,
  `imageName` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blogger
-- ----------------------------
INSERT INTO `t_blogger` VALUES ('3', 'zhuan', '4ea43719b3aaf171beb332da787a47d3', null, '转', null, null);
INSERT INTO `t_blogger` VALUES ('4', 'shen', 'e6449d1935ae1119a02d6d1f83158587', null, '神', null, null);

-- ----------------------------
-- Table structure for t_blogtype
-- ----------------------------
DROP TABLE IF EXISTS `t_blogtype`;
CREATE TABLE `t_blogtype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `typeName` varchar(30) DEFAULT NULL,
  `orderNo` int(11) DEFAULT NULL,
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记(0活null 正常 1,删除)',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blogtype
-- ----------------------------
INSERT INTO `t_blogtype` VALUES ('1', '美团技术', '2', null, null, null, null, null, '0');
INSERT INTO `t_blogtype` VALUES ('2', 'springboot', '1', null, null, null, null, null, '0');
INSERT INTO `t_blogtype` VALUES ('3', 'zscat', '3', null, null, null, null, null, '0');
INSERT INTO `t_blogtype` VALUES ('4', 'zscat视频', null, null, null, null, null, null, '0');
INSERT INTO `t_blogtype` VALUES ('5', '写给大数据开发初学者的话', '5', null, null, null, null, null, '0');
INSERT INTO `t_blogtype` VALUES ('6', '大数据平台', '6', null, null, null, null, null, '0');
INSERT INTO `t_blogtype` VALUES ('7', 'ElasticSearc', '7', null, null, null, null, null, '0');

-- ----------------------------
-- Table structure for t_blog_template
-- ----------------------------
DROP TABLE IF EXISTS `t_blog_template`;
CREATE TABLE `t_blog_template` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL COMMENT '标题',
  `summary` text COMMENT '摘要',
  `releaseDate` datetime DEFAULT NULL COMMENT '发布时间',
  `clickHit` int(11) DEFAULT NULL,
  `replyHit` int(11) DEFAULT NULL,
  `content` longtext,
  `keyWord` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=122 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blog_template
-- ----------------------------
INSERT INTO `t_blog_template` VALUES ('118', '女生博客模板', '女生博客模板', '2016-10-28 10:47:50', '0', '0', '<p>女生博客模板</p><p><img src=\"/pig/static/ueditor/jsp/upload1/20161028/36981477622865805.jpg\" title=\"04.jpg\"/></p>,', 'front/blog/indexns');
INSERT INTO `t_blog_template` VALUES ('119', '个人博客', '', '2016-10-28 11:02:13', '0', '0', '<p><img src=\"/pig/static/ueditor/jsp/upload1/20161028/361477623729685.png\" title=\"QQ图片20161028110015.png\"/></p>,', 'front/blog/indexone');
INSERT INTO `t_blog_template` VALUES ('120', '草根博客', '', '2016-10-28 11:02:58', '0', '0', '<p><img src=\"/pig/static/ueditor/jsp/upload1/20161028/48901477623774727.png\" title=\"QQ图片20161028110044.png\"/></p>,', 'front/blog/indexc');
INSERT INTO `t_blog_template` VALUES ('121', 'java1234', '', '2016-10-28 11:05:32', '0', '0', '<p><img src=\"/pig/static/ueditor/jsp/upload1/20161028/61671477623928764.png\" title=\"QQ图片20161028110509.png\"/></p>,', 'front/blog/index');

-- ----------------------------
-- Table structure for t_cart
-- ----------------------------
DROP TABLE IF EXISTS `t_cart`;
CREATE TABLE `t_cart` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `goodsid` bigint(20) DEFAULT NULL,
  `userid` bigint(20) DEFAULT NULL,
  `goodsname` varchar(255) DEFAULT NULL,
  `price` varchar(10) DEFAULT NULL,
  `count` int(11) DEFAULT NULL COMMENT '1',
  `img` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_cart
-- ----------------------------
INSERT INTO `t_cart` VALUES ('7', '34', '4', 'zscat商城', '0.01', '4', 'shop.png');

-- ----------------------------
-- Table structure for t_comment
-- ----------------------------
DROP TABLE IF EXISTS `t_comment`;
CREATE TABLE `t_comment` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `userIp` varchar(50) DEFAULT NULL,
  `blogId` int(11) DEFAULT NULL,
  `content` varchar(1000) DEFAULT NULL,
  `commentDate` datetime DEFAULT NULL,
  `state` int(11) DEFAULT NULL,
  `blogger_id` bigint(20) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `blogger` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_comment
-- ----------------------------
INSERT INTO `t_comment` VALUES ('1', '111', '85', '鬼才知道这些鬼东西', '2016-11-01 12:49:39', '1', '3', 'Storm 的可靠性保证测试', null);
INSERT INTO `t_comment` VALUES ('2', null, '86', 'http://localhost:8081/pig/front/blog/shequDetail/85  测试', '2016-11-03 13:15:22', null, '4', '分布式会话跟踪系统架构设计与实践', null);
INSERT INTO `t_comment` VALUES ('3', '0:0:0:0:0:0:0:1', '122', '我来回得zacat3', '2016-11-03 13:56:10', null, '3', 'zscat3', '转');

-- ----------------------------
-- Table structure for t_demo
-- ----------------------------
DROP TABLE IF EXISTS `t_demo`;
CREATE TABLE `t_demo` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL COMMENT '姓名',
  `password` varchar(255) DEFAULT NULL COMMENT '密码',
  `addtime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_demo
-- ----------------------------
INSERT INTO `t_demo` VALUES ('46', '9795ed18-02c4-4624-a0c7-1619cfd3f692.jpg', '111', '2016-11-01 00:00:00');
INSERT INTO `t_demo` VALUES ('47', '56e9113e-42e0-4262-a841-a98c3725adc0.jpg', 'xxxx', '2016-11-16 00:00:00');
INSERT INTO `t_demo` VALUES ('48', 'fbb4679e-6df1-4893-abd4-66b2dabbe45e.jpg', '111', '2016-11-02 00:00:00');
INSERT INTO `t_demo` VALUES ('49', '3a5f3d94-00cb-46d6-a11b-dac7fdf6bfd6.png', '22', '2016-11-09 00:00:00');
INSERT INTO `t_demo` VALUES ('50', '7bb95469-9649-4bf9-b58d-d34a4a4cd3bb.jpg', '11', '2016-11-01 00:00:00');
INSERT INTO `t_demo` VALUES ('51', '90748514-bda3-4017-a60d-8f5968b91f73.jpg', '111', '2016-11-02 00:00:00');

-- ----------------------------
-- Table structure for t_floor
-- ----------------------------
DROP TABLE IF EXISTS `t_floor`;
CREATE TABLE `t_floor` (
  `id` bigint(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '类型id',
  `name` varchar(100) DEFAULT NULL COMMENT '类型名称',
  `typesort` int(3) DEFAULT '0' COMMENT '商品类型排序',
  `parent_id` bigint(10) DEFAULT NULL COMMENT '父id',
  `parent_ids` varchar(255) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `del_flag` varchar(255) DEFAULT NULL,
  `advimg` varchar(255) DEFAULT NULL,
  `advurl` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='商品类型表';

-- ----------------------------
-- Records of t_floor
-- ----------------------------
INSERT INTO `t_floor` VALUES ('1', 'zsCat系列', '0', '0', null, '每一个zscat项目都有一个故事,每一个zscat项目都有一个故事', null, 'main.png', '');
INSERT INTO `t_floor` VALUES ('3', 'demo', '3', null, null, 'demole,demole', null, 'sys.png', null);

-- ----------------------------
-- Table structure for t_floor_product
-- ----------------------------
DROP TABLE IF EXISTS `t_floor_product`;
CREATE TABLE `t_floor_product` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `productid` bigint(20) DEFAULT NULL,
  `floorid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_floor_product
-- ----------------------------
INSERT INTO `t_floor_product` VALUES ('15', '34', '1');
INSERT INTO `t_floor_product` VALUES ('16', '33', '1');
INSERT INTO `t_floor_product` VALUES ('17', '36', '1');
INSERT INTO `t_floor_product` VALUES ('18', '35', '1');
INSERT INTO `t_floor_product` VALUES ('19', '37', '1');
INSERT INTO `t_floor_product` VALUES ('20', '38', '1');
INSERT INTO `t_floor_product` VALUES ('27', '39', '3');
INSERT INTO `t_floor_product` VALUES ('28', '40', '3');
INSERT INTO `t_floor_product` VALUES ('29', '41', '3');
INSERT INTO `t_floor_product` VALUES ('30', '43', '3');
INSERT INTO `t_floor_product` VALUES ('31', '44', '3');
INSERT INTO `t_floor_product` VALUES ('32', '35', '3');

-- ----------------------------
-- Table structure for t_goodsorder
-- ----------------------------
DROP TABLE IF EXISTS `t_goodsorder`;
CREATE TABLE `t_goodsorder` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `goodsid` bigint(20) DEFAULT NULL,
  `orderid` bigint(20) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_goodsorder
-- ----------------------------
INSERT INTO `t_goodsorder` VALUES ('3', '36', '4', null);
INSERT INTO `t_goodsorder` VALUES ('4', '35', '7', null);
INSERT INTO `t_goodsorder` VALUES ('5', '36', '8', null);
INSERT INTO `t_goodsorder` VALUES ('6', '34', '9', null);
INSERT INTO `t_goodsorder` VALUES ('7', '34', '10', null);
INSERT INTO `t_goodsorder` VALUES ('8', '33', '11', null);
INSERT INTO `t_goodsorder` VALUES ('9', '34', '12', null);
INSERT INTO `t_goodsorder` VALUES ('10', '34', '13', null);
INSERT INTO `t_goodsorder` VALUES ('11', '34', '14', null);
INSERT INTO `t_goodsorder` VALUES ('12', '34', '15', null);
INSERT INTO `t_goodsorder` VALUES ('13', '36', '16', null);
INSERT INTO `t_goodsorder` VALUES ('14', '36', '17', null);
INSERT INTO `t_goodsorder` VALUES ('15', '36', '18', null);
INSERT INTO `t_goodsorder` VALUES ('16', '34', '19', null);
INSERT INTO `t_goodsorder` VALUES ('17', '35', '20', null);
INSERT INTO `t_goodsorder` VALUES ('18', '34', '22', null);
INSERT INTO `t_goodsorder` VALUES ('19', '36', '23', null);
INSERT INTO `t_goodsorder` VALUES ('20', '36', '24', null);
INSERT INTO `t_goodsorder` VALUES ('21', '36', '25', null);
INSERT INTO `t_goodsorder` VALUES ('22', '35', '26', null);
INSERT INTO `t_goodsorder` VALUES ('23', '36', '27', null);
INSERT INTO `t_goodsorder` VALUES ('24', '36', '28', null);
INSERT INTO `t_goodsorder` VALUES ('25', '33', '31', null);
INSERT INTO `t_goodsorder` VALUES ('26', '34', '32', null);
INSERT INTO `t_goodsorder` VALUES ('27', '33', '33', null);
INSERT INTO `t_goodsorder` VALUES ('28', '36', '33', null);
INSERT INTO `t_goodsorder` VALUES ('29', '35', '37', null);
INSERT INTO `t_goodsorder` VALUES ('30', '36', '38', null);
INSERT INTO `t_goodsorder` VALUES ('31', '34', '39', null);
INSERT INTO `t_goodsorder` VALUES ('32', '35', '40', null);
INSERT INTO `t_goodsorder` VALUES ('33', '35', '41', null);
INSERT INTO `t_goodsorder` VALUES ('34', '35', '42', null);
INSERT INTO `t_goodsorder` VALUES ('35', '34', '43', null);
INSERT INTO `t_goodsorder` VALUES ('36', '34', '44', null);
INSERT INTO `t_goodsorder` VALUES ('37', '36', '45', null);
INSERT INTO `t_goodsorder` VALUES ('38', '35', '46', null);
INSERT INTO `t_goodsorder` VALUES ('39', '36', '47', null);
INSERT INTO `t_goodsorder` VALUES ('40', '33', '48', null);
INSERT INTO `t_goodsorder` VALUES ('41', '33', '49', null);
INSERT INTO `t_goodsorder` VALUES ('42', '35', '50', null);
INSERT INTO `t_goodsorder` VALUES ('43', '33', '51', null);
INSERT INTO `t_goodsorder` VALUES ('44', '33', '52', null);
INSERT INTO `t_goodsorder` VALUES ('45', '33', '53', null);
INSERT INTO `t_goodsorder` VALUES ('46', '35', '54', null);
INSERT INTO `t_goodsorder` VALUES ('47', '33', '56', null);
INSERT INTO `t_goodsorder` VALUES ('48', '33', '57', null);
INSERT INTO `t_goodsorder` VALUES ('49', '34', '58', null);
INSERT INTO `t_goodsorder` VALUES ('50', '36', null, null);

-- ----------------------------
-- Table structure for t_link
-- ----------------------------
DROP TABLE IF EXISTS `t_link`;
CREATE TABLE `t_link` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `linkName` varchar(100) DEFAULT NULL,
  `linkUrl` varchar(200) DEFAULT NULL,
  `orderNo` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_link
-- ----------------------------
INSERT INTO `t_link` VALUES ('1', 'zscat官网', 'http://www.zscat.top/gw/index', '1');
INSERT INTO `t_link` VALUES ('2', 'zscat商城', 'http://shop.zscat.top/index.htm', '2');
INSERT INTO `t_link` VALUES ('3', 'zscat内容管理系统', 'http://www.zscat.top/cms/index', '3');
INSERT INTO `t_link` VALUES ('4', 'zscat后台', 'http://www.zscat.top/index', '4');
INSERT INTO `t_link` VALUES ('5', '免费logo在线制作', 'http://www.uugai.com/', '5');
INSERT INTO `t_link` VALUES ('6', 'test', 'test6', '6');

-- ----------------------------
-- Table structure for t_order
-- ----------------------------
DROP TABLE IF EXISTS `t_order`;
CREATE TABLE `t_order` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `totalprice` decimal(10,0) DEFAULT NULL COMMENT '总价格',
  `totalcount` int(255) DEFAULT NULL COMMENT '总个数',
  `ordersn` varchar(255) DEFAULT NULL,
  `status` int(255) DEFAULT '1' COMMENT '1',
  `userid` bigint(11) DEFAULT NULL,
  `createdate` datetime DEFAULT NULL,
  `paymentid` bigint(11) DEFAULT NULL,
  `addressid` bigint(20) DEFAULT NULL,
  `username` varchar(255) DEFAULT NULL,
  `usercontent` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_order
-- ----------------------------
INSERT INTO `t_order` VALUES ('53', '22', '1', 'e5f621e2-e601-46bd-a', '1', '4', '2017-01-13 23:30:50', '2', '1', 'shen', '1');
INSERT INTO `t_order` VALUES ('54', '22', '1', '83d8be8c-f12f-4f92-a2db', '2', '4', '2017-01-13 23:35:25', '1', '1', 'shen', '1');
INSERT INTO `t_order` VALUES ('56', '11', '1', '03122304-63f0-42f7-', '3', '4', '2017-01-13 23:39:13', '2', '1', 'shen', '1');
INSERT INTO `t_order` VALUES ('57', '2', '1', '58d1fec3-3709-4c8a-ad02', '4', '4', '2017-01-13 23:51:41', '2', '1', 'shen', '1');
INSERT INTO `t_order` VALUES ('58', '0', '1', 'd373e88a-b338-4c7d-8453', '9', '4', '2017-01-14 10:04:27', '1', '1', 'shen', '1');
INSERT INTO `t_order` VALUES ('60', '0', '1', 'df8f27e0-d32b-445a-', '2', '4', '2017-01-14 11:20:23', '1', '1', 'shen', '1');

-- ----------------------------
-- Table structure for t_order_log
-- ----------------------------
DROP TABLE IF EXISTS `t_order_log`;
CREATE TABLE `t_order_log` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '订单处理历史索引id',
  `order_id` bigint(11) NOT NULL COMMENT '订单id',
  `order_state` varchar(20) NOT NULL COMMENT '订单状态信息',
  `change_state` varchar(20) DEFAULT NULL COMMENT '下一步订单状态信息',
  `state_info` varchar(20) NOT NULL COMMENT '订单状态描述',
  `create_time` bigint(13) DEFAULT NULL COMMENT '处理时间',
  `operator` varchar(30) NOT NULL COMMENT '操作人',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=845 DEFAULT CHARSET=utf8 COMMENT='订单处理历史表';

-- ----------------------------
-- Records of t_order_log
-- ----------------------------
INSERT INTO `t_order_log` VALUES ('788', '4', '1', null, '提交订单', '1483803815006', 'shen');
INSERT INTO `t_order_log` VALUES ('791', '7', '1', null, '提交订单', '1483804513480', 'shen');
INSERT INTO `t_order_log` VALUES ('792', '8', '1', null, '提交订单', '1483804583773', 'shen');
INSERT INTO `t_order_log` VALUES ('793', '9', '1', null, '提交订单', '1483804663554', 'shen');
INSERT INTO `t_order_log` VALUES ('794', '10', '1', null, '提交订单', '1483804723362', 'shen');
INSERT INTO `t_order_log` VALUES ('795', '11', '1', null, '提交订单', '1483805141748', 'shen');
INSERT INTO `t_order_log` VALUES ('796', '12', '1', null, '提交订单', '1483805551294', 'shen');
INSERT INTO `t_order_log` VALUES ('797', '13', '1', null, '提交订单', '1483805853705', 'shen');
INSERT INTO `t_order_log` VALUES ('798', '14', '1', null, '提交订单', '1483806080232', 'shen');
INSERT INTO `t_order_log` VALUES ('799', '15', '1', null, '提交订单', '1483806374875', 'shen');
INSERT INTO `t_order_log` VALUES ('800', '16', '1', null, '提交订单', '1484046509585', 'shen');
INSERT INTO `t_order_log` VALUES ('801', '17', '1', null, '提交订单', '1484046722016', 'shen');
INSERT INTO `t_order_log` VALUES ('802', '18', '1', null, '提交订单', '1484046800575', 'shen');
INSERT INTO `t_order_log` VALUES ('803', '19', '1', null, '提交订单', '1484048320003', 'shen');
INSERT INTO `t_order_log` VALUES ('804', '20', '1', null, '提交订单', '1484049300946', 'shen');
INSERT INTO `t_order_log` VALUES ('806', '22', '1', null, '提交订单', '1484049828047', 'shen');
INSERT INTO `t_order_log` VALUES ('807', '23', '1', null, '提交订单', '1484049913398', 'shen');
INSERT INTO `t_order_log` VALUES ('808', '24', '1', null, '提交订单', '1484050043597', 'shen');
INSERT INTO `t_order_log` VALUES ('809', '25', '1', null, '提交订单', '1484050307631', 'shen');
INSERT INTO `t_order_log` VALUES ('810', '26', '1', null, '提交订单', '1484051296588', 'shen');
INSERT INTO `t_order_log` VALUES ('811', '27', '1', null, '提交订单', '1484051412266', 'shen');
INSERT INTO `t_order_log` VALUES ('812', '28', '1', null, '提交订单', '1484051500695', 'shen');
INSERT INTO `t_order_log` VALUES ('815', '31', '1', null, '提交订单', '1484051703553', 'shen');
INSERT INTO `t_order_log` VALUES ('816', '32', '1', null, '提交订单', '1484051802388', 'shen');
INSERT INTO `t_order_log` VALUES ('817', '33', '1', null, '提交订单', '1484315540959', 'shen');
INSERT INTO `t_order_log` VALUES ('821', '37', '1', null, '提交订单', '1484315841469', 'shen');
INSERT INTO `t_order_log` VALUES ('822', '38', '1', null, '提交订单', '1484316076083', 'shen');
INSERT INTO `t_order_log` VALUES ('823', '39', '1', null, '提交订单', '1484316264682', 'shen');
INSERT INTO `t_order_log` VALUES ('824', '40', '1', null, '提交订单', '1484316439996', 'shen');
INSERT INTO `t_order_log` VALUES ('825', '41', '1', null, '提交订单', '1484316625413', 'shen');
INSERT INTO `t_order_log` VALUES ('826', '42', '1', null, '提交订单', '1484317764499', 'shen');
INSERT INTO `t_order_log` VALUES ('827', '43', '1', null, '提交订单', '1484318223678', 'shen');
INSERT INTO `t_order_log` VALUES ('828', '44', '1', null, '提交订单', '1484318491706', 'shen');
INSERT INTO `t_order_log` VALUES ('829', '45', '1', null, '提交订单', '1484318617169', 'shen');
INSERT INTO `t_order_log` VALUES ('830', '46', '1', null, '提交订单', '1484318928232', 'shen');
INSERT INTO `t_order_log` VALUES ('831', '47', '1', null, '提交订单', '1484320745393', 'shen');
INSERT INTO `t_order_log` VALUES ('832', '48', '1', null, '提交订单', '1484320800712', 'shen');
INSERT INTO `t_order_log` VALUES ('833', '49', '1', null, '提交订单', '1484320847486', 'shen');
INSERT INTO `t_order_log` VALUES ('834', '50', '1', null, '提交订单', '1484321146204', 'shen');
INSERT INTO `t_order_log` VALUES ('835', '51', '1', null, '提交订单', '1484321308134', 'shen');
INSERT INTO `t_order_log` VALUES ('836', '52', '1', null, '提交订单', '1484321360583', 'shen');
INSERT INTO `t_order_log` VALUES ('837', '53', '1', null, '提交订单', '1484321450966', 'shen');
INSERT INTO `t_order_log` VALUES ('838', '54', '1', null, '提交订单', '1484321725223', 'shen');
INSERT INTO `t_order_log` VALUES ('840', '56', '1', null, '提交订单', '1484321953147', 'shen');
INSERT INTO `t_order_log` VALUES ('841', '57', '1', null, '提交订单', '1484322701812', 'shen');
INSERT INTO `t_order_log` VALUES ('842', '58', '1', null, '提交订单', '1484359467424', 'shen');
INSERT INTO `t_order_log` VALUES ('844', '60', '1', null, '提交订单', '1484364023272', 'shen');

-- ----------------------------
-- Table structure for t_product
-- ----------------------------
DROP TABLE IF EXISTS `t_product`;
CREATE TABLE `t_product` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `tag` varchar(255) DEFAULT NULL,
  `remark` longtext,
  `summary` longtext,
  `clickHit` int(255) DEFAULT '0' COMMENT '0',
  `typeid` bigint(255) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  `typename` varchar(255) DEFAULT NULL,
  `type` bigint(255) DEFAULT NULL,
  `orderby` varchar(255) DEFAULT NULL,
  `prices` varchar(255) DEFAULT NULL,
  `imgmore` varchar(1000) DEFAULT NULL,
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记(0活null 正常 1,删除)',
  `replyhit` int(11) DEFAULT '0' COMMENT '评价量',
  `sellhit` int(11) DEFAULT '0' COMMENT '销售量',
  `iscom` int(255) DEFAULT NULL COMMENT '1推荐，2不推荐',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=55 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_product
-- ----------------------------
INSERT INTO `t_product` VALUES ('33', 'zscat分布式框架', 'spring,springmvc ,通用mapper, dubbo,zookeep', '<p style=\"margin-top: 1.12em; margin-bottom: 1.12em; margin-left: 42pt; padding: 0px; text-indent: 21pt;\">开源分布式框架zsCat 559182393</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; margin-left: 42pt; padding: 0px; text-indent: 21pt;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2nOAEpXXXXXXOXFXXXXXXXXXX_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2MmkOpXXXXXcBXpXXXXXXXXXX_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2Qwi2oVXXXXcCXpXXXXXXXXXX_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2FLC5oVXXXXb.XpXXXXXXXXXX_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2WwzyoVXXXXblXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"314\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2R9LyoVXXXXbcXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"553\" height=\"415\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2crHzoVXXXXa0XXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"553\" height=\"290\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2nsu2oVXXXXcFXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"553\" height=\"232\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB283y3oVXXXXcAXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"281\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2hEndoVXXXXaeXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"317\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2hffmoVXXXXc3XXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"396\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2VF11oVXXXXcvXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"93\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2oSHboVXXXXaEXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"102\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2eEPXoVXXXXaYXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"554\" height=\"289\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2k7bxoVXXXXa.XXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1362\" height=\"582\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2SorfoVXXXXX0XpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"610\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2tYK6oVXXXXb2XpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"580\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB23U5ZoVXXXXcAXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"580\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2mDrnoVXXXXcFXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1361\" height=\"696\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2RfraoVXXXXarXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"699\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2qwjgoVXXXXX5XpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1360\" height=\"586\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2uvYloVXXXXXXXpXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1362\" height=\"582\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2wCvsoVXXXXbWXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"610\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2xd2noVXXXXcOXXXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1363\" height=\"592\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB27AWSoVXXXXX5XFXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1364\" height=\"580\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2dKiWoVXXXXXcXFXXXXXXXXXX_!!2541510480.png\" class=\"\" width=\"1356\" height=\"585\" style=\"border: 0px; vertical-align: top;\"/></p><h5 style=\"margin: 0px 0px 0px 10px; padding: 0px; font-size: 15px; height: 22px;\">邻家好货</h5><p><br/></p>,', '开源分布式框架zsCat 559182393邻家好货', '179', '11', 'zscat.png', '框架', '246', null, '50', 'https://img.alicdn.com/imgextra/i1/2541510480/TB2nOAEpXXXXXXOXFXXXXXXXXXX_!!2541510480.png,https://img.alicdn.com/imgextra/i1/2541510480/TB2MmkOpXXXXXcBXpXXXXXXXXXX_!!2541510480.png,https://img.alicdn.com/imgextra/i1/2541510480/TB2Qwi2oVXXXXcCXpXXXXXXXXXX_!!2541510480.png,', '2', '2016-12-23 12:07:18', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('34', 'zscat商城', 'mybatisplus ,ssm,dubbo', '<p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">qq &nbsp;951449465</p><p>dubbo 权限设计，spring，springmvc ，mybatis，beetl &nbsp;sso &nbsp;solr搜索引擎 &nbsp; &nbsp; &nbsp; &nbsp;演示地址 &nbsp;http://zscat.carp.mopaasapp.com/login http://shop.zscat&nbsp;</p><p>开源分布式框架zsCat 559182393</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; margin-left: 42pt; padding: 0px; text-indent: 21pt;\"><br/></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; margin-left: 42pt; padding: 0px; text-indent: 21pt;\">开源分布式框架zsCat 559182393</p><p>&nbsp;1.技术关键字&nbsp;如&nbsp;redis、dubbo&nbsp;等<br/>2.服务关键字&nbsp;如&nbsp;商品，商城，电商等<br/>3.关联关键字&nbsp;&nbsp;如分布式，购物网，外包，商城私活<br/>等&nbsp;</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-family: 宋体; font-size: 10.5pt;\">zsCat&nbsp;<span style=\"font-family:宋体\">多用户 多商家模式商城</span></span><span style=\"font-family: 宋体; font-size: 10.5pt;\"></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-family: 宋体; font-size: 10.5pt;\">java shiro Spring springmvc &nbsp;mybatis mybatis-plus &nbsp;redis rabbitmq</span><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\"><span style=\"font-family:宋体\">将服务提出来，预留</span></span><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\">dubbo&nbsp;<span style=\"font-family:宋体\">分布式服务结构</span></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\"><span style=\"font-family:宋体\"></span></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\"><span style=\"font-family:宋体\"></span></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-size: 10.5pt; line-height: 1.5; font-family: 宋体;\"><span style=\"font-family:宋体\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2CnxvXZwb61Bjy0FfXXXvlpXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB27jdzX_ga61BjSspiXXXUSXXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2GDtvXZwb61Bjy0FfXXXvlpXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB28X4yXZIa61Bjy0FiXXc1XpXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2x3JAXZga61Bjy1XaXXafzVXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2zHxxXZsX61Bjy1XdXXa0aFXa_!!2541510480.png\" class=\"\" width=\"222\" height=\"623\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2uzlyX_ga61BjSspfXXadSpXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2f3FAXZga61Bjy1XaXXafzVXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2QENyX4IX61BjSsplXXazrpXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2btdzX_gX61BjSspmXXaFcFXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2YwuqX4Ab61BjSZFBXXc9pFXa_!!2541510480.png\" class=\"\" width=\"1366\" height=\"768\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2TF8xX4oa61Bjy0FaXXcHwpXa_!!2541510480.png\" class=\"\" width=\"1366\" height=\"768\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2VUesX3Uc61BjSZFmXXbJHFXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2CAOrX4wb61BjSZFlXXbuoVXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2zUasX3Uc61BjSZFmXXbJHFXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2q01qXZkd61BjSZPhXXcb9VXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2mfurX9Zb61BjSZPfXXaU.pXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB27JapX37c61BjSZFKXXb6hFXa_!!2541510480.png\" class=\"\" width=\"683\" height=\"384\" style=\"border: 0px; vertical-align: top;\"/></span></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-family: 宋体; font-size: 10.5pt;\"></span></p><h5 style=\"margin: 0px 0px 0px 10px; padding: 0px; font-size: 15px; white-space: normal; widows: auto; background-color: rgb(255, 255, 255);\">看了该宝贝的人还看了</h5><ul style=\"margin: 0px; padding: 0px; list-style: none;\"><li></li></ul><p><br/></p>,', 'qq  951449465dubbo 权限设计，spring，springmvc ，mybatis，beetl  sso  solr搜索引擎        演示地址  http://zscat.carp.mopaasapp.com/login http://shop.zscat 开源分布式框架zsCat 55', '146', '11', 'shop.png', '框架', '238', null, '200', 'https://img.alicdn.com/imgextra/i1/2541510480/TB2CnxvXZwb61Bjy0FfXXXvlpXa_!!2541510480.png,https://img.alicdn.com/imgextra/i4/2541510480/TB27jdzX_ga61BjSspiXXXUSXXa_!!2541510480.png,https://img.alicdn.com/imgextra/i1/2541510480/TB2GDtvXZwb61Bjy0FfXXXvlpXa_!!2541510480.png,', '2', '2016-12-23 12:54:02', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('35', 'zsShop商城', 'spring,springmvc ,通用mapper, dubbo,zookeep', '<p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"color: rgb(108, 108, 108); font-size: 12px; line-height: 18px;\">spring，springmvc ，mybatis，通用mapping ，redis beetl &nbsp;</span><span style=\"line-height: 1.5;\">AmazeUI-2.4.2 &nbsp;jquery</span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"line-height: 1.5;\"></span>后台权限管理 精确到按钮级别 &nbsp;菜单配置 字典管理 机构管理 用户 &nbsp;角色管理 &nbsp;商品管理 &nbsp;类别管理</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">订单管理 &nbsp; 购物车 &nbsp;广告 &nbsp;文章管理等</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">前台 首页菜单 购物详情 &nbsp;个人中心</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">树形组件 &nbsp;下拉组件 &nbsp;选择树组件 等等</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"color: rgb(108, 108, 108); font-size: 12px; line-height: 18px;\"></span></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><br/></p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\">登录后 顶部显示后台管理 ，可以查看</p><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"font-size: 12px;\"><a target=\"_blank\" style=\"color: rgb(51, 102, 204); outline: 0px;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2tvhtbNmJ.eBjy0FhXXbBdFXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top; height: 600px; width: 600px; float: none; margin: 0px;\"/></a></span><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2541510480/TB2wkprbSuJ.eBjy0FgXXXBBXXa_!!2541510480.jpg\" style=\"border: 0px; vertical-align: top; height: 500px; width: 500px; float: none; margin: 0px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2QGpnbHeI.eBjSspkXXaXqVXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top; height: 500px; width: 500px; float: none; margin: 0px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2541510480/TB2eRlebHaI.eBjy1XdXXcoqXXa_!!2541510480.png\" style=\"border: 0px; vertical-align: top; height: 500px; width: 500px; float: none; margin: 0px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2T6FkbM1J.eBjy0FaXXaXeVXa_!!2541510480.png\" class=\"\" style=\"border: 0px; vertical-align: top; height: 500px; width: 500px; float: none; margin: 0px;\"/><img src=\"https://img.alicdn.com/imgextra/i3/2541510480/TB2iTtMbR9J.eBjy0FoXXXyvpXa_!!2541510480.png\" class=\"\" align=\"absmiddle\" width=\"1366\" height=\"768\" style=\"border: 0px; vertical-align: top;\"/><img src=\"https://img.alicdn.com/imgextra/i2/2541510480/TB2GfVubIeJ.eBjy0FiXXXqapXa_!!2541510480.jpg\" class=\"\" align=\"absmiddle\" width=\"1242\" height=\"2208\" style=\"border: 0px; vertical-align: top;\"/></p><h5 style=\"margin: 0px 0px 0px 10px; padding: 0px; font-size: 15px;\">买了该宝贝的人还买了</h5><p><br/></p>,', 'spring，springmvc ，mybatis，通用mapping ，redis beetl  AmazeUI-2.4.2  jquery后台权限管理 精确到按钮级别  菜单配置 字典管理 机构管理 用户  角色管理  商品管理  类别管理订单管理   购物车  广告  文章管理等前台 首页菜单 购物详情', '95', '10', 'zsshop.jpg', '框架', '238', null, '150', 'https://img.alicdn.com/imgextra/i3/2541510480/TB2tvhtbNmJ.eBjy0FhXXbBdFXa_!!2541510480.png,https://img.alicdn.com/imgextra/i4/2541510480/TB2wkprbSuJ.eBjy0FgXXXBBXXa_!!2541510480.jpg,https://img.alicdn.com/imgextra/i3/2541510480/TB2QGpnbHeI.eBjSspkXXaXqVXa_!!2541510480.png,', '2', '2016-12-23 12:58:40', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('36', 'zscatPlus', 'spring,springmvc ,通用mapper, dubbo,zookeep', '<p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469194786.png\" style=\"float:none;\" title=\"H.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469198359.png\" style=\"float:none;\" title=\"QQ图片20161012163538.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469195105.png\" style=\"float:none;\" title=\"QQ图片20161012163729.png\"/></p><p><br/></p>,', '', '94', '11', 'H.png', '框架', '247', null, '50', '/zsTrade/static/ueditor/jsp/upload1/20161223/1482469194786.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469198359.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469195105.png,', '2', '2016-12-23 12:59:55', '0', '0', '0', '1');
INSERT INTO `t_product` VALUES ('37', 'zscat社区', 'layui,ssm', '<p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481972.png\" style=\"float:none;\" title=\"blog.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481086.png\" style=\"float:none;\" title=\"QQ截图20161104134602.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469482244.png\" style=\"float:none;\" title=\"QQ截图20161104135156.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469487209.jpg\" style=\"float:none;\" title=\"04.jpg\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481047.png\" style=\"float:none;\" title=\"QQ图片20161028110015.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481495.png\" style=\"float:none;\" title=\"QQ图片20161028110044.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469480820.png\" style=\"float:none;\" title=\"QQ图片20161028111335.png\"/></p><p><br/></p>,', '', '20', '10', 'blog.png', '框架', '245', null, '20', '/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481972.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469481086.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469482244.png,', '2', '2017-01-24 13:04:44', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('38', 'zsCms', 'ssm', '<p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469612881.png\" style=\"float:none;\" title=\"cms.png\"/></p><p><img src=\"/zsTrade/static/ueditor/jsp/upload1/20161223/1482469616227.png\" style=\"float:none;\" title=\"QQ图片20161028130524.png\"/></p><p><br/></p>,', '', '18', '10', 'cms.png', '框架', '246', null, '30', '/zsTrade/static/ueditor/jsp/upload1/20161223/1482469612881.png,/zsTrade/static/ueditor/jsp/upload1/20161223/1482469616227.png,', '2', '2016-12-23 13:06:55', '0', '0', '0', '2');
INSERT INTO `t_product` VALUES ('39', 'zscatLte分布式框架', 'spring', '<p style=\"margin-bottom: 15px; orphans: 2; white-space: normal; widows: 2; box-sizing: inherit; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; background-color: rgb(250, 250, 250); margin-top: 0px !important;\">zscatLte是一个轻量级权限管理系统，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。<br style=\"box-sizing: inherit;\"/>使用zscatLte搭建项目，只需编写30%左右代码，其余的代码交给系统自动生成。<br style=\"box-sizing: inherit;\"/>一个月的工作量，一周就能完成，剩余的时间可以陪家人、朋友、撩妹、钓凯子等，从此踏入高富帅、白富美行业。</p><p style=\"margin-top: 0px; margin-bottom: 15px; orphans: 2; white-space: normal; widows: 2; box-sizing: inherit; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; background-color: rgb(250, 250, 250);\"><strong style=\"box-sizing: inherit;\">具有如下特点</strong></p><ul class=\"task-list\" style=\"orphans: 2; white-space: normal; widows: 2; box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; background-color: rgb(250, 250, 250);\"><li>轻量级的权限系统，只涉及Spring、Shiro、Mybatis后端框架，降低学习使用成本</li><li>友好的代码结构及注释，便于阅读及二次开发</li><li>支持HTML、JSP、Velocity、Freemarker等视图，零技术门槛</li><li>灵活的权限控制，可控制到页面或按钮，满足绝大部分的权限需求(如需控制到按钮级别，需使用Shiro标签，控制按钮的显示或隐藏)</li><li>页面交互使用Vue2.x，极大的提高了开发效率</li><li>完善的代码生成机制，可在线生成entity、xml、dao、service、page、js代码，减少70%以上的开发任务</li><li>引入quartz定时任务，可动态完成任务的添加、修改、删除、暂停、恢复及日志查看等功能</li><li>引入路由机制，刷新页面会停留在当前页</li></ul><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833332927.png\" style=\"float:none;\" title=\"blog.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833337146.png\" style=\"float:none;\" title=\"gen.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833336912.png\" style=\"float:none;\" title=\"menu.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833335881.png\" style=\"float:none;\" title=\"zscatlte.png\"/></p><p><br/></p>,', 'zscatLte是一个轻量级权限管理系统，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。使用zscatLte搭建项目，只需编写30%左右代码，其余的代码交给系统自动生成。一个月的工作量，一周就能完成，剩余的时间可以陪家人、朋友、撩妹、钓凯子等，从此踏入高富帅、白富美行业。具有如下特点轻量级的权限系统，只', '49', '11', 'zscatlte.png', '框架', '247', null, '50', '/static/ueditor/jsp/upload1/20161227/1482833332927.png,/static/ueditor/jsp/upload1/20161227/1482833337146.png,/static/ueditor/jsp/upload1/20161227/1482833336912.png,', '34', '2016-12-27 18:08:57', '0', '0', '0', '1');
INSERT INTO `t_product` VALUES ('40', 'java后台框架', 'hibernate', '<p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833394317.png\" style=\"float:none;\" title=\"blog.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833403014.png\" style=\"float:none;\" title=\"menu.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833395840.png\" style=\"float:none;\" title=\"role.png\"/></p><p><br/></p>,', '', '41', '10', 'blog.png', '框架', '247', null, '1', '/static/ueditor/jsp/upload1/20161227/1482833394317.png,/static/ueditor/jsp/upload1/20161227/1482833403014.png,/static/ueditor/jsp/upload1/20161227/1482833395840.png,', '34', '2017-01-24 18:09:58', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('41', 'ssh后台框架_activiy5', 'ssh', '<h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\">ommon</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>泛型封装dao、service、controller基类，包含分页，查询条件封装，从而达到快速crud操作(参考<a href=\"https://github.com/springside\" target=\"_blank\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; margin-top: 0px; margin-bottom: 0px; background-position: initial initial; background-repeat: initial initial;\">springside4</a>&quot;)</li><li>简易代码生成器,增加字段配置功能、生成页面功能，实现增删查改不需要写一句代码(参考<a href=\"https://github.com/thinkgem/jeesite\" target=\"_blank\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; margin-top: 0px; margin-bottom: 0px; background-position: initial initial; background-repeat: initial initial;\">jeesite</a>)</li><li>ehcache缓存</li><li>springmvc 整合hibernate validater 进行后端数据验证</li></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"系统权限管理_6\" href=\"http://git.oschina.net/rguess/thinker#系统权限管理_6\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>系统权限管理</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>系统管理——包含用户、角色、权限、资源、菜单管理</li><li>权限管理——使用框架apache shiro进行系统认证、授权操作</li><ul class=\"task-list\" style=\"box-sizing: inherit; margin: 0px; padding-left: 30px;\"><li>系统认证、授权操作</li><li>按钮粒度的权限控制</li><li>并发登录人数控制</li><li>后端使用注解进行方法级别的权限控制</li></ul><li>系统登录,操作日志记录,查询,分析</li></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"oa工作流程_7\" href=\"http://git.oschina.net/rguess/thinker#oa工作流程_7\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>OA工作流程</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>集成activiti(工作流引擎)</li><ul class=\"task-list\" style=\"box-sizing: inherit; margin: 0px; padding-left: 30px;\"><li>整合spring</li><li>工作流引擎并完成工作流通用基类、常用工具类</li><li>通用待办,已办,我的流程等常用查询</li><li>定义业务开发需实现的接口</li><li>流程部署</li><li>请假流程例子</li><li>自由工作流设计例子</li></ul></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"内容管理_8\" href=\"http://git.oschina.net/rguess/thinker#内容管理_8\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>内容管理</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>实现栏目，文章，系统静态资源的管理</li><li>实现上传word发表文章</li><li>实现ueditor富文本方式发表文章</li><li>aop+freemarker+线程实现首页静态化</li><li>实现多个站点的管理</li><li>基于该cms的个人博客网站</li></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"utils_9\" href=\"http://git.oschina.net/rguess/thinker#utils_9\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>utils</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>开发中常用工具类整理</li><ul class=\"task-list\" style=\"box-sizing: inherit; margin: 0px; padding-left: 30px;\"><li>基于apache poi的通用导出excel工具类</li><li>各种类型相互转化工具类</li><li>Http与Servlet工具类</li><li>常用日期处理工具类</li><li>各种编码,解码,加密等工作类</li><li>反射操作封装</li><li>文件操作</li><li>WordToHtml</li><li>spring注解方式实现定时任务调度，实现mysql数据备份</li><li>...</li></ul><li>整理了丰富多样的js、jquery插件</li><ul class=\"task-list\" style=\"box-sizing: inherit; margin: 0px; padding-left: 30px;\"><li>bootstrap</li><li>jquery validation、修改验证后显示以适应bootstrap，显得更加美观、添加常用验证</li><li>自定义的js分页插件(配合bootstrap-paginator)</li><li>ztree(jquery 树插件)</li><li>datetimepicker(日历控件)</li><li>gritter(提示框)</li><li>jquery-slimscroll(定义局部元素滚动)</li><li>jquery-treegrid(树插件能更好的与bootstrap table融合以展示数据)</li><li>bootstrap-tree(简易的树插件)</li><li>chosen-bootstrap(下拉框选择控件)</li><li>font-awesome(字体)</li><li>uniform(表单美化)</li><li>jquery blockUI(遮罩层)</li><li>ueditor(富文本编辑器)</li><li>bootstrap-fileupload</li><li>jquery fileupload多文件上传带进度条</li><li>....</li></ul></ul><h3 style=\"box-sizing: inherit; font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; line-height: 1.33em; margin: 20px 0px 10px; padding: 0px; font-size: 18px; -webkit-font-smoothing: antialiased; cursor: text; position: relative; color: rgba(0, 0, 0, 0.8); white-space: normal; background-color: rgb(250, 250, 250);\"><a class=\"anchor\" id=\"others_10\" href=\"http://git.oschina.net/rguess/thinker#others_10\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer; word-wrap: break-word; display: block; padding-left: 30px; margin-left: -20px; position: absolute; top: 0px; left: 0px; bottom: 0px; outline: none; background-position: initial initial; background-repeat: initial initial;\"></a>others</h3><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>集成jsper report动态报表工具(未完成)</li><li>jpush消息推送</li></ul><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833523239.png\" style=\"float:none;\" title=\"cms.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833525442.png\" style=\"float:none;\" title=\"liuc2.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833517232.png\" style=\"float:none;\" title=\"menu.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833524270.png\" style=\"float:none;\" title=\"role1.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833524459.png\" style=\"float:none;\" title=\"流程.png\"/></p><p><br/></p>,', 'ommon泛型封装dao、service、controller基类，包含分页，查询条件封装，从而达到快速crud操作(参考springside4\")简易代码生成器,增加字段配置功能、生成页面功能，实现增删查改不需要写一句代码(参考jeesite)ehcache缓存springmvc 整合hibernate v', '23', '10', 'home1.png', '框架', '247', null, '50', '/static/ueditor/jsp/upload1/20161227/1482833523239.png,/static/ueditor/jsp/upload1/20161227/1482833525442.png,/static/ueditor/jsp/upload1/20161227/1482833517232.png,', '34', '2016-12-27 18:12:03', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('42', '因库网校系统', 'ssm', '<p style=\"box-sizing: inherit; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250); margin-top: 0px !important;\"><strong style=\"box-sizing: inherit;\">免费开源网校系统源代码轻松搭建在线教育平台</strong></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">因酷交流群①：468278040 (满)</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\"><br/></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">因酷交流群②：164295773</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">官网:<a href=\"http://http//www.inxedu.com\" class=\"md_relative_url\" target=\"_blank\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; background-position: initial initial; background-repeat: initial initial;\">http://www.inxedu.com</a></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">演示站:<a href=\"http://http//demo1.inxedu.com\" class=\"md_relative_url\" target=\"_blank\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; background-position: initial initial; background-repeat: initial initial;\">http://demo1.inxedu.com</a></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">账号:<a href=\"mailto:demo@inxedu.com\" style=\"box-sizing: inherit; color: rgb(65, 131, 196); text-decoration: none; background-color: transparent; cursor: pointer !important; word-wrap: break-word; background-position: initial initial; background-repeat: initial initial;\">demo@inxedu.com</a></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">密码:111111<br style=\"box-sizing: inherit;\"/><br style=\"box-sizing: inherit;\"/>网站功能模块:</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">课程功能</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">咨询功能</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">问答功能</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">首页banner推荐</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">播放模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">个人中心模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">个人资料模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">修改头像模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">收藏课程模块</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">问题总结:<br style=\"box-sizing: inherit;\"/>项目导入如果get set报错请添加lombok插件就可以正常使用了</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\"><strong style=\"box-sizing: inherit;\">技术框架</strong></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">核心框架：Spring Framework</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">视图框架：Spring MVC</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">持久层框架：MyBatis 3</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">JS框架：jQuery</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">富文本：kindeditor</p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\"><strong style=\"box-sizing: inherit;\">开发环境</strong></p><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">建议开发者使用以下环境，这样避免版本带来的问题</p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833798198.png\" style=\"float:none;\" title=\"1index.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833794932.png\" style=\"float:none;\" title=\"2index.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482833799763.png\" style=\"float:none;\" title=\"3index.png\"/></p><p><br/></p>,', '免费开源网校系统源代码轻松搭建在线教育平台因酷交流群①：468278040 (满)因酷交流群②：164295773官网:http://www.inxedu.com演示站:http://demo1.inxedu.com账号:demo@inxedu.com密码:111111网站功能模块:课程功能咨询功能问答功能首', '5', '10', '1index.png', '框架', '238', null, '1', '/static/ueditor/jsp/upload1/20161227/1482833798198.png,/static/ueditor/jsp/upload1/20161227/1482833794932.png,/static/ueditor/jsp/upload1/20161227/1482833799763.png,', '34', '2016-12-27 18:16:38', '0', '0', '0', '1');
INSERT INTO `t_product` VALUES ('43', 'jeesite后台框架', '', '<p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">1、后端</p><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>核心框架：Spring Framework 4.1</li><li>安全框架：Apache Shiro 1.2</li><li>视图框架：Spring MVC 4.1</li><li>服务端验证：Hibernate Validator 5.2</li><li>布局框架：SiteMesh 2.4</li><li>工作流引擎：Activiti 5.21</li><li>任务调度：Spring Task 4.1</li><li>持久层框架：MyBatis 3.2</li><li>数据库连接池：Alibaba Druid 1.0</li><li>缓存框架：Ehcache 2.6、Redis</li><li>日志管理：SLF4J 1.7、Log4j</li><li>工具类：Apache Commons、Jackson 2.2、Xstream 1.4、Dozer 5.3、POI 3.9</li></ul><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">2、前端</p><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>JS框架：jQuery 1.9。</li><li>CSS框架：Twitter Bootstrap 2.3.1（稳定是后台，UI方面根据需求自己升级改造吧）。</li><li>客户端验证：JQuery Validation Plugin 1.11。</li><li>富文本在线编辑：CKEditor</li><li>在线文件管理：CKFinder</li><li>动态页签：Jerichotab</li><li>手机端框架：Jingle</li><li>数据表格：jqGrid</li><li>对话框：jQuery jBox</li><li>下拉选择框：jQuery Select2</li><li>树结构控件：jQuery zTree</li><li>日期控件： My97DatePicker</li></ul><p style=\"box-sizing: inherit; margin-top: 0px; margin-bottom: 15px; line-height: 25px; text-align: justify; word-break: break-word; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; font-size: 15px; white-space: normal; background-color: rgb(250, 250, 250);\">4、平台</p><ul class=\"task-list\" style=\"box-sizing: inherit; font-size: 14px; line-height: 24px; margin: 0px 0px 15px; padding-left: 30px; color: rgba(0, 0, 0, 0.8); font-family: Lato, &#39;Helvetica Neue&#39;, Arial, Helvetica, &#39;Microsoft YaHei&#39;, sans-serif; white-space: normal; background-color: rgb(250, 250, 250);\"><li>服务器中间件：在Java EE 5规范（Servlet 2.5、JSP 2.1）下开发，支持应用服务器中间件 有Tomcat 6+、Jboss 7+、WebLogic 10+、WebSphere 8+。</li><li>数据库支持：目前仅提供MySql和Oracle数据库的支持，但不限于数据库，平台留有其它数据库支持接口， 你可以很方便的更改为其它数据库，如：SqlServer 2008、MySql 5.5、H2等</li><li>开发环境：Java、Eclipse Java EE 4.3、Maven 3.1、Git</li></ul><p><br/></p>,', '1、后端核心框架：Spring Framework 4.1安全框架：Apache Shiro 1.2视图框架：Spring MVC 4.1服务端验证：Hibernate Validator 5.2布局框架：SiteMesh 2.4工作流引擎：Activiti 5.21任务调度：Spring Task 4.1持', '16', '10', 'zscat.png', '框架', '247', null, '', '', '34', '2016-12-27 18:21:25', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('44', 'zscat_妹子后台框架', 'ssm', '<p><img src=\"/static/ueditor/jsp/upload1/20161227/1482834426033.png\" style=\"float:none;\" title=\"1meizi.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482834430190.png\" style=\"float:none;\" title=\"2meizi.png\"/></p><p><img src=\"/static/ueditor/jsp/upload1/20161227/1482834431132.png\" style=\"float:none;\" title=\"3妹子1.png\"/></p><p><br/></p>,', '', '30', '10', '1meizi.png', '框架', '247', null, '55', '/static/ueditor/jsp/upload1/20161227/1482834426033.png,/static/ueditor/jsp/upload1/20161227/1482834430190.png,/static/ueditor/jsp/upload1/20161227/1482834431132.png,', '34', '2016-12-27 18:27:07', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('49', '华迪空气净化器KJ420P-HD280', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>品牌:&nbsp;华迪</li><li>型号:&nbsp;KJ420P-HD280</li><li>噪音:&nbsp;0-35dB</li><li>控制方式:&nbsp;其他</li><li>智能类型:&nbsp;其他</li><li>颗粒物CADR值:&nbsp;420.1立方米/小时</li><li>颗粒物CCM值:&nbsp;P4(12000≤M)</li><li>风量:&nbsp;600立方米/小时</li><li>适用面积:&nbsp;30m^2-50m^2</li><li>功能:&nbsp;定时 除VOC 除花粉 除颗粒物 除甲醛 除烟除尘 杀菌 加湿 加氧</li><li>空气净化产品类别:&nbsp;空气净化器</li><li>风量:&nbsp;400 立方米/小时以上</li><li>电源方式:&nbsp;交流电</li><li>售后服务:&nbsp;店铺三包</li><li>适用对象:&nbsp;家用 卧室 办公室</li><li>空气净化器风量:&nbsp;400 立方米/小时</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2Qmv4XrRkpuFjSspmXXc.9XXa_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2XOn3XxXlpuFjSsphXXbJOXXa_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2JCv4Xr8kpuFjy0FcXXaUhpXa_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2Nrj2XBNkpuFjy0FaXXbRCVXa_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB22Wv4XwJlpuFjSspjXXcT.pXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"567\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2plL4XC0jpuFjy0FlXXc0bpXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"567\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2T6T3XrVkpuFjSspcXXbSMVXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"531\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2TRL4XC0jpuFjy0FlXXc0bpXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"720\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2nzn2Xw0kpuFjSspdXXX4YXXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"759\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2Wmz4Xr8kpuFjy0FcXXaUhpXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"828\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2GAn3XxXkpuFjy0FiXXbUfFXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"684\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2PAn3XxXkpuFjy0FiXXbUfFXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"477\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2_Y_3XCtkpuFjy0FhXXXQzFXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"720\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2VJP4XrtlpuFjSspoXXbcDpXa_!!2591435385.jpg\" class=\"\" width=\"750\" height=\"651\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/></p><p><br/></p>,', '品牌: 华迪型号: KJ420P-HD280噪音: 0-35dB控制方式: 其他智能类型: 其他颗粒物CADR值: 420.1立方米/小时颗粒物CCM值: P4(12000≤M)风量: 600立方米/小时适用面积: 30m^2-50m^2功能: 定时 除VOC 除花粉 除颗粒物 除甲醛 除烟除尘 杀菌 加湿 ', '11', '13', '1智能.jpg', '智能家居', '250', null, '3980', 'https://img.alicdn.com/imgextra/i2/2591435385/TB2Qmv4XrRkpuFjSspmXXc.9XXa_!!2591435385.jpg,https://img.alicdn.com/imgextra/i2/2591435385/TB2XOn3XxXlpuFjSsphXXbJOXXa_!!2591435385.jpg,https://img.alicdn.com/imgextra/i1/2591435385/TB2JCv4Xr8kpuFjy0FcXXaUhpXa_!!2591435385.jpg,', '72', '2017-01-06 13:22:42', '0', '0', '0', '2');
INSERT INTO `t_product` VALUES ('50', '华迪智能空气净化器', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>品牌:&nbsp;华迪</li><li>型号:&nbsp;HD-AP100</li><li>智能类型:&nbsp;其他</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><img src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2Jw99spXXXXcNXpXXXXXXXXXX_!!2591435385.png\" align=\"absmiddle\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2MW2xspXXXXXVXpXXXXXXXXXX_!!2591435385.png\" align=\"absmiddle\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2xO6yspXXXXXVXpXXXXXXXXXX_!!2591435385.png\" align=\"absmiddle\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2Tcm_spXXXXXiXFXXXXXXXXXX_!!2591435385.png\" align=\"absmiddle\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2oxv8spXXXXXCXXXXXXXXXXXX_!!2591435385.png\" class=\"\" align=\"absmiddle\" width=\"800\" height=\"626\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2xOHgspXXXXceXpXXXXXXXXXX_!!2591435385.png\" class=\"\" align=\"absmiddle\" width=\"800\" height=\"610\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2JTHLspXXXXcqXXXXXXXXXXXX_!!2591435385.png\" class=\"\" align=\"absmiddle\" width=\"800\" height=\"539\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/></p><p><br/></p>,', '品牌: 华迪型号: HD-AP100智能类型: 其他', '11', '13', '1智能.jpg', '智能家居', '250', null, '2280', 'https://img.alicdn.com/imgextra/i2/2591435385/TB2Jw99spXXXXcNXpXXXXXXXXXX_!!2591435385.png,https://img.alicdn.com/imgextra/i3/2591435385/TB2MW2xspXXXXXVXpXXXXXXXXXX_!!2591435385.png,https://img.alicdn.com/imgextra/i4/2591435385/TB2xO6yspXXXXXVXpXXXXXXXXXX_!!2591435385.png,', '72', '2017-01-06 13:24:02', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('51', '华迪智能网关HDG6200', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>兼容平台:&nbsp;ANDROID</li><li>品牌:&nbsp;华迪</li><li>连接方式:&nbsp;Wi-Fi连接</li><li>颜色:&nbsp;白色</li><li>颜色分类:&nbsp;白色</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><span style=\"color: rgb(108, 108, 108); line-height: 14.4px; font-size: 12px;\">支持智能家居功能、云电脑功能、网络机顶盒功能、无线路由器热点功能、支持与指定型号智能路由器家庭联网功能、支持物业管理系统、支持宽频系统、整合支持数百个互联网应用<img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2R5nXspXXXXa_XpXXXXXXXXXX_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2EfYaspXXXXbPXpXXXXXXXXXX_!!2591435385.jpg\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/></span></p><p><br/></p>,', '兼容平台: ANDROID品牌: 华迪连接方式: Wi-Fi连接颜色: 白色颜色分类: 白色支持智能家居功能、云电脑功能、网络机顶盒功能、无线路由器热点功能、支持与指定型号智能路由器家庭联网功能、支持物业管理系统、支持宽频系统、整合支持数百个互联网应用', '0', '13', '3智能.png', '智能家居', '251', null, '339', 'https://img.alicdn.com/imgextra/i4/2591435385/TB2R5nXspXXXXa_XpXXXXXXXXXX_!!2591435385.jpg,https://img.alicdn.com/imgextra/i1/2591435385/TB2EfYaspXXXXbPXpXXXXXXXXXX_!!2591435385.jpg,', '72', '2017-01-06 13:25:33', '0', '0', '0', '2');
INSERT INTO `t_product` VALUES ('52', '华迪智能插排', '', '<p><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2fBlRaH1K.eBjSszbXXcTHpXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2jAxMaHaI.eBjSspaXXXIKpXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i4/2591435385/TB2WeRSaNmJ.eBjy0FhXXbBdFXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2o1RQaIeJ.eBjy0FiXXXqapXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 750px;\"/></p>,', '', '1', '13', '4智能.jpg', '智能家居', '251', null, '139', 'https://img.alicdn.com/imgextra/i3/2591435385/TB2fBlRaH1K.eBjSszbXXcTHpXa_!!2591435385.png,https://img.alicdn.com/imgextra/i2/2591435385/TB2jAxMaHaI.eBjSspaXXXIKpXa_!!2591435385.png,https://img.alicdn.com/imgextra/i4/2591435385/TB2WeRSaNmJ.eBjy0FhXXbBdFXa_!!2591435385.png,', '72', '2017-01-06 13:26:38', '0', '0', '0', null);
INSERT INTO `t_product` VALUES ('53', '华迪智能控制面板', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>品牌:&nbsp;华迪</li><li>型号:&nbsp;HD-CP100</li><li>智能类型:&nbsp;其他</li><li>颜色分类:&nbsp;白色 黑色</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2FvL6aigSXeFjy0FcXXahAXXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB29AVQaHaI.eBjSszdXXaB6XXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2BztNaHeI.eBjSspkXXaXqVXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2EvP6aigSXeFjy0FcXXahAXXa_!!2591435385.png\" style=\"border: 0px; vertical-align: top; max-width: 750px;\"/></p><p><br/></p>,', '品牌: 华迪型号: HD-CP100智能类型: 其他颜色分类: 白色 黑色', '6', '13', '5智能.png', '智能家居', '251', null, '129', 'https://img.alicdn.com/imgextra/i3/2591435385/TB2FvL6aigSXeFjy0FcXXahAXXa_!!2591435385.png,https://img.alicdn.com/imgextra/i2/2591435385/TB29AVQaHaI.eBjSszdXXaB6XXa_!!2591435385.png,https://img.alicdn.com/imgextra/i1/2591435385/TB2BztNaHeI.eBjSspkXXaXqVXa_!!2591435385.png,', '72', '2017-01-06 13:27:41', '0', '0', '0', '1');
INSERT INTO `t_product` VALUES ('54', '华迪智能灯泡', '', '<ul class=\"attributes-list\" style=\"margin: 0px; padding: 0px 15px; list-style: none; clear: both;\"><li>品牌:&nbsp;华迪</li><li>型号:&nbsp;HD-LL100</li><li>智能类型:&nbsp;其他</li><li>颜色分类:&nbsp;白色</li></ul><p style=\"margin-top: 1.12em; margin-bottom: 1.12em; padding: 0px;\"><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB2lxjGoFXXXXa0XXXXXXXXXXXX_!!2591435385.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i2/2591435385/TB2Tb_woFXXXXcxXXXXXXXXXXXX_!!2591435385.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i3/2591435385/TB28PHAoFXXXXaGXXXXXXXXXXXX_!!2591435385.png\" style=\"border: 0px; vertical-align: top;\"/><img align=\"absmiddle\" src=\"https://img.alicdn.com/imgextra/i1/2591435385/TB2ZVHuoFXXXXXAXpXXXXXXXXXX_!!2591435385.png\" style=\"border: 0px; vertical-align: top;\"/></p><p><br/></p>,', '品牌: 华迪型号: HD-LL100智能类型: 其他颜色分类: 白色', '3', '13', '6智能.png', '智能家居', '251', null, '99', 'https://img.alicdn.com/imgextra/i3/2591435385/TB2lxjGoFXXXXa0XXXXXXXXXXXX_!!2591435385.png,https://img.alicdn.com/imgextra/i2/2591435385/TB2Tb_woFXXXXcxXXXXXXXXXXXX_!!2591435385.png,https://img.alicdn.com/imgextra/i3/2591435385/TB28PHAoFXXXXaGXXXXXXXXXXXX_!!2591435385.png,', '72', '2017-01-06 13:28:46', '0', '0', '0', '2');

-- ----------------------------
-- Table structure for t_producttype
-- ----------------------------
DROP TABLE IF EXISTS `t_producttype`;
CREATE TABLE `t_producttype` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `create_by` bigint(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记(0活null 正常 1,删除)',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_producttype
-- ----------------------------
INSERT INTO `t_producttype` VALUES ('10', '框架', '2', '2016-12-22 09:59:15', '0');
INSERT INTO `t_producttype` VALUES ('11', 'test', '2', '2016-12-22 10:09:37', '0');

-- ----------------------------
-- Table structure for t_product_class
-- ----------------------------
DROP TABLE IF EXISTS `t_product_class`;
CREATE TABLE `t_product_class` (
  `id` bigint(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '索引ID',
  `name` varchar(100) NOT NULL COMMENT '分类名称',
  `pic` varchar(255) DEFAULT NULL COMMENT '分类图片',
  `del_flag` char(1) NOT NULL DEFAULT '1' COMMENT '前台显示，0为否，1为是，默认为1',
  `title` varchar(200) DEFAULT NULL COMMENT '名称',
  `parent_id` bigint(20) DEFAULT NULL,
  `parent_ids` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=255 DEFAULT CHARSET=utf8 COMMENT='商品分类表';

-- ----------------------------
-- Records of t_product_class
-- ----------------------------
INSERT INTO `t_product_class` VALUES ('1', '全部类别', null, '1', 'spring是很好的项目', '0', '0,');
INSERT INTO `t_product_class` VALUES ('212', '智能家居', null, '1', 'mybatis是很不错的项目2', '1', '212,0,,');
INSERT INTO `t_product_class` VALUES ('213', 'zscat系列', null, '1', 'zscat项目1', '1', '0,1,');
INSERT INTO `t_product_class` VALUES ('214', '前端/后台', null, '1', '11', '1', '0,1,');
INSERT INTO `t_product_class` VALUES ('215', 'cms项目', null, '1', '2222', '1', '1,');
INSERT INTO `t_product_class` VALUES ('216', 'oa项目', null, '1', '33', '1', '0,1,');
INSERT INTO `t_product_class` VALUES ('217', '官网项目', null, '1', '44', '1', '0,1,');
INSERT INTO `t_product_class` VALUES ('218', '餐饮项目', null, '1', null, '1', null);
INSERT INTO `t_product_class` VALUES ('228', '美容项目', null, '1', null, '1', null);
INSERT INTO `t_product_class` VALUES ('229', '宠物项目', null, '1', null, '1', null);
INSERT INTO `t_product_class` VALUES ('230', '交友项目', null, '1', null, '1', null);
INSERT INTO `t_product_class` VALUES ('231', '体育项目', null, '1', null, '1', null);
INSERT INTO `t_product_class` VALUES ('232', '后台', null, '1', '后台', '214', '0,1,214,');
INSERT INTO `t_product_class` VALUES ('233', '前端', null, '1', '前端', '214', '0,1,214,');
INSERT INTO `t_product_class` VALUES ('234', '商城项目', null, '1', '商城项目', '232', '0,1,214,232,');
INSERT INTO `t_product_class` VALUES ('235', '教育网站', null, '1', '教育网站', '232', '0,1,214,232,');
INSERT INTO `t_product_class` VALUES ('236', 'hplus', null, '1', 'hplus', '233', '0,1,214,233,');
INSERT INTO `t_product_class` VALUES ('237', 'h-ui', null, '1', 'h-ui', '233', '0,1,214,233,');
INSERT INTO `t_product_class` VALUES ('238', '商城', null, '1', null, '213', '238,0,1,,');
INSERT INTO `t_product_class` VALUES ('240', 'java', null, '1', null, '238', '240,238,0,1,,,');
INSERT INTO `t_product_class` VALUES ('241', 'php', null, '1', null, '238', '241,238,0,1,,,');
INSERT INTO `t_product_class` VALUES ('242', 'nodejs', null, '1', null, '238', '242,238,0,1,,,');
INSERT INTO `t_product_class` VALUES ('243', 'java', null, '1', null, '239', '243,239,0,1,,,');
INSERT INTO `t_product_class` VALUES ('244', 'php', null, '1', null, '239', '244,239,0,1,,,');
INSERT INTO `t_product_class` VALUES ('246', '分布式', null, '1', null, '238', '246,238,0,1,,,');
INSERT INTO `t_product_class` VALUES ('247', '后台框架', null, '1', null, '213', '247,0,1,,');
INSERT INTO `t_product_class` VALUES ('248', 'java', null, '1', null, '247', '248,247,0,1,,,');
INSERT INTO `t_product_class` VALUES ('249', 'php', null, '1', null, '247', '249,247,0,1,,,');
INSERT INTO `t_product_class` VALUES ('250', '空气净化', null, '1', null, '212', '250,212,0,,,');
INSERT INTO `t_product_class` VALUES ('251', '其他智能', null, '1', null, '212', '251,212,0,,,');
INSERT INTO `t_product_class` VALUES ('252', '空气净化器', null, '1', null, '250', '252,250,212,0,,,,');
INSERT INTO `t_product_class` VALUES ('253', '智能灯泡', null, '1', null, '251', '253,251,212,0,,,,');
INSERT INTO `t_product_class` VALUES ('254', '智能插排', null, '1', null, '251', '254,251,212,0,,,,');

-- ----------------------------
-- Table structure for t_reply
-- ----------------------------
DROP TABLE IF EXISTS `t_reply`;
CREATE TABLE `t_reply` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `goodsid` bigint(20) DEFAULT NULL,
  `content` varchar(255) DEFAULT NULL,
  `createdate` datetime DEFAULT NULL,
  `status` int(11) DEFAULT '1',
  `userid` bigint(20) DEFAULT NULL,
  `username` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_reply
-- ----------------------------
